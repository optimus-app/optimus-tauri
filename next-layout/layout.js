/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Fui%2Ftitlebar.tsx%22%2C%22ids%22%3A%5B%22Titlebar%22%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Fui%2Ftitlebar.tsx%22%2C%22ids%22%3A%5B%22Titlebar%22%5D%7D&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"} */ \"(app-pages-browser)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistVF.woff\\\",\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistSans\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"} */ \"(app-pages-browser)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistMonoVF.woff\\\",\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistMono\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/globals.css */ \"(app-pages-browser)/./src/app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/theme-provider.tsx */ \"(app-pages-browser)/./src/components/theme-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ui/titlebar.tsx */ \"(app-pages-browser)/./src/components/ui/titlebar.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZwdnBzd2FnaGQlMkZEZXNrdG9wJTJGcHJvamVjdHMlMkZmeXAlMkZvcHRpbXVzLXRhcnVpJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZsb2NhbCUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyc3JjJTJGYXBwJTJGbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMiU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnNyYyU1QyUyMiUzQSU1QyUyMi4lMkZmb250cyUyRkdlaXN0VkYud29mZiU1QyUyMiUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWdlaXN0LXNhbnMlNUMlMjIlMkMlNUMlMjJ3ZWlnaHQlNUMlMjIlM0ElNUMlMjIxMDAlMjA5MDAlNUMlMjIlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJnZWlzdFNhbnMlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZwdnBzd2FnaGQlMkZEZXNrdG9wJTJGcHJvamVjdHMlMkZmeXAlMkZvcHRpbXVzLXRhcnVpJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZsb2NhbCUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyc3JjJTJGYXBwJTJGbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMiU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnNyYyU1QyUyMiUzQSU1QyUyMi4lMkZmb250cyUyRkdlaXN0TW9ub1ZGLndvZmYlNUMlMjIlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1tb25vJTVDJTIyJTJDJTVDJTIyd2VpZ2h0JTVDJTIyJTNBJTVDJTIyMTAwJTIwOTAwJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyZ2Vpc3RNb25vJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGcHZwc3dhZ2hkJTJGRGVza3RvcCUyRnByb2plY3RzJTJGZnlwJTJGb3B0aW11cy10YXJ1aSUyRnNyYyUyRmFwcCUyRmdsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGcHZwc3dhZ2hkJTJGRGVza3RvcCUyRnByb2plY3RzJTJGZnlwJTJGb3B0aW11cy10YXJ1aSUyRnNyYyUyRmNvbXBvbmVudHMlMkZ0aGVtZS1wcm92aWRlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUaGVtZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGcHZwc3dhZ2hkJTJGRGVza3RvcCUyRnByb2plY3RzJTJGZnlwJTJGb3B0aW11cy10YXJ1aSUyRnNyYyUyRmNvbXBvbmVudHMlMkZ1aSUyRnRpdGxlYmFyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRpdGxlYmFyJTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsb2pCQUE4VDtBQUM5VDtBQUNBLDRqQkFBa1U7QUFDbFU7QUFDQSxvS0FBNEc7QUFDNUc7QUFDQSxnTUFBNko7QUFDN0o7QUFDQSwwTEFBcUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz81MDI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3B2cHN3YWdoZC9EZXNrdG9wL3Byb2plY3RzL2Z5cC9vcHRpbXVzLXRhcnVpL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XFxcInBhdGhcXFwiOlxcXCJzcmMvYXBwL2xheW91dC50c3hcXFwiLFxcXCJpbXBvcnRcXFwiOlxcXCJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInNyY1xcXCI6XFxcIi4vZm9udHMvR2Vpc3RWRi53b2ZmXFxcIixcXFwidmFyaWFibGVcXFwiOlxcXCItLWZvbnQtZ2Vpc3Qtc2Fuc1xcXCIsXFxcIndlaWdodFxcXCI6XFxcIjEwMCA5MDBcXFwifV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcImdlaXN0U2Fuc1xcXCJ9XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvcHZwc3dhZ2hkL0Rlc2t0b3AvcHJvamVjdHMvZnlwL29wdGltdXMtdGFydWkvbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcInNyYy9hcHAvbGF5b3V0LnRzeFxcXCIsXFxcImltcG9ydFxcXCI6XFxcIlxcXCIsXFxcImFyZ3VtZW50c1xcXCI6W3tcXFwic3JjXFxcIjpcXFwiLi9mb250cy9HZWlzdE1vbm9WRi53b2ZmXFxcIixcXFwidmFyaWFibGVcXFwiOlxcXCItLWZvbnQtZ2Vpc3QtbW9ub1xcXCIsXFxcIndlaWdodFxcXCI6XFxcIjEwMCA5MDBcXFwifV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcImdlaXN0TW9ub1xcXCJ9XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvcHZwc3dhZ2hkL0Rlc2t0b3AvcHJvamVjdHMvZnlwL29wdGltdXMtdGFydWkvc3JjL2FwcC9nbG9iYWxzLmNzc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVGhlbWVQcm92aWRlclwiXSAqLyBcIi9Vc2Vycy9wdnBzd2FnaGQvRGVza3RvcC9wcm9qZWN0cy9meXAvb3B0aW11cy10YXJ1aS9zcmMvY29tcG9uZW50cy90aGVtZS1wcm92aWRlci50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIlRpdGxlYmFyXCJdICovIFwiL1VzZXJzL3B2cHN3YWdoZC9EZXNrdG9wL3Byb2plY3RzL2Z5cC9vcHRpbXVzLXRhcnVpL3NyYy9jb21wb25lbnRzL3VpL3RpdGxlYmFyLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Fui%2Ftitlebar.tsx%22%2C%22ids%22%3A%5B%22Titlebar%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={592:(e,r,t)=>{var n=t(722);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},722:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(592);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz9mYTdiIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs1OTI6KGUscix0KT0+e3ZhciBuPXQoNzIyKTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDcyMjplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNTkyKTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"3f4d06c7fd91\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/ZjFiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjNmNGQwNmM3ZmQ5MVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/theme-provider.tsx":
/*!*******************************************!*\
  !*** ./src/components/theme-provider.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: function() { return /* binding */ ThemeProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider auto */ \n\n\nfunction ThemeProvider(param) {\n    let { children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        ...props,\n        children: [\n            \" \",\n            children,\n            \" \"\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/theme-provider.tsx\",\n        lineNumber: 10,\n        columnNumber: 10\n    }, this);\n}\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3RoZW1lLXByb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFOEI7QUFDbUM7QUFFMUQsU0FBU0MsY0FBYyxLQUdvQjtRQUhwQixFQUM1QkUsUUFBUSxFQUNSLEdBQUdDLE9BQzZDLEdBSHBCO0lBSTVCLHFCQUFPLDhEQUFDRixzREFBa0JBO1FBQUUsR0FBR0UsS0FBSzs7WUFBRTtZQUFFRDtZQUFTOzs7Ozs7O0FBQ25EO0tBTGdCRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy90aGVtZS1wcm92aWRlci50c3g/YjY5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgVGhlbWVQcm92aWRlciBhcyBOZXh0VGhlbWVzUHJvdmlkZXIgfSBmcm9tIFwibmV4dC10aGVtZXNcIlxuXG5leHBvcnQgZnVuY3Rpb24gVGhlbWVQcm92aWRlcih7XG4gIGNoaWxkcmVuLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIE5leHRUaGVtZXNQcm92aWRlcj4pIHtcbiAgcmV0dXJuIDxOZXh0VGhlbWVzUHJvdmlkZXIgey4uLnByb3BzfT4ge2NoaWxkcmVufSA8L05leHRUaGVtZXNQcm92aWRlcj5cbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlRoZW1lUHJvdmlkZXIiLCJOZXh0VGhlbWVzUHJvdmlkZXIiLCJjaGlsZHJlbiIsInByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/theme-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ui/titlebar.tsx":
/*!****************************************!*\
  !*** ./src/components/ui/titlebar.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Titlebar: function() { return /* binding */ Titlebar; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Minus,Square,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/minus.js\");\n/* harmony import */ var _barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Minus,Square,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/square.js\");\n/* harmony import */ var _barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Minus,Square,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./src/lib/utils.ts\");\n/* harmony import */ var _tauri_apps_api_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tauri-apps/api/window */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/window.js\");\n/* __next_internal_client_entry_do_not_use__ Titlebar auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction Titlebar(param) {\n    let { title = \"Optimus CLI\", className, ...props } = param;\n    _s();\n    // We need to use client-side code to access the Tauri API\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    // Add this useEffect to update the mounted state when component mounts\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        setMounted(true);\n    }, []);\n    // Handle window actions\n    const handleMinimize = async ()=>{\n        try {\n            const appWindow = (0,_tauri_apps_api_window__WEBPACK_IMPORTED_MODULE_3__.getCurrentWindow)();\n            await appWindow.minimize();\n        } catch (e) {\n            console.error(\"Failed to minimize window\", e);\n        }\n    };\n    const handleMaximize = async ()=>{\n        try {\n            const appWindow = (0,_tauri_apps_api_window__WEBPACK_IMPORTED_MODULE_3__.getCurrentWindow)();\n            await appWindow.toggleMaximize();\n        } catch (e) {\n            console.error(\"Failed to maximize window\", e);\n        }\n    };\n    const handleClose = async ()=>{\n        try {\n            const appWindow = (0,_tauri_apps_api_window__WEBPACK_IMPORTED_MODULE_3__.getCurrentWindow)();\n            await appWindow.close();\n        } catch (e) {\n            console.error(\"Failed to close window\", e);\n        }\n    };\n    const handleTitleBarMouseDown = async (e)=>{\n        if (e.buttons === 1) {\n            try {\n                const appWindow = (0,_tauri_apps_api_window__WEBPACK_IMPORTED_MODULE_3__.getCurrentWindow)();\n                if (e.detail === 2) {\n                    // Double click to maximize/restore\n                    await appWindow.toggleMaximize();\n                } else {\n                    // Start dragging on single click\n                    await appWindow.startDragging();\n                }\n            } catch (e) {\n                console.error(\"Failed to interact with window\", e);\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"h-8 bg-background border-b border-border flex items-center justify-between select-none fixed top-0 left-0 right-0 z-50 w-full\", className),\n        onMouseDown: handleTitleBarMouseDown,\n        \"data-tauri-drag-region\": true,\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"px-3 text-sm font-medium\",\n                children: title\n            }, void 0, false, {\n                fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                lineNumber: 80,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"h-8 w-12 inline-flex items-center justify-center hover:bg-muted transition-colors\",\n                        onClick: handleMinimize,\n                        \"aria-label\": \"Minimize\",\n                        disabled: !mounted,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            className: \"h-4 w-4\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                            lineNumber: 89,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                        lineNumber: 83,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"h-8 w-12 inline-flex items-center justify-center hover:bg-muted transition-colors\",\n                        onClick: handleMaximize,\n                        \"aria-label\": \"Maximize\",\n                        disabled: !mounted,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            className: \"h-4 w-4\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                            lineNumber: 97,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                        lineNumber: 91,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"h-8 w-12 inline-flex items-center justify-center hover:bg-red-500/90 group transition-colors\",\n                        onClick: handleClose,\n                        \"aria-label\": \"Close\",\n                        disabled: !mounted,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Minus_Square_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            className: \"h-4 w-4 group-hover:text-white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                            lineNumber: 105,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n                lineNumber: 82,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/pvpswaghd/Desktop/projects/fyp/optimus-tarui/src/components/ui/titlebar.tsx\",\n        lineNumber: 71,\n        columnNumber: 9\n    }, this);\n}\n_s(Titlebar, \"LrrVfNW3d1raFE0BNzCTILYmIfo=\");\n_c = Titlebar;\nvar _c;\n$RefreshReg$(_c, \"Titlebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3VpL3RpdGxlYmFyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUUrQjtBQUNpQjtBQUNmO0FBQ3lCO0FBTW5ELFNBQVNNLFNBQVMsS0FJVDtRQUpTLEVBQ3JCQyxRQUFRLGFBQWEsRUFDckJDLFNBQVMsRUFDVCxHQUFHQyxPQUNTLEdBSlM7O0lBS3JCLDBEQUEwRDtJQUMxRCxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR1gsMkNBQWMsQ0FBQztJQUU3Qyx1RUFBdUU7SUFDdkVBLDRDQUFlLENBQUM7UUFDWlcsV0FBVztJQUNmLEdBQUcsRUFBRTtJQUVMLHdCQUF3QjtJQUN4QixNQUFNRyxpQkFBaUI7UUFDbkIsSUFBSTtZQUNBLE1BQU1DLFlBQVlWLHdFQUFnQkE7WUFDbEMsTUFBTVUsVUFBVUMsUUFBUTtRQUM1QixFQUFFLE9BQU9DLEdBQUc7WUFDUkMsUUFBUUMsS0FBSyxDQUFDLDZCQUE2QkY7UUFDL0M7SUFDSjtJQUVBLE1BQU1HLGlCQUFpQjtRQUNuQixJQUFJO1lBQ0EsTUFBTUwsWUFBWVYsd0VBQWdCQTtZQUNsQyxNQUFNVSxVQUFVTSxjQUFjO1FBQ2xDLEVBQUUsT0FBT0osR0FBRztZQUNSQyxRQUFRQyxLQUFLLENBQUMsNkJBQTZCRjtRQUMvQztJQUNKO0lBRUEsTUFBTUssY0FBYztRQUNoQixJQUFJO1lBQ0EsTUFBTVAsWUFBWVYsd0VBQWdCQTtZQUNsQyxNQUFNVSxVQUFVUSxLQUFLO1FBQ3pCLEVBQUUsT0FBT04sR0FBRztZQUNSQyxRQUFRQyxLQUFLLENBQUMsMEJBQTBCRjtRQUM1QztJQUNKO0lBRUEsTUFBTU8sMEJBQTBCLE9BQU9QO1FBQ25DLElBQUlBLEVBQUVRLE9BQU8sS0FBSyxHQUFHO1lBQ2pCLElBQUk7Z0JBQ0EsTUFBTVYsWUFBWVYsd0VBQWdCQTtnQkFDbEMsSUFBSVksRUFBRVMsTUFBTSxLQUFLLEdBQUc7b0JBQ2hCLG1DQUFtQztvQkFDbkMsTUFBTVgsVUFBVU0sY0FBYztnQkFDbEMsT0FBTztvQkFDSCxpQ0FBaUM7b0JBQ2pDLE1BQU1OLFVBQVVZLGFBQWE7Z0JBQ2pDO1lBQ0osRUFBRSxPQUFPVixHQUFHO2dCQUNSQyxRQUFRQyxLQUFLLENBQUMsa0NBQWtDRjtZQUNwRDtRQUNKO0lBQ0o7SUFFQSxxQkFDSSw4REFBQ1c7UUFDR3BCLFdBQVdKLDhDQUFFQSxDQUNULGlJQUNBSTtRQUVKcUIsYUFBYUw7UUFDYk0sd0JBQXNCO1FBQ3JCLEdBQUdyQixLQUFLOzswQkFFVCw4REFBQ21CO2dCQUFJcEIsV0FBVTswQkFBNEJEOzs7Ozs7MEJBRTNDLDhEQUFDcUI7Z0JBQUlwQixXQUFVOztrQ0FDWCw4REFBQ3VCO3dCQUNHdkIsV0FBVTt3QkFDVndCLFNBQVNsQjt3QkFDVG1CLGNBQVc7d0JBQ1hDLFVBQVUsQ0FBQ3hCO2tDQUVYLDRFQUFDUiwwRkFBS0E7NEJBQUNNLFdBQVU7Ozs7Ozs7Ozs7O2tDQUVyQiw4REFBQ3VCO3dCQUNHdkIsV0FBVTt3QkFDVndCLFNBQVNaO3dCQUNUYSxjQUFXO3dCQUNYQyxVQUFVLENBQUN4QjtrQ0FFWCw0RUFBQ1AsMEZBQU1BOzRCQUFDSyxXQUFVOzs7Ozs7Ozs7OztrQ0FFdEIsOERBQUN1Qjt3QkFDR3ZCLFdBQVU7d0JBQ1Z3QixTQUFTVjt3QkFDVFcsY0FBVzt3QkFDWEMsVUFBVSxDQUFDeEI7a0NBRVgsNEVBQUNULDBGQUFDQTs0QkFBQ08sV0FBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLakM7R0FsR2dCRjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy91aS90aXRsZWJhci50c3g/MmRhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBYLCBNaW51cywgU3F1YXJlIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcbmltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL3dpbmRvd1wiO1xuXG5pbnRlcmZhY2UgVGl0bGViYXJQcm9wcyBleHRlbmRzIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiB7XG4gICAgdGl0bGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUaXRsZWJhcih7XG4gICAgdGl0bGUgPSBcIk9wdGltdXMgQ0xJXCIsXG4gICAgY2xhc3NOYW1lLFxuICAgIC4uLnByb3BzXG59OiBUaXRsZWJhclByb3BzKSB7XG4gICAgLy8gV2UgbmVlZCB0byB1c2UgY2xpZW50LXNpZGUgY29kZSB0byBhY2Nlc3MgdGhlIFRhdXJpIEFQSVxuICAgIGNvbnN0IFttb3VudGVkLCBzZXRNb3VudGVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcblxuICAgIC8vIEFkZCB0aGlzIHVzZUVmZmVjdCB0byB1cGRhdGUgdGhlIG1vdW50ZWQgc3RhdGUgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0TW91bnRlZCh0cnVlKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBIYW5kbGUgd2luZG93IGFjdGlvbnNcbiAgICBjb25zdCBoYW5kbGVNaW5pbWl6ZSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGFwcFdpbmRvdyA9IGdldEN1cnJlbnRXaW5kb3coKTtcbiAgICAgICAgICAgIGF3YWl0IGFwcFdpbmRvdy5taW5pbWl6ZSgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIG1pbmltaXplIHdpbmRvd1wiLCBlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVNYXhpbWl6ZSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGFwcFdpbmRvdyA9IGdldEN1cnJlbnRXaW5kb3coKTtcbiAgICAgICAgICAgIGF3YWl0IGFwcFdpbmRvdy50b2dnbGVNYXhpbWl6ZSgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIG1heGltaXplIHdpbmRvd1wiLCBlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVDbG9zZSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGFwcFdpbmRvdyA9IGdldEN1cnJlbnRXaW5kb3coKTtcbiAgICAgICAgICAgIGF3YWl0IGFwcFdpbmRvdy5jbG9zZSgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGNsb3NlIHdpbmRvd1wiLCBlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVUaXRsZUJhck1vdXNlRG93biA9IGFzeW5jIChlOiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB7XG4gICAgICAgIGlmIChlLmJ1dHRvbnMgPT09IDEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXBwV2luZG93ID0gZ2V0Q3VycmVudFdpbmRvdygpO1xuICAgICAgICAgICAgICAgIGlmIChlLmRldGFpbCA9PT0gMikge1xuICAgICAgICAgICAgICAgICAgICAvLyBEb3VibGUgY2xpY2sgdG8gbWF4aW1pemUvcmVzdG9yZVxuICAgICAgICAgICAgICAgICAgICBhd2FpdCBhcHBXaW5kb3cudG9nZ2xlTWF4aW1pemUoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBTdGFydCBkcmFnZ2luZyBvbiBzaW5nbGUgY2xpY2tcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgYXBwV2luZG93LnN0YXJ0RHJhZ2dpbmcoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBpbnRlcmFjdCB3aXRoIHdpbmRvd1wiLCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgICAgICAgIFwiaC04IGJnLWJhY2tncm91bmQgYm9yZGVyLWIgYm9yZGVyLWJvcmRlciBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gc2VsZWN0LW5vbmUgZml4ZWQgdG9wLTAgbGVmdC0wIHJpZ2h0LTAgei01MCB3LWZ1bGxcIixcbiAgICAgICAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICBvbk1vdXNlRG93bj17aGFuZGxlVGl0bGVCYXJNb3VzZURvd259XG4gICAgICAgICAgICBkYXRhLXRhdXJpLWRyYWctcmVnaW9uXG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHgtMyB0ZXh0LXNtIGZvbnQtbWVkaXVtXCI+e3RpdGxlfTwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImgtOCB3LTEyIGlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBob3ZlcjpiZy1tdXRlZCB0cmFuc2l0aW9uLWNvbG9yc1wiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU1pbmltaXplfVxuICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiTWluaW1pemVcIlxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IW1vdW50ZWR9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8TWludXMgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTggdy0xMiBpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgaG92ZXI6YmctbXV0ZWQgdHJhbnNpdGlvbi1jb2xvcnNcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVNYXhpbWl6ZX1cbiAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIk1heGltaXplXCJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFtb3VudGVkfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPFNxdWFyZSBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImgtOCB3LTEyIGlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBob3ZlcjpiZy1yZWQtNTAwLzkwIGdyb3VwIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQ2xvc2V9XG4gICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZVwiXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshbW91bnRlZH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxYIGNsYXNzTmFtZT1cImgtNCB3LTQgZ3JvdXAtaG92ZXI6dGV4dC13aGl0ZVwiIC8+XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlgiLCJNaW51cyIsIlNxdWFyZSIsImNuIiwiZ2V0Q3VycmVudFdpbmRvdyIsIlRpdGxlYmFyIiwidGl0bGUiLCJjbGFzc05hbWUiLCJwcm9wcyIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJoYW5kbGVNaW5pbWl6ZSIsImFwcFdpbmRvdyIsIm1pbmltaXplIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImhhbmRsZU1heGltaXplIiwidG9nZ2xlTWF4aW1pemUiLCJoYW5kbGVDbG9zZSIsImNsb3NlIiwiaGFuZGxlVGl0bGVCYXJNb3VzZURvd24iLCJidXR0b25zIiwiZGV0YWlsIiwic3RhcnREcmFnZ2luZyIsImRpdiIsIm9uTW91c2VEb3duIiwiZGF0YS10YXVyaS1kcmFnLXJlZ2lvbiIsImJ1dHRvbiIsIm9uQ2xpY2siLCJhcmlhLWxhYmVsIiwiZGlzYWJsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ui/titlebar.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: function() { return /* binding */ cn; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0o7QUFFakMsU0FBU0U7SUFBRztRQUFHQyxPQUFILHVCQUF1Qjs7SUFDeEMsT0FBT0YsdURBQU9BLENBQUNELDBDQUFJQSxDQUFDRztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL3V0aWxzLnRzPzdjMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSBcImNsc3hcIlxuaW1wb3J0IHsgdHdNZXJnZSB9IGZyb20gXCJ0YWlsd2luZC1tZXJnZVwiXG5cbmV4cG9ydCBmdW5jdGlvbiBjbiguLi5pbnB1dHM6IENsYXNzVmFsdWVbXSkge1xuICByZXR1cm4gdHdNZXJnZShjbHN4KGlucHV0cykpXG59XG4iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"}":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"src/app/layout.tsx","import":"","arguments":[{"src":"./fonts/GeistMonoVF.woff","variable":"--font-geist-mono","weight":"100 900"}],"variableName":"geistMono"} ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__geistMono_7d5cd7', '__geistMono_Fallback_7d5cd7'\"},\"className\":\"__className_7d5cd7\",\"variable\":\"__variable_7d5cd7\"};\n    if(true) {\n      // 1745270307262\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"http://localhost:3000/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJzcmMvYXBwL2xheW91dC50c3hcIixcImltcG9ydFwiOlwiXCIsXCJhcmd1bWVudHNcIjpbe1wic3JjXCI6XCIuL2ZvbnRzL0dlaXN0TW9ub1ZGLndvZmZcIixcInZhcmlhYmxlXCI6XCItLWZvbnQtZ2Vpc3QtbW9ub1wiLFwid2VpZ2h0XCI6XCIxMDAgOTAwXCJ9XSxcInZhcmlhYmxlTmFtZVwiOlwiZ2Vpc3RNb25vXCJ9IiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCLFNBQVMsbUVBQW1FO0FBQzlGLE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLHdNQUF5SSxjQUFjLDJFQUEyRTtBQUNoUSxNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz82ZmVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX2dlaXN0TW9ub183ZDVjZDcnLCAnX19nZWlzdE1vbm9fRmFsbGJhY2tfN2Q1Y2Q3J1wifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfN2Q1Y2Q3XCIsXCJ2YXJpYWJsZVwiOlwiX192YXJpYWJsZV83ZDVjZDdcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc0NTI3MDMwNzI2MlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvcHZwc3dhZ2hkL0Rlc2t0b3AvcHJvamVjdHMvZnlwL29wdGltdXMtdGFydWkvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCJodHRwOi8vbG9jYWxob3N0OjMwMDAvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"}":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"src/app/layout.tsx","import":"","arguments":[{"src":"./fonts/GeistVF.woff","variable":"--font-geist-sans","weight":"100 900"}],"variableName":"geistSans"} ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__geistSans_02d943', '__geistSans_Fallback_02d943'\"},\"className\":\"__className_02d943\",\"variable\":\"__variable_02d943\"};\n    if(true) {\n      // 1745270307261\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"http://localhost:3000/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJzcmMvYXBwL2xheW91dC50c3hcIixcImltcG9ydFwiOlwiXCIsXCJhcmd1bWVudHNcIjpbe1wic3JjXCI6XCIuL2ZvbnRzL0dlaXN0VkYud29mZlwiLFwidmFyaWFibGVcIjpcIi0tZm9udC1nZWlzdC1zYW5zXCIsXCJ3ZWlnaHRcIjpcIjEwMCA5MDBcIn1dLFwidmFyaWFibGVOYW1lXCI6XCJnZWlzdFNhbnNcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxtRUFBbUU7QUFDOUYsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQXlJLGNBQWMsMkVBQTJFO0FBQ2hRLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9sb2NhbC90YXJnZXQuY3NzPzliNDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fZ2Vpc3RTYW5zXzAyZDk0MycsICdfX2dlaXN0U2Fuc19GYWxsYmFja18wMmQ5NDMnXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV8wMmQ5NDNcIixcInZhcmlhYmxlXCI6XCJfX3ZhcmlhYmxlXzAyZDk0M1wifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzQ1MjcwMzA3MjYxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIi9Vc2Vycy9wdnBzd2FnaGQvRGVza3RvcC9wcm9qZWN0cy9meXAvb3B0aW11cy10YXJ1aS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcInB1YmxpY1BhdGhcIjpcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9fbmV4dC9cIixcImVzTW9kdWxlXCI6ZmFsc2UsXCJsb2NhbHNcIjp0cnVlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIFxuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/OGRlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/core.js":
/*!**********************************************!*\
  !*** ./node_modules/@tauri-apps/api/core.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Channel: function() { return /* binding */ Channel; },\n/* harmony export */   PluginListener: function() { return /* binding */ PluginListener; },\n/* harmony export */   Resource: function() { return /* binding */ Resource; },\n/* harmony export */   SERIALIZE_TO_IPC_FN: function() { return /* binding */ SERIALIZE_TO_IPC_FN; },\n/* harmony export */   addPluginListener: function() { return /* binding */ addPluginListener; },\n/* harmony export */   checkPermissions: function() { return /* binding */ checkPermissions; },\n/* harmony export */   convertFileSrc: function() { return /* binding */ convertFileSrc; },\n/* harmony export */   invoke: function() { return /* binding */ invoke; },\n/* harmony export */   isTauri: function() { return /* binding */ isTauri; },\n/* harmony export */   requestPermissions: function() { return /* binding */ requestPermissions; },\n/* harmony export */   transformCallback: function() { return /* binding */ transformCallback; }\n/* harmony export */ });\n/* harmony import */ var _external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external/tslib/tslib.es6.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\nvar _Channel_onmessage, _Channel_nextMessageIndex, _Channel_pendingMessages, _Channel_messageEndIndex, _Resource_rid;\n/**\n * Invoke your custom commands.\n *\n * This package is also accessible with `window.__TAURI__.core` when [`app.withGlobalTauri`](https://v2.tauri.app/reference/config/#withglobaltauri) in `tauri.conf.json` is set to `true`.\n * @module\n */\n/**\n * A key to be used to implement a special function\n * on your types that define how your type should be serialized\n * when passing across the IPC.\n * @example\n * Given a type in Rust that looks like this\n * ```rs\n * #[derive(serde::Serialize, serde::Deserialize)\n * enum UserId {\n *   String(String),\n *   Number(u32),\n * }\n * ```\n * `UserId::String(\"id\")` would be serialized into `{ String: \"id\" }`\n * and so we need to pass the same structure back to Rust\n * ```ts\n * import { SERIALIZE_TO_IPC_FN } from \"@tauri-apps/api/core\"\n *\n * class UserIdString {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { String: this.id }\n *   }\n * }\n *\n * class UserIdNumber {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { Number: this.id }\n *   }\n * }\n *\n * type UserId = UserIdString | UserIdNumber\n * ```\n *\n */\n// if this value changes, make sure to update it in:\n// 1. ipc.js\n// 2. process-ipc-message-fn.js\nconst SERIALIZE_TO_IPC_FN = '__TAURI_TO_IPC_KEY__';\n/**\n * Transforms a callback function to a string identifier that can be passed to the backend.\n * The backend uses the identifier to `eval()` the callback.\n *\n * @return A unique identifier associated with the callback function.\n *\n * @since 1.0.0\n */\nfunction transformCallback(callback, once = false) {\n    return window.__TAURI_INTERNALS__.transformCallback(callback, once);\n}\nclass Channel {\n    constructor(onmessage) {\n        _Channel_onmessage.set(this, void 0);\n        // the index is used as a mechanism to preserve message order\n        _Channel_nextMessageIndex.set(this, 0);\n        _Channel_pendingMessages.set(this, []);\n        _Channel_messageEndIndex.set(this, void 0);\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_onmessage, onmessage || (() => { }), \"f\");\n        this.id = transformCallback((rawMessage) => {\n            const index = rawMessage.index;\n            if ('end' in rawMessage) {\n                if (index == (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n                else {\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_messageEndIndex, index, \"f\");\n                }\n                return;\n            }\n            const message = rawMessage.message;\n            // Process the message if we're at the right order\n            if (index == (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")) {\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\").call(this, message);\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_nextMessageIndex, (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                // process pending messages\n                while ((0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") in (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")) {\n                    const message = (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[(0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")];\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\").call(this, message);\n                    // eslint-disable-next-line @typescript-eslint/no-array-delete\n                    delete (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[(0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")];\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_nextMessageIndex, (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                }\n                if ((0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") === (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_messageEndIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n            }\n            // Queue the message if we're not\n            else {\n                // eslint-disable-next-line security/detect-object-injection\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[index] = message;\n            }\n        });\n    }\n    cleanupCallback() {\n        Reflect.deleteProperty(window, `_${this.id}`);\n    }\n    set onmessage(handler) {\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_onmessage, handler, \"f\");\n    }\n    get onmessage() {\n        return (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\");\n    }\n    [(_Channel_onmessage = new WeakMap(), _Channel_nextMessageIndex = new WeakMap(), _Channel_pendingMessages = new WeakMap(), _Channel_messageEndIndex = new WeakMap(), SERIALIZE_TO_IPC_FN)]() {\n        return `__CHANNEL__:${this.id}`;\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[SERIALIZE_TO_IPC_FN]();\n    }\n}\nclass PluginListener {\n    constructor(plugin, event, channelId) {\n        this.plugin = plugin;\n        this.event = event;\n        this.channelId = channelId;\n    }\n    async unregister() {\n        return invoke(`plugin:${this.plugin}|remove_listener`, {\n            event: this.event,\n            channelId: this.channelId\n        });\n    }\n}\n/**\n * Adds a listener to a plugin event.\n *\n * @returns The listener object to stop listening to the events.\n *\n * @since 2.0.0\n */\nasync function addPluginListener(plugin, event, cb) {\n    const handler = new Channel(cb);\n    return invoke(`plugin:${plugin}|registerListener`, { event, handler }).then(() => new PluginListener(plugin, event, handler.id));\n}\n/**\n * Get permission state for a plugin.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function checkPermissions(plugin) {\n    return invoke(`plugin:${plugin}|check_permissions`);\n}\n/**\n * Request permissions.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function requestPermissions(plugin) {\n    return invoke(`plugin:${plugin}|request_permissions`);\n}\n/**\n * Sends a message to the backend.\n * @example\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * await invoke('login', { user: 'tauri', password: 'poiwe3h4r5ip3yrhtew9ty' });\n * ```\n *\n * @param cmd The command name.\n * @param args The optional arguments to pass to the command.\n * @param options The request options.\n * @return A promise resolving or rejecting to the backend response.\n *\n * @since 1.0.0\n */\nasync function invoke(cmd, args = {}, options) {\n    return window.__TAURI_INTERNALS__.invoke(cmd, args, options);\n}\n/**\n * Convert a device file path to an URL that can be loaded by the webview.\n * Note that `asset:` and `http://asset.localhost` must be added to [`app.security.csp`](https://v2.tauri.app/reference/config/#csp-1) in `tauri.conf.json`.\n * Example CSP value: `\"csp\": \"default-src 'self' ipc: http://ipc.localhost; img-src 'self' asset: http://asset.localhost\"` to use the asset protocol on image sources.\n *\n * Additionally, `\"enable\" : \"true\"` must be added to [`app.security.assetProtocol`](https://v2.tauri.app/reference/config/#assetprotocolconfig)\n * in `tauri.conf.json` and its access scope must be defined on the `scope` array on the same `assetProtocol` object.\n *\n * @param  filePath The file path.\n * @param  protocol The protocol to use. Defaults to `asset`. You only need to set this when using a custom protocol.\n * @example\n * ```typescript\n * import { appDataDir, join } from '@tauri-apps/api/path';\n * import { convertFileSrc } from '@tauri-apps/api/core';\n * const appDataDirPath = await appDataDir();\n * const filePath = await join(appDataDirPath, 'assets/video.mp4');\n * const assetUrl = convertFileSrc(filePath);\n *\n * const video = document.getElementById('my-video');\n * const source = document.createElement('source');\n * source.type = 'video/mp4';\n * source.src = assetUrl;\n * video.appendChild(source);\n * video.load();\n * ```\n *\n * @return the URL that can be used as source on the webview.\n *\n * @since 1.0.0\n */\nfunction convertFileSrc(filePath, protocol = 'asset') {\n    return window.__TAURI_INTERNALS__.convertFileSrc(filePath, protocol);\n}\n/**\n * A rust-backed resource stored through `tauri::Manager::resources_table` API.\n *\n * The resource lives in the main process and does not exist\n * in the Javascript world, and thus will not be cleaned up automatiacally\n * except on application exit. If you want to clean it up early, call {@linkcode Resource.close}\n *\n * @example\n * ```typescript\n * import { Resource, invoke } from '@tauri-apps/api/core';\n * export class DatabaseHandle extends Resource {\n *   static async open(path: string): Promise<DatabaseHandle> {\n *     const rid: number = await invoke('open_db', { path });\n *     return new DatabaseHandle(rid);\n *   }\n *\n *   async execute(sql: string): Promise<void> {\n *     await invoke('execute_sql', { rid: this.rid, sql });\n *   }\n * }\n * ```\n */\nclass Resource {\n    get rid() {\n        return (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Resource_rid, \"f\");\n    }\n    constructor(rid) {\n        _Resource_rid.set(this, void 0);\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Resource_rid, rid, \"f\");\n    }\n    /**\n     * Destroys and cleans up this resource from memory.\n     * **You should not call any method on this object anymore and should drop any reference to it.**\n     */\n    async close() {\n        return invoke('plugin:resources|close', {\n            rid: this.rid\n        });\n    }\n}\n_Resource_rid = new WeakMap();\nfunction isTauri() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    return !!(globalThis || window).isTauri;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/dpi.js":
/*!*********************************************!*\
  !*** ./node_modules/@tauri-apps/api/dpi.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogicalPosition: function() { return /* binding */ LogicalPosition; },\n/* harmony export */   LogicalSize: function() { return /* binding */ LogicalSize; },\n/* harmony export */   PhysicalPosition: function() { return /* binding */ PhysicalPosition; },\n/* harmony export */   PhysicalSize: function() { return /* binding */ PhysicalSize; },\n/* harmony export */   Position: function() { return /* binding */ Position; },\n/* harmony export */   Size: function() { return /* binding */ Size; }\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * A size represented in logical pixels.\n *\n * @since 2.0.0\n */\nclass LogicalSize {\n    constructor(...args) {\n        this.type = 'Logical';\n        if (args.length === 1) {\n            if ('Logical' in args[0]) {\n                this.width = args[0].Logical.width;\n                this.height = args[0].Logical.height;\n            }\n            else {\n                this.width = args[0].width;\n                this.height = args[0].height;\n            }\n        }\n        else {\n            this.width = args[0];\n            this.height = args[1];\n        }\n    }\n    /**\n     * Converts the logical size to a physical one.\n     * @example\n     * ```typescript\n     * import { LogicalSize } from '@tauri-apps/api/dpi';\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     *\n     * const appWindow = getCurrentWindow();\n     * const factor = await appWindow.scaleFactor();\n     * const size = new LogicalSize(400, 500);\n     * const physical = size.toPhysical(factor);\n     * ```\n     *\n     * @since 2.0.0\n     */\n    toPhysical(scaleFactor) {\n        return new PhysicalSize(this.width * scaleFactor, this.height * scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            width: this.width,\n            height: this.height\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n/**\n * A size represented in physical pixels.\n *\n * @since 2.0.0\n */\nclass PhysicalSize {\n    constructor(...args) {\n        this.type = 'Physical';\n        if (args.length === 1) {\n            if ('Physical' in args[0]) {\n                this.width = args[0].Physical.width;\n                this.height = args[0].Physical.height;\n            }\n            else {\n                this.width = args[0].width;\n                this.height = args[0].height;\n            }\n        }\n        else {\n            this.width = args[0];\n            this.height = args[1];\n        }\n    }\n    /**\n     * Converts the physical size to a logical one.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const appWindow = getCurrentWindow();\n     * const factor = await appWindow.scaleFactor();\n     * const size = await appWindow.innerSize(); // PhysicalSize\n     * const logical = size.toLogical(factor);\n     * ```\n     */\n    toLogical(scaleFactor) {\n        return new LogicalSize(this.width / scaleFactor, this.height / scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            width: this.width,\n            height: this.height\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n/**\n * A size represented either in physical or in logical pixels.\n *\n * This type is basically a union type of {@linkcode LogicalSize} and {@linkcode PhysicalSize}\n * but comes in handy when using `tauri::Size` in Rust as an argument to a command, as this class\n * automatically serializes into a valid format so it can be deserialized correctly into `tauri::Size`\n *\n * So instead of\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * import { LogicalSize, PhysicalSize } from '@tauri-apps/api/dpi';\n *\n * const size: LogicalSize | PhysicalSize = someFunction(); // where someFunction returns either LogicalSize or PhysicalSize\n * const validSize = size instanceof LogicalSize\n *   ? { Logical: { width: size.width, height: size.height } }\n *   : { Physical: { width: size.width, height: size.height } }\n * await invoke(\"do_something_with_size\", { size: validSize });\n * ```\n *\n * You can just use {@linkcode Size}\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * import { LogicalSize, PhysicalSize, Size } from '@tauri-apps/api/dpi';\n *\n * const size: LogicalSize | PhysicalSize = someFunction(); // where someFunction returns either LogicalSize or PhysicalSize\n * const validSize = new Size(size);\n * await invoke(\"do_something_with_size\", { size: validSize });\n * ```\n *\n * @since 2.1.0\n */\nclass Size {\n    constructor(size) {\n        this.size = size;\n    }\n    toLogical(scaleFactor) {\n        return this.size instanceof LogicalSize\n            ? this.size\n            : this.size.toLogical(scaleFactor);\n    }\n    toPhysical(scaleFactor) {\n        return this.size instanceof PhysicalSize\n            ? this.size\n            : this.size.toPhysical(scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            [`${this.size.type}`]: {\n                width: this.size.width,\n                height: this.size.height\n            }\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n/**\n *  A position represented in logical pixels.\n *\n * @since 2.0.0\n */\nclass LogicalPosition {\n    constructor(...args) {\n        this.type = 'Logical';\n        if (args.length === 1) {\n            if ('Logical' in args[0]) {\n                this.x = args[0].Logical.x;\n                this.y = args[0].Logical.y;\n            }\n            else {\n                this.x = args[0].x;\n                this.y = args[0].y;\n            }\n        }\n        else {\n            this.x = args[0];\n            this.y = args[1];\n        }\n    }\n    /**\n     * Converts the logical position to a physical one.\n     * @example\n     * ```typescript\n     * import { LogicalPosition } from '@tauri-apps/api/dpi';\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     *\n     * const appWindow = getCurrentWindow();\n     * const factor = await appWindow.scaleFactor();\n     * const position = new LogicalPosition(400, 500);\n     * const physical = position.toPhysical(factor);\n     * ```\n     *\n     * @since 2.0.0\n     */\n    toPhysical(scaleFactor) {\n        return new PhysicalPosition(this.x * scaleFactor, this.y * scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            x: this.x,\n            y: this.y\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n/**\n *  A position represented in physical pixels.\n *\n * @since 2.0.0\n */\nclass PhysicalPosition {\n    constructor(...args) {\n        this.type = 'Physical';\n        if (args.length === 1) {\n            if ('Physical' in args[0]) {\n                this.x = args[0].Physical.x;\n                this.y = args[0].Physical.y;\n            }\n            else {\n                this.x = args[0].x;\n                this.y = args[0].y;\n            }\n        }\n        else {\n            this.x = args[0];\n            this.y = args[1];\n        }\n    }\n    /**\n     * Converts the physical position to a logical one.\n     * @example\n     * ```typescript\n     * import { PhysicalPosition } from '@tauri-apps/api/dpi';\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     *\n     * const appWindow = getCurrentWindow();\n     * const factor = await appWindow.scaleFactor();\n     * const position = new PhysicalPosition(400, 500);\n     * const physical = position.toLogical(factor);\n     * ```\n     *\n     * @since 2.0.0\n     */\n    toLogical(scaleFactor) {\n        return new LogicalPosition(this.x / scaleFactor, this.y / scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            x: this.x,\n            y: this.y\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n/**\n * A position represented either in physical or in logical pixels.\n *\n * This type is basically a union type of {@linkcode LogicalSize} and {@linkcode PhysicalSize}\n * but comes in handy when using `tauri::Position` in Rust as an argument to a command, as this class\n * automatically serializes into a valid format so it can be deserialized correctly into `tauri::Position`\n *\n * So instead of\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * import { LogicalPosition, PhysicalPosition } from '@tauri-apps/api/dpi';\n *\n * const position: LogicalPosition | PhysicalPosition = someFunction(); // where someFunction returns either LogicalPosition or PhysicalPosition\n * const validPosition = position instanceof LogicalPosition\n *   ? { Logical: { x: position.x, y: position.y } }\n *   : { Physical: { x: position.x, y: position.y } }\n * await invoke(\"do_something_with_position\", { position: validPosition });\n * ```\n *\n * You can just use {@linkcode Position}\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * import { LogicalPosition, PhysicalPosition, Position } from '@tauri-apps/api/dpi';\n *\n * const position: LogicalPosition | PhysicalPosition = someFunction(); // where someFunction returns either LogicalPosition or PhysicalPosition\n * const validPosition = new Position(position);\n * await invoke(\"do_something_with_position\", { position: validPosition });\n * ```\n *\n * @since 2.1.0\n */\nclass Position {\n    constructor(position) {\n        this.position = position;\n    }\n    toLogical(scaleFactor) {\n        return this.position instanceof LogicalPosition\n            ? this.position\n            : this.position.toLogical(scaleFactor);\n    }\n    toPhysical(scaleFactor) {\n        return this.position instanceof PhysicalPosition\n            ? this.position\n            : this.position.toPhysical(scaleFactor);\n    }\n    [_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]() {\n        return {\n            [`${this.position.type}`]: {\n                x: this.position.x,\n                y: this.position.y\n            }\n        };\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[_core_js__WEBPACK_IMPORTED_MODULE_0__.SERIALIZE_TO_IPC_FN]();\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/dpi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/event.js":
/*!***********************************************!*\
  !*** ./node_modules/@tauri-apps/api/event.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TauriEvent: function() { return /* binding */ TauriEvent; },\n/* harmony export */   emit: function() { return /* binding */ emit; },\n/* harmony export */   emitTo: function() { return /* binding */ emitTo; },\n/* harmony export */   listen: function() { return /* binding */ listen; },\n/* harmony export */   once: function() { return /* binding */ once; }\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * The event system allows you to emit events to the backend and listen to events from it.\n *\n * This package is also accessible with `window.__TAURI__.event` when [`app.withGlobalTauri`](https://v2.tauri.app/reference/config/#withglobaltauri) in `tauri.conf.json` is set to `true`.\n * @module\n */\n/**\n * @since 1.1.0\n */\nvar TauriEvent;\n(function (TauriEvent) {\n    TauriEvent[\"WINDOW_RESIZED\"] = \"tauri://resize\";\n    TauriEvent[\"WINDOW_MOVED\"] = \"tauri://move\";\n    TauriEvent[\"WINDOW_CLOSE_REQUESTED\"] = \"tauri://close-requested\";\n    TauriEvent[\"WINDOW_DESTROYED\"] = \"tauri://destroyed\";\n    TauriEvent[\"WINDOW_FOCUS\"] = \"tauri://focus\";\n    TauriEvent[\"WINDOW_BLUR\"] = \"tauri://blur\";\n    TauriEvent[\"WINDOW_SCALE_FACTOR_CHANGED\"] = \"tauri://scale-change\";\n    TauriEvent[\"WINDOW_THEME_CHANGED\"] = \"tauri://theme-changed\";\n    TauriEvent[\"WINDOW_CREATED\"] = \"tauri://window-created\";\n    TauriEvent[\"WEBVIEW_CREATED\"] = \"tauri://webview-created\";\n    TauriEvent[\"DRAG_ENTER\"] = \"tauri://drag-enter\";\n    TauriEvent[\"DRAG_OVER\"] = \"tauri://drag-over\";\n    TauriEvent[\"DRAG_DROP\"] = \"tauri://drag-drop\";\n    TauriEvent[\"DRAG_LEAVE\"] = \"tauri://drag-leave\";\n})(TauriEvent || (TauriEvent = {}));\n/**\n * Unregister the event listener associated with the given name and id.\n *\n * @ignore\n * @param event The event name\n * @param eventId Event identifier\n * @returns\n */\nasync function _unlisten(event, eventId) {\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|unlisten', {\n        event,\n        eventId\n    });\n}\n/**\n * Listen to an emitted event to any {@link EventTarget|target}.\n *\n * @example\n * ```typescript\n * import { listen } from '@tauri-apps/api/event';\n * const unlisten = await listen<string>('error', (event) => {\n *   console.log(`Got error, payload: ${event.payload}`);\n * });\n *\n * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n * unlisten();\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param handler Event handler callback.\n * @param options Event listening options.\n * @returns A promise resolving to a function to unlisten to the event.\n * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n *\n * @since 1.0.0\n */\nasync function listen(event, handler, options) {\n    var _a;\n    const target = typeof (options === null || options === void 0 ? void 0 : options.target) === 'string'\n        ? { kind: 'AnyLabel', label: options.target }\n        : ((_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : { kind: 'Any' });\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|listen', {\n        event,\n        target,\n        handler: (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.transformCallback)(handler)\n    }).then((eventId) => {\n        return async () => _unlisten(event, eventId);\n    });\n}\n/**\n * Listens once to an emitted event to any {@link EventTarget|target}.\n *\n * @example\n * ```typescript\n * import { once } from '@tauri-apps/api/event';\n * interface LoadedPayload {\n *   loggedIn: boolean,\n *   token: string\n * }\n * const unlisten = await once<LoadedPayload>('loaded', (event) => {\n *   console.log(`App is loaded, loggedIn: ${event.payload.loggedIn}, token: ${event.payload.token}`);\n * });\n *\n * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n * unlisten();\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param handler Event handler callback.\n * @param options Event listening options.\n * @returns A promise resolving to a function to unlisten to the event.\n * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n *\n * @since 1.0.0\n */\nasync function once(event, handler, options) {\n    return listen(event, (eventData) => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        _unlisten(event, eventData.id);\n        handler(eventData);\n    }, options);\n}\n/**\n * Emits an event to all {@link EventTarget|targets}.\n *\n * @example\n * ```typescript\n * import { emit } from '@tauri-apps/api/event';\n * await emit('frontend-loaded', { loggedIn: true, token: 'authToken' });\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param payload Event payload.\n *\n * @since 1.0.0\n */\nasync function emit(event, payload) {\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|emit', {\n        event,\n        payload\n    });\n}\n/**\n * Emits an event to all {@link EventTarget|targets} matching the given target.\n *\n * @example\n * ```typescript\n * import { emitTo } from '@tauri-apps/api/event';\n * await emitTo('main', 'frontend-loaded', { loggedIn: true, token: 'authToken' });\n * ```\n *\n * @param target Label of the target Window/Webview/WebviewWindow or raw {@link EventTarget} object.\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param payload Event payload.\n *\n * @since 2.0.0\n */\nasync function emitTo(target, event, payload) {\n    const eventTarget = typeof target === 'string' ? { kind: 'AnyLabel', label: target } : target;\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|emit_to', {\n        target: eventTarget,\n        event,\n        payload\n    });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/event.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; }\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvZXh0ZXJuYWwvdHNsaWIvdHNsaWIuZXM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvZXh0ZXJuYWwvdHNsaWIvdHNsaWIuZXM2LmpzP2Q1NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlLCBTdXBwcmVzc2VkRXJyb3IsIFN5bWJvbCwgSXRlcmF0b3IgKi9cclxuXHJcblxyXG5mdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xyXG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XHJcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcclxuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcclxuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcclxuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XHJcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcclxufVxyXG5cclxudHlwZW9mIFN1cHByZXNzZWRFcnJvciA9PT0gXCJmdW5jdGlvblwiID8gU3VwcHJlc3NlZEVycm9yIDogZnVuY3Rpb24gKGVycm9yLCBzdXBwcmVzc2VkLCBtZXNzYWdlKSB7XHJcbiAgICB2YXIgZSA9IG5ldyBFcnJvcihtZXNzYWdlKTtcclxuICAgIHJldHVybiBlLm5hbWUgPSBcIlN1cHByZXNzZWRFcnJvclwiLCBlLmVycm9yID0gZXJyb3IsIGUuc3VwcHJlc3NlZCA9IHN1cHByZXNzZWQsIGU7XHJcbn07XG5cbmV4cG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/image.js":
/*!***********************************************!*\
  !*** ./node_modules/@tauri-apps/api/image.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Image: function() { return /* binding */ Image; },\n/* harmony export */   transformImage: function() { return /* binding */ transformImage; }\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/** An RGBA Image in row-major order from top to bottom. */\nclass Image extends _core_js__WEBPACK_IMPORTED_MODULE_0__.Resource {\n    /**\n     * Creates an Image from a resource ID. For internal use only.\n     *\n     * @ignore\n     */\n    constructor(rid) {\n        super(rid);\n    }\n    /** Creates a new Image using RGBA data, in row-major order from top to bottom, and with specified width and height. */\n    static async new(rgba, width, height) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:image|new', {\n            rgba: transformImage(rgba),\n            width,\n            height\n        }).then((rid) => new Image(rid));\n    }\n    /**\n     * Creates a new image using the provided bytes by inferring the file format.\n     * If the format is known, prefer [@link Image.fromPngBytes] or [@link Image.fromIcoBytes].\n     *\n     * Only `ico` and `png` are supported (based on activated feature flag).\n     *\n     * Note that you need the `image-ico` or `image-png` Cargo features to use this API.\n     * To enable it, change your Cargo.toml file:\n     * ```toml\n     * [dependencies]\n     * tauri = { version = \"...\", features = [\"...\", \"image-png\"] }\n     * ```\n     */\n    static async fromBytes(bytes) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:image|from_bytes', {\n            bytes: transformImage(bytes)\n        }).then((rid) => new Image(rid));\n    }\n    /**\n     * Creates a new image using the provided path.\n     *\n     * Only `ico` and `png` are supported (based on activated feature flag).\n     *\n     * Note that you need the `image-ico` or `image-png` Cargo features to use this API.\n     * To enable it, change your Cargo.toml file:\n     * ```toml\n     * [dependencies]\n     * tauri = { version = \"...\", features = [\"...\", \"image-png\"] }\n     * ```\n     */\n    static async fromPath(path) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:image|from_path', { path }).then((rid) => new Image(rid));\n    }\n    /** Returns the RGBA data for this image, in row-major order from top to bottom.  */\n    async rgba() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:image|rgba', {\n            rid: this.rid\n        }).then((buffer) => new Uint8Array(buffer));\n    }\n    /** Returns the size of this image.  */\n    async size() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:image|size', { rid: this.rid });\n    }\n}\n/**\n * Transforms image from various types into a type acceptable by Rust.\n *\n * See [tauri::image::JsImage](https://docs.rs/tauri/2/tauri/image/enum.JsImage.html) for more information.\n * Note the API signature is not stable and might change.\n */\nfunction transformImage(image) {\n    const ret = image == null\n        ? null\n        : typeof image === 'string'\n            ? image\n            : image instanceof Image\n                ? image.rid\n                : image;\n    return ret;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvaW1hZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4Q0FBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNLDZCQUE2QixNQUFNO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTSx3QkFBd0IsZUFBZTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvaW1hZ2UuanM/MjU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZSwgaW52b2tlIH0gZnJvbSAnLi9jb3JlLmpzJztcblxuLy8gQ29weXJpZ2h0IDIwMTktMjAyNCBUYXVyaSBQcm9ncmFtbWUgd2l0aGluIFRoZSBDb21tb25zIENvbnNlcnZhbmN5XG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLyoqIEFuIFJHQkEgSW1hZ2UgaW4gcm93LW1ham9yIG9yZGVyIGZyb20gdG9wIHRvIGJvdHRvbS4gKi9cbmNsYXNzIEltYWdlIGV4dGVuZHMgUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gSW1hZ2UgZnJvbSBhIHJlc291cmNlIElELiBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG4gICAgICpcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocmlkKSB7XG4gICAgICAgIHN1cGVyKHJpZCk7XG4gICAgfVxuICAgIC8qKiBDcmVhdGVzIGEgbmV3IEltYWdlIHVzaW5nIFJHQkEgZGF0YSwgaW4gcm93LW1ham9yIG9yZGVyIGZyb20gdG9wIHRvIGJvdHRvbSwgYW5kIHdpdGggc3BlY2lmaWVkIHdpZHRoIGFuZCBoZWlnaHQuICovXG4gICAgc3RhdGljIGFzeW5jIG5ldyhyZ2JhLCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjppbWFnZXxuZXcnLCB7XG4gICAgICAgICAgICByZ2JhOiB0cmFuc2Zvcm1JbWFnZShyZ2JhKSxcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0XG4gICAgICAgIH0pLnRoZW4oKHJpZCkgPT4gbmV3IEltYWdlKHJpZCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGltYWdlIHVzaW5nIHRoZSBwcm92aWRlZCBieXRlcyBieSBpbmZlcnJpbmcgdGhlIGZpbGUgZm9ybWF0LlxuICAgICAqIElmIHRoZSBmb3JtYXQgaXMga25vd24sIHByZWZlciBbQGxpbmsgSW1hZ2UuZnJvbVBuZ0J5dGVzXSBvciBbQGxpbmsgSW1hZ2UuZnJvbUljb0J5dGVzXS5cbiAgICAgKlxuICAgICAqIE9ubHkgYGljb2AgYW5kIGBwbmdgIGFyZSBzdXBwb3J0ZWQgKGJhc2VkIG9uIGFjdGl2YXRlZCBmZWF0dXJlIGZsYWcpLlxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IHlvdSBuZWVkIHRoZSBgaW1hZ2UtaWNvYCBvciBgaW1hZ2UtcG5nYCBDYXJnbyBmZWF0dXJlcyB0byB1c2UgdGhpcyBBUEkuXG4gICAgICogVG8gZW5hYmxlIGl0LCBjaGFuZ2UgeW91ciBDYXJnby50b21sIGZpbGU6XG4gICAgICogYGBgdG9tbFxuICAgICAqIFtkZXBlbmRlbmNpZXNdXG4gICAgICogdGF1cmkgPSB7IHZlcnNpb24gPSBcIi4uLlwiLCBmZWF0dXJlcyA9IFtcIi4uLlwiLCBcImltYWdlLXBuZ1wiXSB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGZyb21CeXRlcyhieXRlcykge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46aW1hZ2V8ZnJvbV9ieXRlcycsIHtcbiAgICAgICAgICAgIGJ5dGVzOiB0cmFuc2Zvcm1JbWFnZShieXRlcylcbiAgICAgICAgfSkudGhlbigocmlkKSA9PiBuZXcgSW1hZ2UocmlkKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgaW1hZ2UgdXNpbmcgdGhlIHByb3ZpZGVkIHBhdGguXG4gICAgICpcbiAgICAgKiBPbmx5IGBpY29gIGFuZCBgcG5nYCBhcmUgc3VwcG9ydGVkIChiYXNlZCBvbiBhY3RpdmF0ZWQgZmVhdHVyZSBmbGFnKS5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB5b3UgbmVlZCB0aGUgYGltYWdlLWljb2Agb3IgYGltYWdlLXBuZ2AgQ2FyZ28gZmVhdHVyZXMgdG8gdXNlIHRoaXMgQVBJLlxuICAgICAqIFRvIGVuYWJsZSBpdCwgY2hhbmdlIHlvdXIgQ2FyZ28udG9tbCBmaWxlOlxuICAgICAqIGBgYHRvbWxcbiAgICAgKiBbZGVwZW5kZW5jaWVzXVxuICAgICAqIHRhdXJpID0geyB2ZXJzaW9uID0gXCIuLi5cIiwgZmVhdHVyZXMgPSBbXCIuLi5cIiwgXCJpbWFnZS1wbmdcIl0gfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBmcm9tUGF0aChwYXRoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjppbWFnZXxmcm9tX3BhdGgnLCB7IHBhdGggfSkudGhlbigocmlkKSA9PiBuZXcgSW1hZ2UocmlkKSk7XG4gICAgfVxuICAgIC8qKiBSZXR1cm5zIHRoZSBSR0JBIGRhdGEgZm9yIHRoaXMgaW1hZ2UsIGluIHJvdy1tYWpvciBvcmRlciBmcm9tIHRvcCB0byBib3R0b20uICAqL1xuICAgIGFzeW5jIHJnYmEoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjppbWFnZXxyZ2JhJywge1xuICAgICAgICAgICAgcmlkOiB0aGlzLnJpZFxuICAgICAgICB9KS50aGVuKChidWZmZXIpID0+IG5ldyBVaW50OEFycmF5KGJ1ZmZlcikpO1xuICAgIH1cbiAgICAvKiogUmV0dXJucyB0aGUgc2l6ZSBvZiB0aGlzIGltYWdlLiAgKi9cbiAgICBhc3luYyBzaXplKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46aW1hZ2V8c2l6ZScsIHsgcmlkOiB0aGlzLnJpZCB9KTtcbiAgICB9XG59XG4vKipcbiAqIFRyYW5zZm9ybXMgaW1hZ2UgZnJvbSB2YXJpb3VzIHR5cGVzIGludG8gYSB0eXBlIGFjY2VwdGFibGUgYnkgUnVzdC5cbiAqXG4gKiBTZWUgW3RhdXJpOjppbWFnZTo6SnNJbWFnZV0oaHR0cHM6Ly9kb2NzLnJzL3RhdXJpLzIvdGF1cmkvaW1hZ2UvZW51bS5Kc0ltYWdlLmh0bWwpIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICogTm90ZSB0aGUgQVBJIHNpZ25hdHVyZSBpcyBub3Qgc3RhYmxlIGFuZCBtaWdodCBjaGFuZ2UuXG4gKi9cbmZ1bmN0aW9uIHRyYW5zZm9ybUltYWdlKGltYWdlKSB7XG4gICAgY29uc3QgcmV0ID0gaW1hZ2UgPT0gbnVsbFxuICAgICAgICA/IG51bGxcbiAgICAgICAgOiB0eXBlb2YgaW1hZ2UgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/IGltYWdlXG4gICAgICAgICAgICA6IGltYWdlIGluc3RhbmNlb2YgSW1hZ2VcbiAgICAgICAgICAgICAgICA/IGltYWdlLnJpZFxuICAgICAgICAgICAgICAgIDogaW1hZ2U7XG4gICAgcmV0dXJuIHJldDtcbn1cblxuZXhwb3J0IHsgSW1hZ2UsIHRyYW5zZm9ybUltYWdlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/image.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/window.js":
/*!************************************************!*\
  !*** ./node_modules/@tauri-apps/api/window.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CloseRequestedEvent: function() { return /* binding */ CloseRequestedEvent; },\n/* harmony export */   Effect: function() { return /* binding */ Effect; },\n/* harmony export */   EffectState: function() { return /* binding */ EffectState; },\n/* harmony export */   LogicalPosition: function() { return /* reexport safe */ _dpi_js__WEBPACK_IMPORTED_MODULE_0__.LogicalPosition; },\n/* harmony export */   LogicalSize: function() { return /* reexport safe */ _dpi_js__WEBPACK_IMPORTED_MODULE_0__.LogicalSize; },\n/* harmony export */   PhysicalPosition: function() { return /* reexport safe */ _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition; },\n/* harmony export */   PhysicalSize: function() { return /* reexport safe */ _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalSize; },\n/* harmony export */   ProgressBarStatus: function() { return /* binding */ ProgressBarStatus; },\n/* harmony export */   UserAttentionType: function() { return /* binding */ UserAttentionType; },\n/* harmony export */   Window: function() { return /* binding */ Window; },\n/* harmony export */   availableMonitors: function() { return /* binding */ availableMonitors; },\n/* harmony export */   currentMonitor: function() { return /* binding */ currentMonitor; },\n/* harmony export */   cursorPosition: function() { return /* binding */ cursorPosition; },\n/* harmony export */   getAllWindows: function() { return /* binding */ getAllWindows; },\n/* harmony export */   getCurrentWindow: function() { return /* binding */ getCurrentWindow; },\n/* harmony export */   monitorFromPoint: function() { return /* binding */ monitorFromPoint; },\n/* harmony export */   primaryMonitor: function() { return /* binding */ primaryMonitor; }\n/* harmony export */ });\n/* harmony import */ var _dpi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dpi.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/dpi.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/event.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/image.js\");\n\n\n\n\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * Provides APIs to create windows, communicate with other windows and manipulate the current window.\n *\n * #### Window events\n *\n * Events can be listened to using {@link Window.listen}:\n * ```typescript\n * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n * getCurrentWindow().listen(\"my-window-event\", ({ event, payload }) => { });\n * ```\n *\n * @module\n */\n/**\n * Attention type to request on a window.\n *\n * @since 1.0.0\n */\nvar UserAttentionType;\n(function (UserAttentionType) {\n    /**\n     * #### Platform-specific\n     * - **macOS:** Bounces the dock icon until the application is in focus.\n     * - **Windows:** Flashes both the window and the taskbar button until the application is in focus.\n     */\n    UserAttentionType[UserAttentionType[\"Critical\"] = 1] = \"Critical\";\n    /**\n     * #### Platform-specific\n     * - **macOS:** Bounces the dock icon once.\n     * - **Windows:** Flashes the taskbar button until the application is in focus.\n     */\n    UserAttentionType[UserAttentionType[\"Informational\"] = 2] = \"Informational\";\n})(UserAttentionType || (UserAttentionType = {}));\nclass CloseRequestedEvent {\n    constructor(event) {\n        this._preventDefault = false;\n        this.event = event.event;\n        this.id = event.id;\n    }\n    preventDefault() {\n        this._preventDefault = true;\n    }\n    isPreventDefault() {\n        return this._preventDefault;\n    }\n}\nvar ProgressBarStatus;\n(function (ProgressBarStatus) {\n    /**\n     * Hide progress bar.\n     */\n    ProgressBarStatus[\"None\"] = \"none\";\n    /**\n     * Normal state.\n     */\n    ProgressBarStatus[\"Normal\"] = \"normal\";\n    /**\n     * Indeterminate state. **Treated as Normal on Linux and macOS**\n     */\n    ProgressBarStatus[\"Indeterminate\"] = \"indeterminate\";\n    /**\n     * Paused state. **Treated as Normal on Linux**\n     */\n    ProgressBarStatus[\"Paused\"] = \"paused\";\n    /**\n     * Error state. **Treated as Normal on linux**\n     */\n    ProgressBarStatus[\"Error\"] = \"error\";\n})(ProgressBarStatus || (ProgressBarStatus = {}));\n/**\n * Get an instance of `Window` for the current window.\n *\n * @since 1.0.0\n */\nfunction getCurrentWindow() {\n    return new Window(window.__TAURI_INTERNALS__.metadata.currentWindow.label, {\n        // @ts-expect-error `skip` is not defined in the public API but it is handled by the constructor\n        skip: true\n    });\n}\n/**\n * Gets a list of instances of `Window` for all available windows.\n *\n * @since 1.0.0\n */\nasync function getAllWindows() {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|get_all_windows').then((windows) => windows.map((w) => new Window(w, {\n        // @ts-expect-error `skip` is not defined in the public API but it is handled by the constructor\n        skip: true\n    })));\n}\n/** @ignore */\n// events that are emitted right here instead of by the created window\nconst localTauriEvents = ['tauri://created', 'tauri://error'];\n/**\n * Create new window or get a handle to an existing one.\n *\n * Windows are identified by a *label*  a unique identifier that can be used to reference it later.\n * It may only contain alphanumeric characters `a-zA-Z` plus the following special characters `-`, `/`, `:` and `_`.\n *\n * @example\n * ```typescript\n * import { Window } from \"@tauri-apps/api/window\"\n *\n * const appWindow = new Window('theUniqueLabel');\n *\n * appWindow.once('tauri://created', function () {\n *  // window successfully created\n * });\n * appWindow.once('tauri://error', function (e) {\n *  // an error happened creating the window\n * });\n *\n * // emit an event to the backend\n * await appWindow.emit(\"some-event\", \"data\");\n * // listen to an event from the backend\n * const unlisten = await appWindow.listen(\"event-name\", e => {});\n * unlisten();\n * ```\n *\n * @since 2.0.0\n */\nclass Window {\n    /**\n     * Creates a new Window.\n     * @example\n     * ```typescript\n     * import { Window } from '@tauri-apps/api/window';\n     * const appWindow = new Window('my-label');\n     * appWindow.once('tauri://created', function () {\n     *  // window successfully created\n     * });\n     * appWindow.once('tauri://error', function (e) {\n     *  // an error happened creating the window\n     * });\n     * ```\n     *\n     * @param label The unique window label. Must be alphanumeric: `a-zA-Z-/:_`.\n     * @returns The {@link Window} instance to communicate with the window.\n     */\n    constructor(label, options = {}) {\n        var _a;\n        this.label = label;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.listeners = Object.create(null);\n        // @ts-expect-error `skip` is not a public API so it is not defined in WindowOptions\n        if (!(options === null || options === void 0 ? void 0 : options.skip)) {\n            (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|create', {\n                options: {\n                    ...options,\n                    parent: typeof options.parent === 'string'\n                        ? options.parent\n                        : (_a = options.parent) === null || _a === void 0 ? void 0 : _a.label,\n                    label\n                }\n            })\n                .then(async () => this.emit('tauri://created'))\n                .catch(async (e) => this.emit('tauri://error', e));\n        }\n    }\n    /**\n     * Gets the Window associated with the given label.\n     * @example\n     * ```typescript\n     * import { Window } from '@tauri-apps/api/window';\n     * const mainWindow = Window.getByLabel('main');\n     * ```\n     *\n     * @param label The window label.\n     * @returns The Window instance to communicate with the window or null if the window doesn't exist.\n     */\n    static async getByLabel(label) {\n        var _a;\n        return (_a = (await getAllWindows()).find((w) => w.label === label)) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Get an instance of `Window` for the current window.\n     */\n    static getCurrent() {\n        return getCurrentWindow();\n    }\n    /**\n     * Gets a list of instances of `Window` for all available windows.\n     */\n    static async getAll() {\n        return getAllWindows();\n    }\n    /**\n     *  Gets the focused window.\n     * @example\n     * ```typescript\n     * import { Window } from '@tauri-apps/api/window';\n     * const focusedWindow = Window.getFocusedWindow();\n     * ```\n     *\n     * @returns The Window instance or `undefined` if there is not any focused window.\n     */\n    static async getFocusedWindow() {\n        for (const w of await getAllWindows()) {\n            if (await w.isFocused()) {\n                return w;\n            }\n        }\n        return null;\n    }\n    /**\n     * Listen to an emitted event on this window.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const unlisten = await getCurrentWindow().listen<string>('state-changed', (event) => {\n     *   console.log(`Got error: ${payload}`);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n     * @param handler Event handler.\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async listen(event, handler) {\n        if (this._handleTauriEvent(event, handler)) {\n            return () => {\n                // eslint-disable-next-line security/detect-object-injection\n                const listeners = this.listeners[event];\n                listeners.splice(listeners.indexOf(handler), 1);\n            };\n        }\n        return (0,_event_js__WEBPACK_IMPORTED_MODULE_1__.listen)(event, handler, {\n            target: { kind: 'Window', label: this.label }\n        });\n    }\n    /**\n     * Listen to an emitted event on this window only once.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const unlisten = await getCurrentWindow().once<null>('initialized', (event) => {\n     *   console.log(`Window initialized!`);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n     * @param handler Event handler.\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async once(event, handler) {\n        if (this._handleTauriEvent(event, handler)) {\n            return () => {\n                // eslint-disable-next-line security/detect-object-injection\n                const listeners = this.listeners[event];\n                listeners.splice(listeners.indexOf(handler), 1);\n            };\n        }\n        return (0,_event_js__WEBPACK_IMPORTED_MODULE_1__.once)(event, handler, {\n            target: { kind: 'Window', label: this.label }\n        });\n    }\n    /**\n     * Emits an event to all {@link EventTarget|targets}.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().emit('window-loaded', { loggedIn: true, token: 'authToken' });\n     * ```\n     *\n     * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n     * @param payload Event payload.\n     */\n    async emit(event, payload) {\n        if (localTauriEvents.includes(event)) {\n            // eslint-disable-next-line\n            for (const handler of this.listeners[event] || []) {\n                handler({\n                    event,\n                    id: -1,\n                    payload\n                });\n            }\n            return;\n        }\n        return (0,_event_js__WEBPACK_IMPORTED_MODULE_1__.emit)(event, payload);\n    }\n    /**\n     * Emits an event to all {@link EventTarget|targets} matching the given target.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().emit('main', 'window-loaded', { loggedIn: true, token: 'authToken' });\n     * ```\n     * @param target Label of the target Window/Webview/WebviewWindow or raw {@link EventTarget} object.\n     * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n     * @param payload Event payload.\n     */\n    async emitTo(target, event, payload) {\n        if (localTauriEvents.includes(event)) {\n            // eslint-disable-next-line security/detect-object-injection\n            for (const handler of this.listeners[event] || []) {\n                handler({\n                    event,\n                    id: -1,\n                    payload\n                });\n            }\n            return;\n        }\n        return (0,_event_js__WEBPACK_IMPORTED_MODULE_1__.emitTo)(target, event, payload);\n    }\n    /** @ignore */\n    _handleTauriEvent(event, handler) {\n        if (localTauriEvents.includes(event)) {\n            if (!(event in this.listeners)) {\n                // eslint-disable-next-line\n                this.listeners[event] = [handler];\n            }\n            else {\n                // eslint-disable-next-line\n                this.listeners[event].push(handler);\n            }\n            return true;\n        }\n        return false;\n    }\n    // Getters\n    /**\n     * The scale factor that can be used to map physical pixels to logical pixels.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const factor = await getCurrentWindow().scaleFactor();\n     * ```\n     *\n     * @returns The window's monitor scale factor.\n     */\n    async scaleFactor() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|scale_factor', {\n            label: this.label\n        });\n    }\n    /**\n     * The position of the top-left hand corner of the window's client area relative to the top-left hand corner of the desktop.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const position = await getCurrentWindow().innerPosition();\n     * ```\n     *\n     * @returns The window's inner position.\n     */\n    async innerPosition() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|inner_position', {\n            label: this.label\n        }).then((p) => new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(p));\n    }\n    /**\n     * The position of the top-left hand corner of the window relative to the top-left hand corner of the desktop.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const position = await getCurrentWindow().outerPosition();\n     * ```\n     *\n     * @returns The window's outer position.\n     */\n    async outerPosition() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|outer_position', {\n            label: this.label\n        }).then((p) => new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(p));\n    }\n    /**\n     * The physical size of the window's client area.\n     * The client area is the content of the window, excluding the title bar and borders.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const size = await getCurrentWindow().innerSize();\n     * ```\n     *\n     * @returns The window's inner size.\n     */\n    async innerSize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|inner_size', {\n            label: this.label\n        }).then((s) => new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalSize(s));\n    }\n    /**\n     * The physical size of the entire window.\n     * These dimensions include the title bar and borders. If you don't want that (and you usually don't), use inner_size instead.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const size = await getCurrentWindow().outerSize();\n     * ```\n     *\n     * @returns The window's outer size.\n     */\n    async outerSize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|outer_size', {\n            label: this.label\n        }).then((s) => new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalSize(s));\n    }\n    /**\n     * Gets the window's current fullscreen state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const fullscreen = await getCurrentWindow().isFullscreen();\n     * ```\n     *\n     * @returns Whether the window is in fullscreen mode or not.\n     */\n    async isFullscreen() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_fullscreen', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current minimized state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const minimized = await getCurrentWindow().isMinimized();\n     * ```\n     */\n    async isMinimized() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_minimized', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current maximized state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const maximized = await getCurrentWindow().isMaximized();\n     * ```\n     *\n     * @returns Whether the window is maximized or not.\n     */\n    async isMaximized() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_maximized', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current focus state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const focused = await getCurrentWindow().isFocused();\n     * ```\n     *\n     * @returns Whether the window is focused or not.\n     */\n    async isFocused() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_focused', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current decorated state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const decorated = await getCurrentWindow().isDecorated();\n     * ```\n     *\n     * @returns Whether the window is decorated or not.\n     */\n    async isDecorated() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_decorated', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current resizable state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const resizable = await getCurrentWindow().isResizable();\n     * ```\n     *\n     * @returns Whether the window is resizable or not.\n     */\n    async isResizable() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_resizable', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's native maximize button state.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux / iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const maximizable = await getCurrentWindow().isMaximizable();\n     * ```\n     *\n     * @returns Whether the window's native maximize button is enabled or not.\n     */\n    async isMaximizable() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_maximizable', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's native minimize button state.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux / iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const minimizable = await getCurrentWindow().isMinimizable();\n     * ```\n     *\n     * @returns Whether the window's native minimize button is enabled or not.\n     */\n    async isMinimizable() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_minimizable', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's native close button state.\n     *\n     * #### Platform-specific\n     *\n     * - **iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const closable = await getCurrentWindow().isClosable();\n     * ```\n     *\n     * @returns Whether the window's native close button is enabled or not.\n     */\n    async isClosable() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_closable', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current visible state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const visible = await getCurrentWindow().isVisible();\n     * ```\n     *\n     * @returns Whether the window is visible or not.\n     */\n    async isVisible() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_visible', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current title.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const title = await getCurrentWindow().title();\n     * ```\n     */\n    async title() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|title', {\n            label: this.label\n        });\n    }\n    /**\n     * Gets the window's current theme.\n     *\n     * #### Platform-specific\n     *\n     * - **macOS:** Theme was introduced on macOS 10.14. Returns `light` on macOS 10.13 and below.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const theme = await getCurrentWindow().theme();\n     * ```\n     *\n     * @returns The window theme.\n     */\n    async theme() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|theme', {\n            label: this.label\n        });\n    }\n    /**\n     * Whether the window is configured to be always on top of other windows or not.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * const alwaysOnTop = await getCurrentWindow().isAlwaysOnTop();\n     * ```\n     *\n     * @returns Whether the window is visible or not.\n     */\n    async isAlwaysOnTop() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_always_on_top', {\n            label: this.label\n        });\n    }\n    // Setters\n    /**\n     * Centers the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().center();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async center() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|center', {\n            label: this.label\n        });\n    }\n    /**\n     *  Requests user attention to the window, this has no effect if the application\n     * is already focused. How requesting for user attention manifests is platform dependent,\n     * see `UserAttentionType` for details.\n     *\n     * Providing `null` will unset the request for user attention. Unsetting the request for\n     * user attention might not be done automatically by the WM when the window receives input.\n     *\n     * #### Platform-specific\n     *\n     * - **macOS:** `null` has no effect.\n     * - **Linux:** Urgency levels have the same effect.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().requestUserAttention();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async requestUserAttention(requestType) {\n        let requestType_ = null;\n        if (requestType) {\n            if (requestType === UserAttentionType.Critical) {\n                requestType_ = { type: 'Critical' };\n            }\n            else {\n                requestType_ = { type: 'Informational' };\n            }\n        }\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|request_user_attention', {\n            label: this.label,\n            value: requestType_\n        });\n    }\n    /**\n     * Updates the window resizable flag.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setResizable(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setResizable(resizable) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_resizable', {\n            label: this.label,\n            value: resizable\n        });\n    }\n    /**\n     * Enable or disable the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setEnabled(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     *\n     * @since 2.0.0\n     */\n    async setEnabled(enabled) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_enabled', {\n            label: this.label,\n            value: enabled\n        });\n    }\n    /**\n     * Whether the window is enabled or disabled.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setEnabled(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     *\n     * @since 2.0.0\n     */\n    async isEnabled() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|is_enabled', {\n            label: this.label\n        });\n    }\n    /**\n     * Sets whether the window's native maximize button is enabled or not.\n     * If resizable is set to false, this setting is ignored.\n     *\n     * #### Platform-specific\n     *\n     * - **macOS:** Disables the \"zoom\" button in the window titlebar, which is also used to enter fullscreen mode.\n     * - **Linux / iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setMaximizable(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setMaximizable(maximizable) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_maximizable', {\n            label: this.label,\n            value: maximizable\n        });\n    }\n    /**\n     * Sets whether the window's native minimize button is enabled or not.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux / iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setMinimizable(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setMinimizable(minimizable) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_minimizable', {\n            label: this.label,\n            value: minimizable\n        });\n    }\n    /**\n     * Sets whether the window's native close button is enabled or not.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux:** GTK+ will do its best to convince the window manager not to show a close button. Depending on the system, this function may not have any effect when called on a window that is already visible\n     * - **iOS / Android:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setClosable(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setClosable(closable) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_closable', {\n            label: this.label,\n            value: closable\n        });\n    }\n    /**\n     * Sets the window title.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setTitle('Tauri');\n     * ```\n     *\n     * @param title The new title\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setTitle(title) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_title', {\n            label: this.label,\n            value: title\n        });\n    }\n    /**\n     * Maximizes the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().maximize();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async maximize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|maximize', {\n            label: this.label\n        });\n    }\n    /**\n     * Unmaximizes the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().unmaximize();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async unmaximize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|unmaximize', {\n            label: this.label\n        });\n    }\n    /**\n     * Toggles the window maximized state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().toggleMaximize();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async toggleMaximize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|toggle_maximize', {\n            label: this.label\n        });\n    }\n    /**\n     * Minimizes the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().minimize();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async minimize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|minimize', {\n            label: this.label\n        });\n    }\n    /**\n     * Unminimizes the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().unminimize();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async unminimize() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|unminimize', {\n            label: this.label\n        });\n    }\n    /**\n     * Sets the window visibility to true.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().show();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async show() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|show', {\n            label: this.label\n        });\n    }\n    /**\n     * Sets the window visibility to false.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().hide();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async hide() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|hide', {\n            label: this.label\n        });\n    }\n    /**\n     * Closes the window.\n     *\n     * Note this emits a closeRequested event so you can intercept it. To force window close, use {@link Window.destroy}.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().close();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async close() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|close', {\n            label: this.label\n        });\n    }\n    /**\n     * Destroys the window. Behaves like {@link Window.close} but forces the window close instead of emitting a closeRequested event.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().destroy();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async destroy() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|destroy', {\n            label: this.label\n        });\n    }\n    /**\n     * Whether the window should have borders and bars.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setDecorations(false);\n     * ```\n     *\n     * @param decorations Whether the window should have borders and bars.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setDecorations(decorations) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_decorations', {\n            label: this.label,\n            value: decorations\n        });\n    }\n    /**\n     * Whether or not the window should have shadow.\n     *\n     * #### Platform-specific\n     *\n     * - **Windows:**\n     *   - `false` has no effect on decorated window, shadows are always ON.\n     *   - `true` will make undecorated window have a 1px white border,\n     * and on Windows 11, it will have a rounded corners.\n     * - **Linux:** Unsupported.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setShadow(false);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setShadow(enable) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_shadow', {\n            label: this.label,\n            value: enable\n        });\n    }\n    /**\n     * Set window effects.\n     */\n    async setEffects(effects) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_effects', {\n            label: this.label,\n            value: effects\n        });\n    }\n    /**\n     * Clear any applied effects if possible.\n     */\n    async clearEffects() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_effects', {\n            label: this.label,\n            value: null\n        });\n    }\n    /**\n     * Whether the window should always be on top of other windows.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setAlwaysOnTop(true);\n     * ```\n     *\n     * @param alwaysOnTop Whether the window should always be on top of other windows or not.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setAlwaysOnTop(alwaysOnTop) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_always_on_top', {\n            label: this.label,\n            value: alwaysOnTop\n        });\n    }\n    /**\n     * Whether the window should always be below other windows.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setAlwaysOnBottom(true);\n     * ```\n     *\n     * @param alwaysOnBottom Whether the window should always be below other windows or not.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setAlwaysOnBottom(alwaysOnBottom) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_always_on_bottom', {\n            label: this.label,\n            value: alwaysOnBottom\n        });\n    }\n    /**\n     * Prevents the window contents from being captured by other apps.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setContentProtected(true);\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setContentProtected(protected_) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_content_protected', {\n            label: this.label,\n            value: protected_\n        });\n    }\n    /**\n     * Resizes the window with a new inner size.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, LogicalSize } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setSize(new LogicalSize(600, 500));\n     * ```\n     *\n     * @param size The logical or physical inner size.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setSize(size) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_size', {\n            label: this.label,\n            value: size instanceof _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size ? size : new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size(size)\n        });\n    }\n    /**\n     * Sets the window minimum inner size. If the `size` argument is not provided, the constraint is unset.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, PhysicalSize } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setMinSize(new PhysicalSize(600, 500));\n     * ```\n     *\n     * @param size The logical or physical inner size, or `null` to unset the constraint.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setMinSize(size) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_min_size', {\n            label: this.label,\n            value: size instanceof _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size ? size : size ? new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size(size) : null\n        });\n    }\n    /**\n     * Sets the window maximum inner size. If the `size` argument is undefined, the constraint is unset.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, LogicalSize } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setMaxSize(new LogicalSize(600, 500));\n     * ```\n     *\n     * @param size The logical or physical inner size, or `null` to unset the constraint.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setMaxSize(size) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_max_size', {\n            label: this.label,\n            value: size instanceof _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size ? size : size ? new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Size(size) : null\n        });\n    }\n    /**\n     * Sets the window inner size constraints.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setSizeConstraints({ minWidth: 300 });\n     * ```\n     *\n     * @param constraints The logical or physical inner size, or `null` to unset the constraint.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setSizeConstraints(constraints) {\n        function logical(pixel) {\n            return pixel ? { Logical: pixel } : null;\n        }\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_size_constraints', {\n            label: this.label,\n            value: {\n                minWidth: logical(constraints === null || constraints === void 0 ? void 0 : constraints.minWidth),\n                minHeight: logical(constraints === null || constraints === void 0 ? void 0 : constraints.minHeight),\n                maxWidth: logical(constraints === null || constraints === void 0 ? void 0 : constraints.maxWidth),\n                maxHeight: logical(constraints === null || constraints === void 0 ? void 0 : constraints.maxHeight)\n            }\n        });\n    }\n    /**\n     * Sets the window outer position.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, LogicalPosition } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setPosition(new LogicalPosition(600, 500));\n     * ```\n     *\n     * @param position The new position, in logical or physical pixels.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setPosition(position) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_position', {\n            label: this.label,\n            value: position instanceof _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Position ? position : new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Position(position)\n        });\n    }\n    /**\n     * Sets the window fullscreen state.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setFullscreen(true);\n     * ```\n     *\n     * @param fullscreen Whether the window should go to fullscreen or not.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setFullscreen(fullscreen) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_fullscreen', {\n            label: this.label,\n            value: fullscreen\n        });\n    }\n    /**\n     * Bring the window to front and focus.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setFocus();\n     * ```\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setFocus() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_focus', {\n            label: this.label\n        });\n    }\n    /**\n     * Sets the window icon.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setIcon('/tauri/awesome.png');\n     * ```\n     *\n     * Note that you may need the `image-ico` or `image-png` Cargo features to use this API.\n     * To enable it, change your Cargo.toml file:\n     * ```toml\n     * [dependencies]\n     * tauri = { version = \"...\", features = [\"...\", \"image-png\"] }\n     * ```\n     *\n     * @param icon Icon bytes or path to the icon file.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setIcon(icon) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_icon', {\n            label: this.label,\n            value: (0,_image_js__WEBPACK_IMPORTED_MODULE_3__.transformImage)(icon)\n        });\n    }\n    /**\n     * Whether the window icon should be hidden from the taskbar or not.\n     *\n     * #### Platform-specific\n     *\n     * - **macOS:** Unsupported.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setSkipTaskbar(true);\n     * ```\n     *\n     * @param skip true to hide window icon, false to show it.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setSkipTaskbar(skip) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_skip_taskbar', {\n            label: this.label,\n            value: skip\n        });\n    }\n    /**\n     * Grabs the cursor, preventing it from leaving the window.\n     *\n     * There's no guarantee that the cursor will be hidden. You should\n     * hide it by yourself if you want so.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux:** Unsupported.\n     * - **macOS:** This locks the cursor in a fixed location, which looks visually awkward.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setCursorGrab(true);\n     * ```\n     *\n     * @param grab `true` to grab the cursor icon, `false` to release it.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setCursorGrab(grab) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_cursor_grab', {\n            label: this.label,\n            value: grab\n        });\n    }\n    /**\n     * Modifies the cursor's visibility.\n     *\n     * #### Platform-specific\n     *\n     * - **Windows:** The cursor is only hidden within the confines of the window.\n     * - **macOS:** The cursor is hidden as long as the window has input focus, even if the cursor is\n     *   outside of the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setCursorVisible(false);\n     * ```\n     *\n     * @param visible If `false`, this will hide the cursor. If `true`, this will show the cursor.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setCursorVisible(visible) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_cursor_visible', {\n            label: this.label,\n            value: visible\n        });\n    }\n    /**\n     * Modifies the cursor icon of the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setCursorIcon('help');\n     * ```\n     *\n     * @param icon The new cursor icon.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setCursorIcon(icon) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_cursor_icon', {\n            label: this.label,\n            value: icon\n        });\n    }\n    /**\n     * Sets the window background color.\n     *\n     * #### Platform-specific:\n     *\n     * - **Windows:** alpha channel is ignored.\n     * - **iOS / Android:** Unsupported.\n     *\n     * @returns A promise indicating the success or failure of the operation.\n     *\n     * @since 2.1.0\n     */\n    async setBackgroundColor(color) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_background_color', { color });\n    }\n    /**\n     * Changes the position of the cursor in window coordinates.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, LogicalPosition } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setCursorPosition(new LogicalPosition(600, 300));\n     * ```\n     *\n     * @param position The new cursor position.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setCursorPosition(position) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_cursor_position', {\n            label: this.label,\n            value: position instanceof _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Position ? position : new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.Position(position)\n        });\n    }\n    /**\n     * Changes the cursor events behavior.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setIgnoreCursorEvents(true);\n     * ```\n     *\n     * @param ignore `true` to ignore the cursor events; `false` to process them as usual.\n     * @returns A promise indicating the success or failure of the operation.\n     */\n    async setIgnoreCursorEvents(ignore) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_ignore_cursor_events', {\n            label: this.label,\n            value: ignore\n        });\n    }\n    /**\n     * Starts dragging the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().startDragging();\n     * ```\n     *\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async startDragging() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|start_dragging', {\n            label: this.label\n        });\n    }\n    /**\n     * Starts resize-dragging the window.\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().startResizeDragging();\n     * ```\n     *\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async startResizeDragging(direction) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|start_resize_dragging', {\n            label: this.label,\n            value: direction\n        });\n    }\n    /**\n     * Sets the badge count. It is app wide and not specific to this window.\n     *\n     * #### Platform-specific\n     *\n     * - **Windows**: Unsupported. Use @{linkcode Window.setOverlayIcon} instead.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setBadgeCount(5);\n     * ```\n     *\n     * @param count The badge count. Use `undefined` to remove the badge.\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async setBadgeCount(count) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_badge_count', {\n            label: this.label,\n            value: count\n        });\n    }\n    /**\n     * Sets the badge cont **macOS only**.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setBadgeLabel(\"Hello\");\n     * ```\n     *\n     * @param label The badge label. Use `undefined` to remove the badge.\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async setBadgeLabel(label) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_badge_label', {\n            label: this.label,\n            value: label\n        });\n    }\n    /**\n     * Sets the overlay icon. **Windows only**\n     * The overlay icon can be set for every window.\n     *\n     *\n     * Note that you may need the `image-ico` or `image-png` Cargo features to use this API.\n     * To enable it, change your Cargo.toml file:\n     *\n     * ```toml\n     * [dependencies]\n     * tauri = { version = \"...\", features = [\"...\", \"image-png\"] }\n     * ```\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setOverlayIcon(\"/tauri/awesome.png\");\n     * ```\n     *\n     * @param icon Icon bytes or path to the icon file. Use `undefined` to remove the overlay icon.\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async setOverlayIcon(icon) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_overlay_icon', {\n            label: this.label,\n            value: icon ? (0,_image_js__WEBPACK_IMPORTED_MODULE_3__.transformImage)(icon) : undefined\n        });\n    }\n    /**\n     * Sets the taskbar progress state.\n     *\n     * #### Platform-specific\n     *\n     * - **Linux / macOS**: Progress bar is app-wide and not specific to this window.\n     * - **Linux**: Only supported desktop environments with `libunity` (e.g. GNOME).\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow, ProgressBarStatus } from '@tauri-apps/api/window';\n     * await getCurrentWindow().setProgressBar({\n     *   status: ProgressBarStatus.Normal,\n     *   progress: 50,\n     * });\n     * ```\n     *\n     * @return A promise indicating the success or failure of the operation.\n     */\n    async setProgressBar(state) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_progress_bar', {\n            label: this.label,\n            value: state\n        });\n    }\n    /**\n     * Sets whether the window should be visible on all workspaces or virtual desktops.\n     *\n     * #### Platform-specific\n     *\n     * - **Windows / iOS / Android:** Unsupported.\n     *\n     * @since 2.0.0\n     */\n    async setVisibleOnAllWorkspaces(visible) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_visible_on_all_workspaces', {\n            label: this.label,\n            value: visible\n        });\n    }\n    /**\n     * Sets the title bar style. **macOS only**.\n     *\n     * @since 2.0.0\n     */\n    async setTitleBarStyle(style) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_title_bar_style', {\n            label: this.label,\n            value: style\n        });\n    }\n    /**\n     * Set window theme, pass in `null` or `undefined` to follow system theme\n     *\n     * #### Platform-specific\n     *\n     * - **Linux / macOS**: Theme is app-wide and not specific to this window.\n     * - **iOS / Android:** Unsupported.\n     *\n     * @since 2.0.0\n     */\n    async setTheme(theme) {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|set_theme', {\n            label: this.label,\n            value: theme\n        });\n    }\n    // Listeners\n    /**\n     * Listen to window resize.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * const unlisten = await getCurrentWindow().onResized(({ payload: size }) => {\n     *  console.log('Window resized', size);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onResized(handler) {\n        return this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_RESIZED, (e) => {\n            e.payload = new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalSize(e.payload);\n            handler(e);\n        });\n    }\n    /**\n     * Listen to window move.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * const unlisten = await getCurrentWindow().onMoved(({ payload: position }) => {\n     *  console.log('Window moved', position);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onMoved(handler) {\n        return this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_MOVED, (e) => {\n            e.payload = new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(e.payload);\n            handler(e);\n        });\n    }\n    /**\n     * Listen to window close requested. Emitted when the user requests to closes the window.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * import { confirm } from '@tauri-apps/api/dialog';\n     * const unlisten = await getCurrentWindow().onCloseRequested(async (event) => {\n     *   const confirmed = await confirm('Are you sure?');\n     *   if (!confirmed) {\n     *     // user did not confirm closing the window; let's prevent it\n     *     event.preventDefault();\n     *   }\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onCloseRequested(handler) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_CLOSE_REQUESTED, async (event) => {\n            const evt = new CloseRequestedEvent(event);\n            await handler(evt);\n            if (!evt.isPreventDefault()) {\n                await this.destroy();\n            }\n        });\n    }\n    /**\n     * Listen to a file drop event.\n     * The listener is triggered when the user hovers the selected files on the webview,\n     * drops the files or cancels the operation.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/webview\";\n     * const unlisten = await getCurrentWindow().onDragDropEvent((event) => {\n     *  if (event.payload.type === 'over') {\n     *    console.log('User hovering', event.payload.position);\n     *  } else if (event.payload.type === 'drop') {\n     *    console.log('User dropped', event.payload.paths);\n     *  } else {\n     *    console.log('File drop cancelled');\n     *  }\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onDragDropEvent(handler) {\n        const unlistenDrag = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.DRAG_ENTER, (event) => {\n            handler({\n                ...event,\n                payload: {\n                    type: 'enter',\n                    paths: event.payload.paths,\n                    position: new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(event.payload.position)\n                }\n            });\n        });\n        const unlistenDragOver = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.DRAG_OVER, (event) => {\n            handler({\n                ...event,\n                payload: {\n                    type: 'over',\n                    position: new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(event.payload.position)\n                }\n            });\n        });\n        const unlistenDrop = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.DRAG_DROP, (event) => {\n            handler({\n                ...event,\n                payload: {\n                    type: 'drop',\n                    paths: event.payload.paths,\n                    position: new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(event.payload.position)\n                }\n            });\n        });\n        const unlistenCancel = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.DRAG_LEAVE, (event) => {\n            handler({ ...event, payload: { type: 'leave' } });\n        });\n        return () => {\n            unlistenDrag();\n            unlistenDrop();\n            unlistenDragOver();\n            unlistenCancel();\n        };\n    }\n    /**\n     * Listen to window focus change.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * const unlisten = await getCurrentWindow().onFocusChanged(({ payload: focused }) => {\n     *  console.log('Focus changed, window is focused? ' + focused);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onFocusChanged(handler) {\n        const unlistenFocus = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_FOCUS, (event) => {\n            handler({ ...event, payload: true });\n        });\n        const unlistenBlur = await this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_BLUR, (event) => {\n            handler({ ...event, payload: false });\n        });\n        return () => {\n            unlistenFocus();\n            unlistenBlur();\n        };\n    }\n    /**\n     * Listen to window scale change. Emitted when the window's scale factor has changed.\n     * The following user actions can cause DPI changes:\n     * - Changing the display's resolution.\n     * - Changing the display's scale factor (e.g. in Control Panel on Windows).\n     * - Moving the window to a display with a different scale factor.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * const unlisten = await getCurrentWindow().onScaleChanged(({ payload }) => {\n     *  console.log('Scale changed', payload.scaleFactor, payload.size);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onScaleChanged(handler) {\n        return this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_SCALE_FACTOR_CHANGED, handler);\n    }\n    /**\n     * Listen to the system theme change.\n     *\n     * @example\n     * ```typescript\n     * import { getCurrentWindow } from \"@tauri-apps/api/window\";\n     * const unlisten = await getCurrentWindow().onThemeChanged(({ payload: theme }) => {\n     *  console.log('New theme: ' + theme);\n     * });\n     *\n     * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n     * unlisten();\n     * ```\n     *\n     * @returns A promise resolving to a function to unlisten to the event.\n     * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n     */\n    async onThemeChanged(handler) {\n        return this.listen(_event_js__WEBPACK_IMPORTED_MODULE_1__.TauriEvent.WINDOW_THEME_CHANGED, handler);\n    }\n}\n/**\n * Background throttling policy\n *\n * @since 2.0.0\n */\nvar BackgroundThrottlingPolicy;\n(function (BackgroundThrottlingPolicy) {\n    BackgroundThrottlingPolicy[\"Disabled\"] = \"disabled\";\n    BackgroundThrottlingPolicy[\"Throttle\"] = \"throttle\";\n    BackgroundThrottlingPolicy[\"Suspend\"] = \"suspend\";\n})(BackgroundThrottlingPolicy || (BackgroundThrottlingPolicy = {}));\n/**\n * Platform-specific window effects\n *\n * @since 2.0.0\n */\nvar Effect;\n(function (Effect) {\n    /**\n     * A default material appropriate for the view's effectiveAppearance.  **macOS 10.14-**\n     *\n     * @deprecated since macOS 10.14. You should instead choose an appropriate semantic material.\n     */\n    Effect[\"AppearanceBased\"] = \"appearanceBased\";\n    /**\n     *  **macOS 10.14-**\n     *\n     * @deprecated since macOS 10.14. Use a semantic material instead.\n     */\n    Effect[\"Light\"] = \"light\";\n    /**\n     *  **macOS 10.14-**\n     *\n     * @deprecated since macOS 10.14. Use a semantic material instead.\n     */\n    Effect[\"Dark\"] = \"dark\";\n    /**\n     *  **macOS 10.14-**\n     *\n     * @deprecated since macOS 10.14. Use a semantic material instead.\n     */\n    Effect[\"MediumLight\"] = \"mediumLight\";\n    /**\n     *  **macOS 10.14-**\n     *\n     * @deprecated since macOS 10.14. Use a semantic material instead.\n     */\n    Effect[\"UltraDark\"] = \"ultraDark\";\n    /**\n     *  **macOS 10.10+**\n     */\n    Effect[\"Titlebar\"] = \"titlebar\";\n    /**\n     *  **macOS 10.10+**\n     */\n    Effect[\"Selection\"] = \"selection\";\n    /**\n     *  **macOS 10.11+**\n     */\n    Effect[\"Menu\"] = \"menu\";\n    /**\n     *  **macOS 10.11+**\n     */\n    Effect[\"Popover\"] = \"popover\";\n    /**\n     *  **macOS 10.11+**\n     */\n    Effect[\"Sidebar\"] = \"sidebar\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"HeaderView\"] = \"headerView\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"Sheet\"] = \"sheet\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"WindowBackground\"] = \"windowBackground\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"HudWindow\"] = \"hudWindow\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"FullScreenUI\"] = \"fullScreenUI\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"Tooltip\"] = \"tooltip\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"ContentBackground\"] = \"contentBackground\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"UnderWindowBackground\"] = \"underWindowBackground\";\n    /**\n     *  **macOS 10.14+**\n     */\n    Effect[\"UnderPageBackground\"] = \"underPageBackground\";\n    /**\n     *  **Windows 11 Only**\n     */\n    Effect[\"Mica\"] = \"mica\";\n    /**\n     * **Windows 7/10/11(22H1) Only**\n     *\n     * #### Notes\n     *\n     * This effect has bad performance when resizing/dragging the window on Windows 11 build 22621.\n     */\n    Effect[\"Blur\"] = \"blur\";\n    /**\n     * **Windows 10/11**\n     *\n     * #### Notes\n     *\n     * This effect has bad performance when resizing/dragging the window on Windows 10 v1903+ and Windows 11 build 22000.\n     */\n    Effect[\"Acrylic\"] = \"acrylic\";\n    /**\n     * Tabbed effect that matches the system dark perefence **Windows 11 Only**\n     */\n    Effect[\"Tabbed\"] = \"tabbed\";\n    /**\n     * Tabbed effect with dark mode but only if dark mode is enabled on the system **Windows 11 Only**\n     */\n    Effect[\"TabbedDark\"] = \"tabbedDark\";\n    /**\n     * Tabbed effect with light mode **Windows 11 Only**\n     */\n    Effect[\"TabbedLight\"] = \"tabbedLight\";\n})(Effect || (Effect = {}));\n/**\n * Window effect state **macOS only**\n *\n * @see https://developer.apple.com/documentation/appkit/nsvisualeffectview/state\n *\n * @since 2.0.0\n */\nvar EffectState;\n(function (EffectState) {\n    /**\n     *  Make window effect state follow the window's active state **macOS only**\n     */\n    EffectState[\"FollowsWindowActiveState\"] = \"followsWindowActiveState\";\n    /**\n     *  Make window effect state always active **macOS only**\n     */\n    EffectState[\"Active\"] = \"active\";\n    /**\n     *  Make window effect state always inactive **macOS only**\n     */\n    EffectState[\"Inactive\"] = \"inactive\";\n})(EffectState || (EffectState = {}));\nfunction mapMonitor(m) {\n    return m === null\n        ? null\n        : {\n            name: m.name,\n            scaleFactor: m.scaleFactor,\n            position: new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(m.position),\n            size: new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalSize(m.size)\n        };\n}\n/**\n * Returns the monitor on which the window currently resides.\n * Returns `null` if current monitor can't be detected.\n * @example\n * ```typescript\n * import { currentMonitor } from '@tauri-apps/api/window';\n * const monitor = currentMonitor();\n * ```\n *\n * @since 1.0.0\n */\nasync function currentMonitor() {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|current_monitor').then(mapMonitor);\n}\n/**\n * Returns the primary monitor of the system.\n * Returns `null` if it can't identify any monitor as a primary one.\n * @example\n * ```typescript\n * import { primaryMonitor } from '@tauri-apps/api/window';\n * const monitor = primaryMonitor();\n * ```\n *\n * @since 1.0.0\n */\nasync function primaryMonitor() {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|primary_monitor').then(mapMonitor);\n}\n/**\n * Returns the monitor that contains the given point. Returns `null` if can't find any.\n * @example\n * ```typescript\n * import { monitorFromPoint } from '@tauri-apps/api/window';\n * const monitor = monitorFromPoint();\n * ```\n *\n * @since 1.0.0\n */\nasync function monitorFromPoint(x, y) {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|monitor_from_point', {\n        x,\n        y\n    }).then(mapMonitor);\n}\n/**\n * Returns the list of all the monitors available on the system.\n * @example\n * ```typescript\n * import { availableMonitors } from '@tauri-apps/api/window';\n * const monitors = availableMonitors();\n * ```\n *\n * @since 1.0.0\n */\nasync function availableMonitors() {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|available_monitors').then((ms) => ms.map(mapMonitor));\n}\n/**\n * Get the cursor position relative to the top-left hand corner of the desktop.\n *\n * Note that the top-left hand corner of the desktop is not necessarily the same as the screen.\n * If the user uses a desktop with multiple monitors,\n * the top-left hand corner of the desktop is the top-left hand corner of the main monitor on Windows and macOS\n * or the top-left of the leftmost monitor on X11.\n *\n * The coordinates can be negative if the top-left hand corner of the window is outside of the visible screen region.\n */\nasync function cursorPosition() {\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.invoke)('plugin:window|cursor_position').then((v) => new _dpi_js__WEBPACK_IMPORTED_MODULE_0__.PhysicalPosition(v));\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvd2luZG93LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwRTtBQUNsQjtBQUNZO0FBQ2pDO0FBQ1M7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msb0JBQW9CO0FBQ3hEO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0IsbURBQW1ELGdCQUFnQixRQUFRO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4Q0FBOEM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBTTtBQUNqQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQztBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdEQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBLG1DQUFtQyxRQUFRO0FBQzNDLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFNO0FBQ3JCLHNCQUFzQjtBQUN0QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0NBQUk7QUFDbkIsc0JBQXNCO0FBQ3RCLFNBQVM7QUFDVDtBQUNBO0FBQ0EsOEJBQThCLDBCQUEwQjtBQUN4RDtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQyx3REFBd0Qsb0NBQW9DO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0NBQUk7QUFDbkI7QUFDQTtBQUNBLDhCQUE4QiwyQkFBMkI7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQyxnRUFBZ0Usb0NBQW9DO0FBQ3BHO0FBQ0EsOEVBQThFLG1CQUFtQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTLGtCQUFrQixxREFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVMsa0JBQWtCLHFEQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTLGtCQUFrQixpREFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTLGtCQUFrQixpREFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUdBQW1HLHFCQUFxQjtBQUN4SDtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQ0FBMEMsb0JBQW9CO0FBQzlEO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnQ0FBZ0M7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsbUNBQW1DLHlDQUFJLGNBQWMseUNBQUk7QUFDekQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUNBQWlDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLG1DQUFtQyx5Q0FBSSxxQkFBcUIseUNBQUk7QUFDaEUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0NBQWdDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLG1DQUFtQyx5Q0FBSSxxQkFBcUIseUNBQUk7QUFDaEUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLHFEQUFxRCxlQUFlO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGlCQUFpQjtBQUM5QztBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvQ0FBb0M7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsdUNBQXVDLDZDQUFRLGtCQUFrQiw2Q0FBUTtBQUN6RSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsbUJBQW1CLHlEQUFjO0FBQ2pDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTSx5Q0FBeUMsT0FBTztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9DQUFvQztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQSx1Q0FBdUMsNkNBQVEsa0JBQWtCLDZDQUFRO0FBQ3pFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGdDQUFnQztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFNO0FBQ3JCO0FBQ0EsMEJBQTBCLHlEQUFjO0FBQ3hDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNDQUFzQztBQUN0RDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBTTtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQU07QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkMsOERBQThELGVBQWU7QUFDN0U7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlEQUFVO0FBQ3JDLDRCQUE0QixpREFBWTtBQUN4QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLDREQUE0RCxtQkFBbUI7QUFDL0U7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlEQUFVO0FBQ3JDLDRCQUE0QixxREFBZ0I7QUFDNUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQyxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpREFBVTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpREFBVTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHFEQUFnQjtBQUNsRDtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsbURBQW1ELGlEQUFVO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHFEQUFnQjtBQUNsRDtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsK0NBQStDLGlEQUFVO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MscURBQWdCO0FBQ2xEO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxpREFBaUQsaURBQVU7QUFDM0Qsc0JBQXNCLHFCQUFxQixpQkFBaUI7QUFDNUQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkMsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsaURBQVU7QUFDMUQsc0JBQXNCLHlCQUF5QjtBQUMvQyxTQUFTO0FBQ1QsK0NBQStDLGlEQUFVO0FBQ3pELHNCQUFzQiwwQkFBMEI7QUFDaEQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLG1FQUFtRSxTQUFTO0FBQzVFO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpREFBVTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLG1FQUFtRSxnQkFBZ0I7QUFDbkY7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlEQUFVO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0VBQWdFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQWdCO0FBQzFDLHNCQUFzQixpREFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpQkFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBTTtBQUNqQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQU0sa0RBQWtELHFEQUFnQjtBQUNuRjs7QUFFd1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YXVyaS1hcHBzL2FwaS93aW5kb3cuanM/ZjFkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaHlzaWNhbFBvc2l0aW9uLCBQaHlzaWNhbFNpemUsIFNpemUsIFBvc2l0aW9uIH0gZnJvbSAnLi9kcGkuanMnO1xuZXhwb3J0IHsgTG9naWNhbFBvc2l0aW9uLCBMb2dpY2FsU2l6ZSB9IGZyb20gJy4vZHBpLmpzJztcbmltcG9ydCB7IGxpc3Rlbiwgb25jZSwgZW1pdCwgZW1pdFRvLCBUYXVyaUV2ZW50IH0gZnJvbSAnLi9ldmVudC5qcyc7XG5pbXBvcnQgeyBpbnZva2UgfSBmcm9tICcuL2NvcmUuanMnO1xuaW1wb3J0IHsgdHJhbnNmb3JtSW1hZ2UgfSBmcm9tICcuL2ltYWdlLmpzJztcblxuLy8gQ29weXJpZ2h0IDIwMTktMjAyNCBUYXVyaSBQcm9ncmFtbWUgd2l0aGluIFRoZSBDb21tb25zIENvbnNlcnZhbmN5XG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLyoqXG4gKiBQcm92aWRlcyBBUElzIHRvIGNyZWF0ZSB3aW5kb3dzLCBjb21tdW5pY2F0ZSB3aXRoIG90aGVyIHdpbmRvd3MgYW5kIG1hbmlwdWxhdGUgdGhlIGN1cnJlbnQgd2luZG93LlxuICpcbiAqICMjIyMgV2luZG93IGV2ZW50c1xuICpcbiAqIEV2ZW50cyBjYW4gYmUgbGlzdGVuZWQgdG8gdXNpbmcge0BsaW5rIFdpbmRvdy5saXN0ZW59OlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvd2luZG93XCI7XG4gKiBnZXRDdXJyZW50V2luZG93KCkubGlzdGVuKFwibXktd2luZG93LWV2ZW50XCIsICh7IGV2ZW50LCBwYXlsb2FkIH0pID0+IHsgfSk7XG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlXG4gKi9cbi8qKlxuICogQXR0ZW50aW9uIHR5cGUgdG8gcmVxdWVzdCBvbiBhIHdpbmRvdy5cbiAqXG4gKiBAc2luY2UgMS4wLjBcbiAqL1xudmFyIFVzZXJBdHRlbnRpb25UeXBlO1xuKGZ1bmN0aW9uIChVc2VyQXR0ZW50aW9uVHlwZSkge1xuICAgIC8qKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKiAtICoqbWFjT1M6KiogQm91bmNlcyB0aGUgZG9jayBpY29uIHVudGlsIHRoZSBhcHBsaWNhdGlvbiBpcyBpbiBmb2N1cy5cbiAgICAgKiAtICoqV2luZG93czoqKiBGbGFzaGVzIGJvdGggdGhlIHdpbmRvdyBhbmQgdGhlIHRhc2tiYXIgYnV0dG9uIHVudGlsIHRoZSBhcHBsaWNhdGlvbiBpcyBpbiBmb2N1cy5cbiAgICAgKi9cbiAgICBVc2VyQXR0ZW50aW9uVHlwZVtVc2VyQXR0ZW50aW9uVHlwZVtcIkNyaXRpY2FsXCJdID0gMV0gPSBcIkNyaXRpY2FsXCI7XG4gICAgLyoqXG4gICAgICogIyMjIyBQbGF0Zm9ybS1zcGVjaWZpY1xuICAgICAqIC0gKiptYWNPUzoqKiBCb3VuY2VzIHRoZSBkb2NrIGljb24gb25jZS5cbiAgICAgKiAtICoqV2luZG93czoqKiBGbGFzaGVzIHRoZSB0YXNrYmFyIGJ1dHRvbiB1bnRpbCB0aGUgYXBwbGljYXRpb24gaXMgaW4gZm9jdXMuXG4gICAgICovXG4gICAgVXNlckF0dGVudGlvblR5cGVbVXNlckF0dGVudGlvblR5cGVbXCJJbmZvcm1hdGlvbmFsXCJdID0gMl0gPSBcIkluZm9ybWF0aW9uYWxcIjtcbn0pKFVzZXJBdHRlbnRpb25UeXBlIHx8IChVc2VyQXR0ZW50aW9uVHlwZSA9IHt9KSk7XG5jbGFzcyBDbG9zZVJlcXVlc3RlZEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihldmVudCkge1xuICAgICAgICB0aGlzLl9wcmV2ZW50RGVmYXVsdCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmV2ZW50ID0gZXZlbnQuZXZlbnQ7XG4gICAgICAgIHRoaXMuaWQgPSBldmVudC5pZDtcbiAgICB9XG4gICAgcHJldmVudERlZmF1bHQoKSB7XG4gICAgICAgIHRoaXMuX3ByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcbiAgICB9XG4gICAgaXNQcmV2ZW50RGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ByZXZlbnREZWZhdWx0O1xuICAgIH1cbn1cbnZhciBQcm9ncmVzc0JhclN0YXR1cztcbihmdW5jdGlvbiAoUHJvZ3Jlc3NCYXJTdGF0dXMpIHtcbiAgICAvKipcbiAgICAgKiBIaWRlIHByb2dyZXNzIGJhci5cbiAgICAgKi9cbiAgICBQcm9ncmVzc0JhclN0YXR1c1tcIk5vbmVcIl0gPSBcIm5vbmVcIjtcbiAgICAvKipcbiAgICAgKiBOb3JtYWwgc3RhdGUuXG4gICAgICovXG4gICAgUHJvZ3Jlc3NCYXJTdGF0dXNbXCJOb3JtYWxcIl0gPSBcIm5vcm1hbFwiO1xuICAgIC8qKlxuICAgICAqIEluZGV0ZXJtaW5hdGUgc3RhdGUuICoqVHJlYXRlZCBhcyBOb3JtYWwgb24gTGludXggYW5kIG1hY09TKipcbiAgICAgKi9cbiAgICBQcm9ncmVzc0JhclN0YXR1c1tcIkluZGV0ZXJtaW5hdGVcIl0gPSBcImluZGV0ZXJtaW5hdGVcIjtcbiAgICAvKipcbiAgICAgKiBQYXVzZWQgc3RhdGUuICoqVHJlYXRlZCBhcyBOb3JtYWwgb24gTGludXgqKlxuICAgICAqL1xuICAgIFByb2dyZXNzQmFyU3RhdHVzW1wiUGF1c2VkXCJdID0gXCJwYXVzZWRcIjtcbiAgICAvKipcbiAgICAgKiBFcnJvciBzdGF0ZS4gKipUcmVhdGVkIGFzIE5vcm1hbCBvbiBsaW51eCoqXG4gICAgICovXG4gICAgUHJvZ3Jlc3NCYXJTdGF0dXNbXCJFcnJvclwiXSA9IFwiZXJyb3JcIjtcbn0pKFByb2dyZXNzQmFyU3RhdHVzIHx8IChQcm9ncmVzc0JhclN0YXR1cyA9IHt9KSk7XG4vKipcbiAqIEdldCBhbiBpbnN0YW5jZSBvZiBgV2luZG93YCBmb3IgdGhlIGN1cnJlbnQgd2luZG93LlxuICpcbiAqIEBzaW5jZSAxLjAuMFxuICovXG5mdW5jdGlvbiBnZXRDdXJyZW50V2luZG93KCkge1xuICAgIHJldHVybiBuZXcgV2luZG93KHdpbmRvdy5fX1RBVVJJX0lOVEVSTkFMU19fLm1ldGFkYXRhLmN1cnJlbnRXaW5kb3cubGFiZWwsIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgc2tpcGAgaXMgbm90IGRlZmluZWQgaW4gdGhlIHB1YmxpYyBBUEkgYnV0IGl0IGlzIGhhbmRsZWQgYnkgdGhlIGNvbnN0cnVjdG9yXG4gICAgICAgIHNraXA6IHRydWVcbiAgICB9KTtcbn1cbi8qKlxuICogR2V0cyBhIGxpc3Qgb2YgaW5zdGFuY2VzIG9mIGBXaW5kb3dgIGZvciBhbGwgYXZhaWxhYmxlIHdpbmRvd3MuXG4gKlxuICogQHNpbmNlIDEuMC4wXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbFdpbmRvd3MoKSB7XG4gICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xnZXRfYWxsX3dpbmRvd3MnKS50aGVuKCh3aW5kb3dzKSA9PiB3aW5kb3dzLm1hcCgodykgPT4gbmV3IFdpbmRvdyh3LCB7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgYHNraXBgIGlzIG5vdCBkZWZpbmVkIGluIHRoZSBwdWJsaWMgQVBJIGJ1dCBpdCBpcyBoYW5kbGVkIGJ5IHRoZSBjb25zdHJ1Y3RvclxuICAgICAgICBza2lwOiB0cnVlXG4gICAgfSkpKTtcbn1cbi8qKiBAaWdub3JlICovXG4vLyBldmVudHMgdGhhdCBhcmUgZW1pdHRlZCByaWdodCBoZXJlIGluc3RlYWQgb2YgYnkgdGhlIGNyZWF0ZWQgd2luZG93XG5jb25zdCBsb2NhbFRhdXJpRXZlbnRzID0gWyd0YXVyaTovL2NyZWF0ZWQnLCAndGF1cmk6Ly9lcnJvciddO1xuLyoqXG4gKiBDcmVhdGUgbmV3IHdpbmRvdyBvciBnZXQgYSBoYW5kbGUgdG8gYW4gZXhpc3Rpbmcgb25lLlxuICpcbiAqIFdpbmRvd3MgYXJlIGlkZW50aWZpZWQgYnkgYSAqbGFiZWwqICBhIHVuaXF1ZSBpZGVudGlmaWVyIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVmZXJlbmNlIGl0IGxhdGVyLlxuICogSXQgbWF5IG9ubHkgY29udGFpbiBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyBgYS16QS1aYCBwbHVzIHRoZSBmb2xsb3dpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGAtYCwgYC9gLCBgOmAgYW5kIGBfYC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgV2luZG93IH0gZnJvbSBcIkB0YXVyaS1hcHBzL2FwaS93aW5kb3dcIlxuICpcbiAqIGNvbnN0IGFwcFdpbmRvdyA9IG5ldyBXaW5kb3coJ3RoZVVuaXF1ZUxhYmVsJyk7XG4gKlxuICogYXBwV2luZG93Lm9uY2UoJ3RhdXJpOi8vY3JlYXRlZCcsIGZ1bmN0aW9uICgpIHtcbiAqICAvLyB3aW5kb3cgc3VjY2Vzc2Z1bGx5IGNyZWF0ZWRcbiAqIH0pO1xuICogYXBwV2luZG93Lm9uY2UoJ3RhdXJpOi8vZXJyb3InLCBmdW5jdGlvbiAoZSkge1xuICogIC8vIGFuIGVycm9yIGhhcHBlbmVkIGNyZWF0aW5nIHRoZSB3aW5kb3dcbiAqIH0pO1xuICpcbiAqIC8vIGVtaXQgYW4gZXZlbnQgdG8gdGhlIGJhY2tlbmRcbiAqIGF3YWl0IGFwcFdpbmRvdy5lbWl0KFwic29tZS1ldmVudFwiLCBcImRhdGFcIik7XG4gKiAvLyBsaXN0ZW4gdG8gYW4gZXZlbnQgZnJvbSB0aGUgYmFja2VuZFxuICogY29uc3QgdW5saXN0ZW4gPSBhd2FpdCBhcHBXaW5kb3cubGlzdGVuKFwiZXZlbnQtbmFtZVwiLCBlID0+IHt9KTtcbiAqIHVubGlzdGVuKCk7XG4gKiBgYGBcbiAqXG4gKiBAc2luY2UgMi4wLjBcbiAqL1xuY2xhc3MgV2luZG93IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCBhcHBXaW5kb3cgPSBuZXcgV2luZG93KCdteS1sYWJlbCcpO1xuICAgICAqIGFwcFdpbmRvdy5vbmNlKCd0YXVyaTovL2NyZWF0ZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICogIC8vIHdpbmRvdyBzdWNjZXNzZnVsbHkgY3JlYXRlZFxuICAgICAqIH0pO1xuICAgICAqIGFwcFdpbmRvdy5vbmNlKCd0YXVyaTovL2Vycm9yJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgKiAgLy8gYW4gZXJyb3IgaGFwcGVuZWQgY3JlYXRpbmcgdGhlIHdpbmRvd1xuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGxhYmVsIFRoZSB1bmlxdWUgd2luZG93IGxhYmVsLiBNdXN0IGJlIGFscGhhbnVtZXJpYzogYGEtekEtWi0vOl9gLlxuICAgICAqIEByZXR1cm5zIFRoZSB7QGxpbmsgV2luZG93fSBpbnN0YW5jZSB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSB3aW5kb3cuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobGFiZWwsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMubGFiZWwgPSBsYWJlbDtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXNzaWdubWVudFxuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgYHNraXBgIGlzIG5vdCBhIHB1YmxpYyBBUEkgc28gaXQgaXMgbm90IGRlZmluZWQgaW4gV2luZG93T3B0aW9uc1xuICAgICAgICBpZiAoIShvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2tpcCkpIHtcbiAgICAgICAgICAgIGludm9rZSgncGx1Z2luOndpbmRvd3xjcmVhdGUnLCB7XG4gICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICBwYXJlbnQ6IHR5cGVvZiBvcHRpb25zLnBhcmVudCA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgICAgICAgICAgICAgID8gb3B0aW9ucy5wYXJlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKF9hID0gb3B0aW9ucy5wYXJlbnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKGFzeW5jICgpID0+IHRoaXMuZW1pdCgndGF1cmk6Ly9jcmVhdGVkJykpXG4gICAgICAgICAgICAgICAgLmNhdGNoKGFzeW5jIChlKSA9PiB0aGlzLmVtaXQoJ3RhdXJpOi8vZXJyb3InLCBlKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgV2luZG93IGFzc29jaWF0ZWQgd2l0aCB0aGUgZ2l2ZW4gbGFiZWwuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgV2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgbWFpbldpbmRvdyA9IFdpbmRvdy5nZXRCeUxhYmVsKCdtYWluJyk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbGFiZWwgVGhlIHdpbmRvdyBsYWJlbC5cbiAgICAgKiBAcmV0dXJucyBUaGUgV2luZG93IGluc3RhbmNlIHRvIGNvbW11bmljYXRlIHdpdGggdGhlIHdpbmRvdyBvciBudWxsIGlmIHRoZSB3aW5kb3cgZG9lc24ndCBleGlzdC5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZ2V0QnlMYWJlbChsYWJlbCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSAoYXdhaXQgZ2V0QWxsV2luZG93cygpKS5maW5kKCh3KSA9PiB3LmxhYmVsID09PSBsYWJlbCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbiBpbnN0YW5jZSBvZiBgV2luZG93YCBmb3IgdGhlIGN1cnJlbnQgd2luZG93LlxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRDdXJyZW50KCkge1xuICAgICAgICByZXR1cm4gZ2V0Q3VycmVudFdpbmRvdygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEgbGlzdCBvZiBpbnN0YW5jZXMgb2YgYFdpbmRvd2AgZm9yIGFsbCBhdmFpbGFibGUgd2luZG93cy5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZ2V0QWxsKCkge1xuICAgICAgICByZXR1cm4gZ2V0QWxsV2luZG93cygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgR2V0cyB0aGUgZm9jdXNlZCB3aW5kb3cuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgV2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgZm9jdXNlZFdpbmRvdyA9IFdpbmRvdy5nZXRGb2N1c2VkV2luZG93KCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgV2luZG93IGluc3RhbmNlIG9yIGB1bmRlZmluZWRgIGlmIHRoZXJlIGlzIG5vdCBhbnkgZm9jdXNlZCB3aW5kb3cuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGdldEZvY3VzZWRXaW5kb3coKSB7XG4gICAgICAgIGZvciAoY29uc3QgdyBvZiBhd2FpdCBnZXRBbGxXaW5kb3dzKCkpIHtcbiAgICAgICAgICAgIGlmIChhd2FpdCB3LmlzRm9jdXNlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byBhbiBlbWl0dGVkIGV2ZW50IG9uIHRoaXMgd2luZG93LlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGNvbnN0IHVubGlzdGVuID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmxpc3RlbjxzdHJpbmc+KCdzdGF0ZS1jaGFuZ2VkJywgKGV2ZW50KSA9PiB7XG4gICAgICogICBjb25zb2xlLmxvZyhgR290IGVycm9yOiAke3BheWxvYWR9YCk7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyB5b3UgbmVlZCB0byBjYWxsIHVubGlzdGVuIGlmIHlvdXIgaGFuZGxlciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkXG4gICAgICogdW5saXN0ZW4oKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBldmVudCBFdmVudCBuYW1lLiBNdXN0IGluY2x1ZGUgb25seSBhbHBoYW51bWVyaWMgY2hhcmFjdGVycywgYC1gLCBgL2AsIGA6YCBhbmQgYF9gLlxuICAgICAqIEBwYXJhbSBoYW5kbGVyIEV2ZW50IGhhbmRsZXIuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHJlc29sdmluZyB0byBhIGZ1bmN0aW9uIHRvIHVubGlzdGVuIHRvIHRoZSBldmVudC5cbiAgICAgKiBOb3RlIHRoYXQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGlmIHlvdXIgbGlzdGVuZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZC5cbiAgICAgKi9cbiAgICBhc3luYyBsaXN0ZW4oZXZlbnQsIGhhbmRsZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuX2hhbmRsZVRhdXJpRXZlbnQoZXZlbnQsIGhhbmRsZXIpKSB7XG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzZWN1cml0eS9kZXRlY3Qtb2JqZWN0LWluamVjdGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IGxpc3RlbmVycyA9IHRoaXMubGlzdGVuZXJzW2V2ZW50XTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lcnMuc3BsaWNlKGxpc3RlbmVycy5pbmRleE9mKGhhbmRsZXIpLCAxKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3RlbihldmVudCwgaGFuZGxlciwge1xuICAgICAgICAgICAgdGFyZ2V0OiB7IGtpbmQ6ICdXaW5kb3cnLCBsYWJlbDogdGhpcy5sYWJlbCB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0ZW4gdG8gYW4gZW1pdHRlZCBldmVudCBvbiB0aGlzIHdpbmRvdyBvbmx5IG9uY2UuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgdW5saXN0ZW4gPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkub25jZTxudWxsPignaW5pdGlhbGl6ZWQnLCAoZXZlbnQpID0+IHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKGBXaW5kb3cgaW5pdGlhbGl6ZWQhYCk7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyB5b3UgbmVlZCB0byBjYWxsIHVubGlzdGVuIGlmIHlvdXIgaGFuZGxlciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkXG4gICAgICogdW5saXN0ZW4oKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBldmVudCBFdmVudCBuYW1lLiBNdXN0IGluY2x1ZGUgb25seSBhbHBoYW51bWVyaWMgY2hhcmFjdGVycywgYC1gLCBgL2AsIGA6YCBhbmQgYF9gLlxuICAgICAqIEBwYXJhbSBoYW5kbGVyIEV2ZW50IGhhbmRsZXIuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHJlc29sdmluZyB0byBhIGZ1bmN0aW9uIHRvIHVubGlzdGVuIHRvIHRoZSBldmVudC5cbiAgICAgKiBOb3RlIHRoYXQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGlmIHlvdXIgbGlzdGVuZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZC5cbiAgICAgKi9cbiAgICBhc3luYyBvbmNlKGV2ZW50LCBoYW5kbGVyKSB7XG4gICAgICAgIGlmICh0aGlzLl9oYW5kbGVUYXVyaUV2ZW50KGV2ZW50LCBoYW5kbGVyKSkge1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2VjdXJpdHkvZGV0ZWN0LW9iamVjdC1pbmplY3Rpb25cbiAgICAgICAgICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVyc1tldmVudF07XG4gICAgICAgICAgICAgICAgbGlzdGVuZXJzLnNwbGljZShsaXN0ZW5lcnMuaW5kZXhPZihoYW5kbGVyKSwgMSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvbmNlKGV2ZW50LCBoYW5kbGVyLCB7XG4gICAgICAgICAgICB0YXJnZXQ6IHsga2luZDogJ1dpbmRvdycsIGxhYmVsOiB0aGlzLmxhYmVsIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGV2ZW50IHRvIGFsbCB7QGxpbmsgRXZlbnRUYXJnZXR8dGFyZ2V0c30uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5lbWl0KCd3aW5kb3ctbG9hZGVkJywgeyBsb2dnZWRJbjogdHJ1ZSwgdG9rZW46ICdhdXRoVG9rZW4nIH0pO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGV2ZW50IEV2ZW50IG5hbWUuIE11c3QgaW5jbHVkZSBvbmx5IGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzLCBgLWAsIGAvYCwgYDpgIGFuZCBgX2AuXG4gICAgICogQHBhcmFtIHBheWxvYWQgRXZlbnQgcGF5bG9hZC5cbiAgICAgKi9cbiAgICBhc3luYyBlbWl0KGV2ZW50LCBwYXlsb2FkKSB7XG4gICAgICAgIGlmIChsb2NhbFRhdXJpRXZlbnRzLmluY2x1ZGVzKGV2ZW50KSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhhbmRsZXIgb2YgdGhpcy5saXN0ZW5lcnNbZXZlbnRdIHx8IFtdKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlcih7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICBpZDogLTEsXG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW1pdChldmVudCwgcGF5bG9hZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGV2ZW50IHRvIGFsbCB7QGxpbmsgRXZlbnRUYXJnZXR8dGFyZ2V0c30gbWF0Y2hpbmcgdGhlIGdpdmVuIHRhcmdldC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuZW1pdCgnbWFpbicsICd3aW5kb3ctbG9hZGVkJywgeyBsb2dnZWRJbjogdHJ1ZSwgdG9rZW46ICdhdXRoVG9rZW4nIH0pO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSB0YXJnZXQgTGFiZWwgb2YgdGhlIHRhcmdldCBXaW5kb3cvV2Vidmlldy9XZWJ2aWV3V2luZG93IG9yIHJhdyB7QGxpbmsgRXZlbnRUYXJnZXR9IG9iamVjdC5cbiAgICAgKiBAcGFyYW0gZXZlbnQgRXZlbnQgbmFtZS4gTXVzdCBpbmNsdWRlIG9ubHkgYWxwaGFudW1lcmljIGNoYXJhY3RlcnMsIGAtYCwgYC9gLCBgOmAgYW5kIGBfYC5cbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBFdmVudCBwYXlsb2FkLlxuICAgICAqL1xuICAgIGFzeW5jIGVtaXRUbyh0YXJnZXQsIGV2ZW50LCBwYXlsb2FkKSB7XG4gICAgICAgIGlmIChsb2NhbFRhdXJpRXZlbnRzLmluY2x1ZGVzKGV2ZW50KSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhhbmRsZXIgb2YgdGhpcy5saXN0ZW5lcnNbZXZlbnRdIHx8IFtdKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlcih7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICBpZDogLTEsXG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW1pdFRvKHRhcmdldCwgZXZlbnQsIHBheWxvYWQpO1xuICAgIH1cbiAgICAvKiogQGlnbm9yZSAqL1xuICAgIF9oYW5kbGVUYXVyaUV2ZW50KGV2ZW50LCBoYW5kbGVyKSB7XG4gICAgICAgIGlmIChsb2NhbFRhdXJpRXZlbnRzLmluY2x1ZGVzKGV2ZW50KSkge1xuICAgICAgICAgICAgaWYgKCEoZXZlbnQgaW4gdGhpcy5saXN0ZW5lcnMpKSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdID0gW2hhbmRsZXJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdLnB1c2goaGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIEdldHRlcnNcbiAgICAvKipcbiAgICAgKiBUaGUgc2NhbGUgZmFjdG9yIHRoYXQgY2FuIGJlIHVzZWQgdG8gbWFwIHBoeXNpY2FsIHBpeGVscyB0byBsb2dpY2FsIHBpeGVscy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgZmFjdG9yID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNjYWxlRmFjdG9yKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgd2luZG93J3MgbW9uaXRvciBzY2FsZSBmYWN0b3IuXG4gICAgICovXG4gICAgYXN5bmMgc2NhbGVGYWN0b3IoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2NhbGVfZmFjdG9yJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgdG9wLWxlZnQgaGFuZCBjb3JuZXIgb2YgdGhlIHdpbmRvdydzIGNsaWVudCBhcmVhIHJlbGF0aXZlIHRvIHRoZSB0b3AtbGVmdCBoYW5kIGNvcm5lciBvZiB0aGUgZGVza3RvcC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgcG9zaXRpb24gPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaW5uZXJQb3NpdGlvbigpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHdpbmRvdydzIGlubmVyIHBvc2l0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIGlubmVyUG9zaXRpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8aW5uZXJfcG9zaXRpb24nLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KS50aGVuKChwKSA9PiBuZXcgUGh5c2ljYWxQb3NpdGlvbihwKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgdG9wLWxlZnQgaGFuZCBjb3JuZXIgb2YgdGhlIHdpbmRvdyByZWxhdGl2ZSB0byB0aGUgdG9wLWxlZnQgaGFuZCBjb3JuZXIgb2YgdGhlIGRlc2t0b3AuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGNvbnN0IHBvc2l0aW9uID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm91dGVyUG9zaXRpb24oKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSB3aW5kb3cncyBvdXRlciBwb3NpdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBvdXRlclBvc2l0aW9uKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fG91dGVyX3Bvc2l0aW9uJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSkudGhlbigocCkgPT4gbmV3IFBoeXNpY2FsUG9zaXRpb24ocCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgcGh5c2ljYWwgc2l6ZSBvZiB0aGUgd2luZG93J3MgY2xpZW50IGFyZWEuXG4gICAgICogVGhlIGNsaWVudCBhcmVhIGlzIHRoZSBjb250ZW50IG9mIHRoZSB3aW5kb3csIGV4Y2x1ZGluZyB0aGUgdGl0bGUgYmFyIGFuZCBib3JkZXJzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCBzaXplID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmlubmVyU2l6ZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHdpbmRvdydzIGlubmVyIHNpemUuXG4gICAgICovXG4gICAgYXN5bmMgaW5uZXJTaXplKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGlubmVyX3NpemUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KS50aGVuKChzKSA9PiBuZXcgUGh5c2ljYWxTaXplKHMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHBoeXNpY2FsIHNpemUgb2YgdGhlIGVudGlyZSB3aW5kb3cuXG4gICAgICogVGhlc2UgZGltZW5zaW9ucyBpbmNsdWRlIHRoZSB0aXRsZSBiYXIgYW5kIGJvcmRlcnMuIElmIHlvdSBkb24ndCB3YW50IHRoYXQgKGFuZCB5b3UgdXN1YWxseSBkb24ndCksIHVzZSBpbm5lcl9zaXplIGluc3RlYWQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGNvbnN0IHNpemUgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkub3V0ZXJTaXplKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgd2luZG93J3Mgb3V0ZXIgc2l6ZS5cbiAgICAgKi9cbiAgICBhc3luYyBvdXRlclNpemUoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8b3V0ZXJfc2l6ZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pLnRoZW4oKHMpID0+IG5ldyBQaHlzaWNhbFNpemUocykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBjdXJyZW50IGZ1bGxzY3JlZW4gc3RhdGUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGNvbnN0IGZ1bGxzY3JlZW4gPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNGdWxsc2NyZWVuKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB3aW5kb3cgaXMgaW4gZnVsbHNjcmVlbiBtb2RlIG9yIG5vdC5cbiAgICAgKi9cbiAgICBhc3luYyBpc0Z1bGxzY3JlZW4oKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8aXNfZnVsbHNjcmVlbicsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBjdXJyZW50IG1pbmltaXplZCBzdGF0ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgbWluaW1pemVkID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmlzTWluaW1pemVkKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYXN5bmMgaXNNaW5pbWl6ZWQoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8aXNfbWluaW1pemVkJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHdpbmRvdydzIGN1cnJlbnQgbWF4aW1pemVkIHN0YXRlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCBtYXhpbWl6ZWQgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNNYXhpbWl6ZWQoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIHdpbmRvdyBpcyBtYXhpbWl6ZWQgb3Igbm90LlxuICAgICAqL1xuICAgIGFzeW5jIGlzTWF4aW1pemVkKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGlzX21heGltaXplZCcsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBjdXJyZW50IGZvY3VzIHN0YXRlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCBmb2N1c2VkID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmlzRm9jdXNlZCgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgd2luZG93IGlzIGZvY3VzZWQgb3Igbm90LlxuICAgICAqL1xuICAgIGFzeW5jIGlzRm9jdXNlZCgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xpc19mb2N1c2VkJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHdpbmRvdydzIGN1cnJlbnQgZGVjb3JhdGVkIHN0YXRlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCBkZWNvcmF0ZWQgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNEZWNvcmF0ZWQoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIHdpbmRvdyBpcyBkZWNvcmF0ZWQgb3Igbm90LlxuICAgICAqL1xuICAgIGFzeW5jIGlzRGVjb3JhdGVkKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGlzX2RlY29yYXRlZCcsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBjdXJyZW50IHJlc2l6YWJsZSBzdGF0ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgcmVzaXphYmxlID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmlzUmVzaXphYmxlKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB3aW5kb3cgaXMgcmVzaXphYmxlIG9yIG5vdC5cbiAgICAgKi9cbiAgICBhc3luYyBpc1Jlc2l6YWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xpc19yZXNpemFibGUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgd2luZG93J3MgbmF0aXZlIG1heGltaXplIGJ1dHRvbiBzdGF0ZS5cbiAgICAgKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKlxuICAgICAqIC0gKipMaW51eCAvIGlPUyAvIEFuZHJvaWQ6KiogVW5zdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgbWF4aW1pemFibGUgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNNYXhpbWl6YWJsZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgd2luZG93J3MgbmF0aXZlIG1heGltaXplIGJ1dHRvbiBpcyBlbmFibGVkIG9yIG5vdC5cbiAgICAgKi9cbiAgICBhc3luYyBpc01heGltaXphYmxlKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGlzX21heGltaXphYmxlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHdpbmRvdydzIG5hdGl2ZSBtaW5pbWl6ZSBidXR0b24gc3RhdGUuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqTGludXggLyBpT1MgLyBBbmRyb2lkOioqIFVuc3VwcG9ydGVkLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGNvbnN0IG1pbmltaXphYmxlID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLmlzTWluaW1pemFibGUoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIHdpbmRvdydzIG5hdGl2ZSBtaW5pbWl6ZSBidXR0b24gaXMgZW5hYmxlZCBvciBub3QuXG4gICAgICovXG4gICAgYXN5bmMgaXNNaW5pbWl6YWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xpc19taW5pbWl6YWJsZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBuYXRpdmUgY2xvc2UgYnV0dG9uIHN0YXRlLlxuICAgICAqXG4gICAgICogIyMjIyBQbGF0Zm9ybS1zcGVjaWZpY1xuICAgICAqXG4gICAgICogLSAqKmlPUyAvIEFuZHJvaWQ6KiogVW5zdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgY2xvc2FibGUgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNDbG9zYWJsZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgd2luZG93J3MgbmF0aXZlIGNsb3NlIGJ1dHRvbiBpcyBlbmFibGVkIG9yIG5vdC5cbiAgICAgKi9cbiAgICBhc3luYyBpc0Nsb3NhYmxlKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGlzX2Nsb3NhYmxlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHdpbmRvdydzIGN1cnJlbnQgdmlzaWJsZSBzdGF0ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgdmlzaWJsZSA9IGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5pc1Zpc2libGUoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFdoZXRoZXIgdGhlIHdpbmRvdyBpcyB2aXNpYmxlIG9yIG5vdC5cbiAgICAgKi9cbiAgICBhc3luYyBpc1Zpc2libGUoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8aXNfdmlzaWJsZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB3aW5kb3cncyBjdXJyZW50IHRpdGxlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBjb25zdCB0aXRsZSA9IGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS50aXRsZSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGFzeW5jIHRpdGxlKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHRpdGxlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHdpbmRvdydzIGN1cnJlbnQgdGhlbWUuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqbWFjT1M6KiogVGhlbWUgd2FzIGludHJvZHVjZWQgb24gbWFjT1MgMTAuMTQuIFJldHVybnMgYGxpZ2h0YCBvbiBtYWNPUyAxMC4xMyBhbmQgYmVsb3cuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgdGhlbWUgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkudGhlbWUoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSB3aW5kb3cgdGhlbWUuXG4gICAgICovXG4gICAgYXN5bmMgdGhlbWUoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8dGhlbWUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGUgd2luZG93IGlzIGNvbmZpZ3VyZWQgdG8gYmUgYWx3YXlzIG9uIHRvcCBvZiBvdGhlciB3aW5kb3dzIG9yIG5vdC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogY29uc3QgYWx3YXlzT25Ub3AgPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuaXNBbHdheXNPblRvcCgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgV2hldGhlciB0aGUgd2luZG93IGlzIHZpc2libGUgb3Igbm90LlxuICAgICAqL1xuICAgIGFzeW5jIGlzQWx3YXlzT25Ub3AoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8aXNfYWx3YXlzX29uX3RvcCcsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBTZXR0ZXJzXG4gICAgLyoqXG4gICAgICogQ2VudGVycyB0aGUgd2luZG93LlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuY2VudGVyKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgY2VudGVyKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGNlbnRlcicsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgUmVxdWVzdHMgdXNlciBhdHRlbnRpb24gdG8gdGhlIHdpbmRvdywgdGhpcyBoYXMgbm8gZWZmZWN0IGlmIHRoZSBhcHBsaWNhdGlvblxuICAgICAqIGlzIGFscmVhZHkgZm9jdXNlZC4gSG93IHJlcXVlc3RpbmcgZm9yIHVzZXIgYXR0ZW50aW9uIG1hbmlmZXN0cyBpcyBwbGF0Zm9ybSBkZXBlbmRlbnQsXG4gICAgICogc2VlIGBVc2VyQXR0ZW50aW9uVHlwZWAgZm9yIGRldGFpbHMuXG4gICAgICpcbiAgICAgKiBQcm92aWRpbmcgYG51bGxgIHdpbGwgdW5zZXQgdGhlIHJlcXVlc3QgZm9yIHVzZXIgYXR0ZW50aW9uLiBVbnNldHRpbmcgdGhlIHJlcXVlc3QgZm9yXG4gICAgICogdXNlciBhdHRlbnRpb24gbWlnaHQgbm90IGJlIGRvbmUgYXV0b21hdGljYWxseSBieSB0aGUgV00gd2hlbiB0aGUgd2luZG93IHJlY2VpdmVzIGlucHV0LlxuICAgICAqXG4gICAgICogIyMjIyBQbGF0Zm9ybS1zcGVjaWZpY1xuICAgICAqXG4gICAgICogLSAqKm1hY09TOioqIGBudWxsYCBoYXMgbm8gZWZmZWN0LlxuICAgICAqIC0gKipMaW51eDoqKiBVcmdlbmN5IGxldmVscyBoYXZlIHRoZSBzYW1lIGVmZmVjdC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnJlcXVlc3RVc2VyQXR0ZW50aW9uKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgcmVxdWVzdFVzZXJBdHRlbnRpb24ocmVxdWVzdFR5cGUpIHtcbiAgICAgICAgbGV0IHJlcXVlc3RUeXBlXyA9IG51bGw7XG4gICAgICAgIGlmIChyZXF1ZXN0VHlwZSkge1xuICAgICAgICAgICAgaWYgKHJlcXVlc3RUeXBlID09PSBVc2VyQXR0ZW50aW9uVHlwZS5Dcml0aWNhbCkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3RUeXBlXyA9IHsgdHlwZTogJ0NyaXRpY2FsJyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdFR5cGVfID0geyB0eXBlOiAnSW5mb3JtYXRpb25hbCcgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHJlcXVlc3RfdXNlcl9hdHRlbnRpb24nLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiByZXF1ZXN0VHlwZV9cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIHdpbmRvdyByZXNpemFibGUgZmxhZy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldFJlc2l6YWJsZShmYWxzZSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0UmVzaXphYmxlKHJlc2l6YWJsZSkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9yZXNpemFibGUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiByZXNpemFibGVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuYWJsZSBvciBkaXNhYmxlIHRoZSB3aW5kb3cuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRFbmFibGVkKGZhbHNlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKlxuICAgICAqIEBzaW5jZSAyLjAuMFxuICAgICAqL1xuICAgIGFzeW5jIHNldEVuYWJsZWQoZW5hYmxlZCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9lbmFibGVkJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogZW5hYmxlZFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGUgd2luZG93IGlzIGVuYWJsZWQgb3IgZGlzYWJsZWQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRFbmFibGVkKGZhbHNlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKlxuICAgICAqIEBzaW5jZSAyLjAuMFxuICAgICAqL1xuICAgIGFzeW5jIGlzRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xpc19lbmFibGVkJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgd2hldGhlciB0aGUgd2luZG93J3MgbmF0aXZlIG1heGltaXplIGJ1dHRvbiBpcyBlbmFibGVkIG9yIG5vdC5cbiAgICAgKiBJZiByZXNpemFibGUgaXMgc2V0IHRvIGZhbHNlLCB0aGlzIHNldHRpbmcgaXMgaWdub3JlZC5cbiAgICAgKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKlxuICAgICAqIC0gKiptYWNPUzoqKiBEaXNhYmxlcyB0aGUgXCJ6b29tXCIgYnV0dG9uIGluIHRoZSB3aW5kb3cgdGl0bGViYXIsIHdoaWNoIGlzIGFsc28gdXNlZCB0byBlbnRlciBmdWxsc2NyZWVuIG1vZGUuXG4gICAgICogLSAqKkxpbnV4IC8gaU9TIC8gQW5kcm9pZDoqKiBVbnN1cHBvcnRlZC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0TWF4aW1pemFibGUoZmFsc2UpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldE1heGltaXphYmxlKG1heGltaXphYmxlKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X21heGltaXphYmxlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogbWF4aW1pemFibGVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgd2hldGhlciB0aGUgd2luZG93J3MgbmF0aXZlIG1pbmltaXplIGJ1dHRvbiBpcyBlbmFibGVkIG9yIG5vdC5cbiAgICAgKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKlxuICAgICAqIC0gKipMaW51eCAvIGlPUyAvIEFuZHJvaWQ6KiogVW5zdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldE1pbmltaXphYmxlKGZhbHNlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRNaW5pbWl6YWJsZShtaW5pbWl6YWJsZSkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9taW5pbWl6YWJsZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IG1pbmltaXphYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHdoZXRoZXIgdGhlIHdpbmRvdydzIG5hdGl2ZSBjbG9zZSBidXR0b24gaXMgZW5hYmxlZCBvciBub3QuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqTGludXg6KiogR1RLKyB3aWxsIGRvIGl0cyBiZXN0IHRvIGNvbnZpbmNlIHRoZSB3aW5kb3cgbWFuYWdlciBub3QgdG8gc2hvdyBhIGNsb3NlIGJ1dHRvbi4gRGVwZW5kaW5nIG9uIHRoZSBzeXN0ZW0sIHRoaXMgZnVuY3Rpb24gbWF5IG5vdCBoYXZlIGFueSBlZmZlY3Qgd2hlbiBjYWxsZWQgb24gYSB3aW5kb3cgdGhhdCBpcyBhbHJlYWR5IHZpc2libGVcbiAgICAgKiAtICoqaU9TIC8gQW5kcm9pZDoqKiBVbnN1cHBvcnRlZC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0Q2xvc2FibGUoZmFsc2UpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldENsb3NhYmxlKGNsb3NhYmxlKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X2Nsb3NhYmxlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogY2xvc2FibGVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHdpbmRvdyB0aXRsZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldFRpdGxlKCdUYXVyaScpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIHRpdGxlIFRoZSBuZXcgdGl0bGVcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0VGl0bGUodGl0bGUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfdGl0bGUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiB0aXRsZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWF4aW1pemVzIHRoZSB3aW5kb3cuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5tYXhpbWl6ZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIG1heGltaXplKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fG1heGltaXplJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVubWF4aW1pemVzIHRoZSB3aW5kb3cuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS51bm1heGltaXplKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgdW5tYXhpbWl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3x1bm1heGltaXplJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRvZ2dsZXMgdGhlIHdpbmRvdyBtYXhpbWl6ZWQgc3RhdGUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS50b2dnbGVNYXhpbWl6ZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHRvZ2dsZU1heGltaXplKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHRvZ2dsZV9tYXhpbWl6ZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNaW5pbWl6ZXMgdGhlIHdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm1pbmltaXplKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgbWluaW1pemUoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8bWluaW1pemUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVW5taW5pbWl6ZXMgdGhlIHdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnVubWluaW1pemUoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyB1bm1pbmltaXplKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHVubWluaW1pemUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgd2luZG93IHZpc2liaWxpdHkgdG8gdHJ1ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNob3coKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzaG93KCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNob3cnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgd2luZG93IHZpc2liaWxpdHkgdG8gZmFsc2UuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5oaWRlKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgaGlkZSgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xoaWRlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENsb3NlcyB0aGUgd2luZG93LlxuICAgICAqXG4gICAgICogTm90ZSB0aGlzIGVtaXRzIGEgY2xvc2VSZXF1ZXN0ZWQgZXZlbnQgc28geW91IGNhbiBpbnRlcmNlcHQgaXQuIFRvIGZvcmNlIHdpbmRvdyBjbG9zZSwgdXNlIHtAbGluayBXaW5kb3cuZGVzdHJveX0uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5jbG9zZSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIGNsb3NlKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fGNsb3NlJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlc3Ryb3lzIHRoZSB3aW5kb3cuIEJlaGF2ZXMgbGlrZSB7QGxpbmsgV2luZG93LmNsb3NlfSBidXQgZm9yY2VzIHRoZSB3aW5kb3cgY2xvc2UgaW5zdGVhZCBvZiBlbWl0dGluZyBhIGNsb3NlUmVxdWVzdGVkIGV2ZW50LlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuZGVzdHJveSgpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIGRlc3Ryb3koKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8ZGVzdHJveScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSB3aW5kb3cgc2hvdWxkIGhhdmUgYm9yZGVycyBhbmQgYmFycy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldERlY29yYXRpb25zKGZhbHNlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBkZWNvcmF0aW9ucyBXaGV0aGVyIHRoZSB3aW5kb3cgc2hvdWxkIGhhdmUgYm9yZGVycyBhbmQgYmFycy5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0RGVjb3JhdGlvbnMoZGVjb3JhdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfZGVjb3JhdGlvbnMnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBkZWNvcmF0aW9uc1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2hldGhlciBvciBub3QgdGhlIHdpbmRvdyBzaG91bGQgaGF2ZSBzaGFkb3cuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqV2luZG93czoqKlxuICAgICAqICAgLSBgZmFsc2VgIGhhcyBubyBlZmZlY3Qgb24gZGVjb3JhdGVkIHdpbmRvdywgc2hhZG93cyBhcmUgYWx3YXlzIE9OLlxuICAgICAqICAgLSBgdHJ1ZWAgd2lsbCBtYWtlIHVuZGVjb3JhdGVkIHdpbmRvdyBoYXZlIGEgMXB4IHdoaXRlIGJvcmRlcixcbiAgICAgKiBhbmQgb24gV2luZG93cyAxMSwgaXQgd2lsbCBoYXZlIGEgcm91bmRlZCBjb3JuZXJzLlxuICAgICAqIC0gKipMaW51eDoqKiBVbnN1cHBvcnRlZC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0U2hhZG93KGZhbHNlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRTaGFkb3coZW5hYmxlKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X3NoYWRvdycsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IGVuYWJsZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHdpbmRvdyBlZmZlY3RzLlxuICAgICAqL1xuICAgIGFzeW5jIHNldEVmZmVjdHMoZWZmZWN0cykge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9lZmZlY3RzJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogZWZmZWN0c1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xlYXIgYW55IGFwcGxpZWQgZWZmZWN0cyBpZiBwb3NzaWJsZS5cbiAgICAgKi9cbiAgICBhc3luYyBjbGVhckVmZmVjdHMoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X2VmZmVjdHMnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBudWxsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSB3aW5kb3cgc2hvdWxkIGFsd2F5cyBiZSBvbiB0b3Agb2Ygb3RoZXIgd2luZG93cy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEFsd2F5c09uVG9wKHRydWUpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGFsd2F5c09uVG9wIFdoZXRoZXIgdGhlIHdpbmRvdyBzaG91bGQgYWx3YXlzIGJlIG9uIHRvcCBvZiBvdGhlciB3aW5kb3dzIG9yIG5vdC5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0QWx3YXlzT25Ub3AoYWx3YXlzT25Ub3ApIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfYWx3YXlzX29uX3RvcCcsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IGFsd2F5c09uVG9wXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSB3aW5kb3cgc2hvdWxkIGFsd2F5cyBiZSBiZWxvdyBvdGhlciB3aW5kb3dzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0QWx3YXlzT25Cb3R0b20odHJ1ZSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYWx3YXlzT25Cb3R0b20gV2hldGhlciB0aGUgd2luZG93IHNob3VsZCBhbHdheXMgYmUgYmVsb3cgb3RoZXIgd2luZG93cyBvciBub3QuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldEFsd2F5c09uQm90dG9tKGFsd2F5c09uQm90dG9tKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X2Fsd2F5c19vbl9ib3R0b20nLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBhbHdheXNPbkJvdHRvbVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUHJldmVudHMgdGhlIHdpbmRvdyBjb250ZW50cyBmcm9tIGJlaW5nIGNhcHR1cmVkIGJ5IG90aGVyIGFwcHMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRDb250ZW50UHJvdGVjdGVkKHRydWUpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldENvbnRlbnRQcm90ZWN0ZWQocHJvdGVjdGVkXykge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9jb250ZW50X3Byb3RlY3RlZCcsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IHByb3RlY3RlZF9cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc2l6ZXMgdGhlIHdpbmRvdyB3aXRoIGEgbmV3IGlubmVyIHNpemUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdywgTG9naWNhbFNpemUgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0U2l6ZShuZXcgTG9naWNhbFNpemUoNjAwLCA1MDApKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaXplIFRoZSBsb2dpY2FsIG9yIHBoeXNpY2FsIGlubmVyIHNpemUuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldFNpemUoc2l6ZSkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9zaXplJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogc2l6ZSBpbnN0YW5jZW9mIFNpemUgPyBzaXplIDogbmV3IFNpemUoc2l6ZSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHdpbmRvdyBtaW5pbXVtIGlubmVyIHNpemUuIElmIHRoZSBgc2l6ZWAgYXJndW1lbnQgaXMgbm90IHByb3ZpZGVkLCB0aGUgY29uc3RyYWludCBpcyB1bnNldC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93LCBQaHlzaWNhbFNpemUgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0TWluU2l6ZShuZXcgUGh5c2ljYWxTaXplKDYwMCwgNTAwKSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2l6ZSBUaGUgbG9naWNhbCBvciBwaHlzaWNhbCBpbm5lciBzaXplLCBvciBgbnVsbGAgdG8gdW5zZXQgdGhlIGNvbnN0cmFpbnQuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldE1pblNpemUoc2l6ZSkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9taW5fc2l6ZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IHNpemUgaW5zdGFuY2VvZiBTaXplID8gc2l6ZSA6IHNpemUgPyBuZXcgU2l6ZShzaXplKSA6IG51bGxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHdpbmRvdyBtYXhpbXVtIGlubmVyIHNpemUuIElmIHRoZSBgc2l6ZWAgYXJndW1lbnQgaXMgdW5kZWZpbmVkLCB0aGUgY29uc3RyYWludCBpcyB1bnNldC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93LCBMb2dpY2FsU2l6ZSB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRNYXhTaXplKG5ldyBMb2dpY2FsU2l6ZSg2MDAsIDUwMCkpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIHNpemUgVGhlIGxvZ2ljYWwgb3IgcGh5c2ljYWwgaW5uZXIgc2l6ZSwgb3IgYG51bGxgIHRvIHVuc2V0IHRoZSBjb25zdHJhaW50LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRNYXhTaXplKHNpemUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfbWF4X3NpemUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBzaXplIGluc3RhbmNlb2YgU2l6ZSA/IHNpemUgOiBzaXplID8gbmV3IFNpemUoc2l6ZSkgOiBudWxsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB3aW5kb3cgaW5uZXIgc2l6ZSBjb25zdHJhaW50cy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldFNpemVDb25zdHJhaW50cyh7IG1pbldpZHRoOiAzMDAgfSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29uc3RyYWludHMgVGhlIGxvZ2ljYWwgb3IgcGh5c2ljYWwgaW5uZXIgc2l6ZSwgb3IgYG51bGxgIHRvIHVuc2V0IHRoZSBjb25zdHJhaW50LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRTaXplQ29uc3RyYWludHMoY29uc3RyYWludHMpIHtcbiAgICAgICAgZnVuY3Rpb24gbG9naWNhbChwaXhlbCkge1xuICAgICAgICAgICAgcmV0dXJuIHBpeGVsID8geyBMb2dpY2FsOiBwaXhlbCB9IDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9zaXplX2NvbnN0cmFpbnRzJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgIG1pbldpZHRoOiBsb2dpY2FsKGNvbnN0cmFpbnRzID09PSBudWxsIHx8IGNvbnN0cmFpbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25zdHJhaW50cy5taW5XaWR0aCksXG4gICAgICAgICAgICAgICAgbWluSGVpZ2h0OiBsb2dpY2FsKGNvbnN0cmFpbnRzID09PSBudWxsIHx8IGNvbnN0cmFpbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25zdHJhaW50cy5taW5IZWlnaHQpLFxuICAgICAgICAgICAgICAgIG1heFdpZHRoOiBsb2dpY2FsKGNvbnN0cmFpbnRzID09PSBudWxsIHx8IGNvbnN0cmFpbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25zdHJhaW50cy5tYXhXaWR0aCksXG4gICAgICAgICAgICAgICAgbWF4SGVpZ2h0OiBsb2dpY2FsKGNvbnN0cmFpbnRzID09PSBudWxsIHx8IGNvbnN0cmFpbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25zdHJhaW50cy5tYXhIZWlnaHQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB3aW5kb3cgb3V0ZXIgcG9zaXRpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdywgTG9naWNhbFBvc2l0aW9uIH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldFBvc2l0aW9uKG5ldyBMb2dpY2FsUG9zaXRpb24oNjAwLCA1MDApKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiBUaGUgbmV3IHBvc2l0aW9uLCBpbiBsb2dpY2FsIG9yIHBoeXNpY2FsIHBpeGVscy5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0UG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfcG9zaXRpb24nLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBwb3NpdGlvbiBpbnN0YW5jZW9mIFBvc2l0aW9uID8gcG9zaXRpb24gOiBuZXcgUG9zaXRpb24ocG9zaXRpb24pXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB3aW5kb3cgZnVsbHNjcmVlbiBzdGF0ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEZ1bGxzY3JlZW4odHJ1ZSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZnVsbHNjcmVlbiBXaGV0aGVyIHRoZSB3aW5kb3cgc2hvdWxkIGdvIHRvIGZ1bGxzY3JlZW4gb3Igbm90LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRGdWxsc2NyZWVuKGZ1bGxzY3JlZW4pIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfZnVsbHNjcmVlbicsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IGZ1bGxzY3JlZW5cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJyaW5nIHRoZSB3aW5kb3cgdG8gZnJvbnQgYW5kIGZvY3VzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0Rm9jdXMoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRGb2N1cygpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfZm9jdXMnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgd2luZG93IGljb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRJY29uKCcvdGF1cmkvYXdlc29tZS5wbmcnKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB5b3UgbWF5IG5lZWQgdGhlIGBpbWFnZS1pY29gIG9yIGBpbWFnZS1wbmdgIENhcmdvIGZlYXR1cmVzIHRvIHVzZSB0aGlzIEFQSS5cbiAgICAgKiBUbyBlbmFibGUgaXQsIGNoYW5nZSB5b3VyIENhcmdvLnRvbWwgZmlsZTpcbiAgICAgKiBgYGB0b21sXG4gICAgICogW2RlcGVuZGVuY2llc11cbiAgICAgKiB0YXVyaSA9IHsgdmVyc2lvbiA9IFwiLi4uXCIsIGZlYXR1cmVzID0gW1wiLi4uXCIsIFwiaW1hZ2UtcG5nXCJdIH1cbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpY29uIEljb24gYnl0ZXMgb3IgcGF0aCB0byB0aGUgaWNvbiBmaWxlLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRJY29uKGljb24pIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfaWNvbicsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IHRyYW5zZm9ybUltYWdlKGljb24pXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSB3aW5kb3cgaWNvbiBzaG91bGQgYmUgaGlkZGVuIGZyb20gdGhlIHRhc2tiYXIgb3Igbm90LlxuICAgICAqXG4gICAgICogIyMjIyBQbGF0Zm9ybS1zcGVjaWZpY1xuICAgICAqXG4gICAgICogLSAqKm1hY09TOioqIFVuc3VwcG9ydGVkLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0U2tpcFRhc2tiYXIodHJ1ZSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2tpcCB0cnVlIHRvIGhpZGUgd2luZG93IGljb24sIGZhbHNlIHRvIHNob3cgaXQuXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldFNraXBUYXNrYmFyKHNraXApIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfc2tpcF90YXNrYmFyJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogc2tpcFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR3JhYnMgdGhlIGN1cnNvciwgcHJldmVudGluZyBpdCBmcm9tIGxlYXZpbmcgdGhlIHdpbmRvdy5cbiAgICAgKlxuICAgICAqIFRoZXJlJ3Mgbm8gZ3VhcmFudGVlIHRoYXQgdGhlIGN1cnNvciB3aWxsIGJlIGhpZGRlbi4gWW91IHNob3VsZFxuICAgICAqIGhpZGUgaXQgYnkgeW91cnNlbGYgaWYgeW91IHdhbnQgc28uXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqTGludXg6KiogVW5zdXBwb3J0ZWQuXG4gICAgICogLSAqKm1hY09TOioqIFRoaXMgbG9ja3MgdGhlIGN1cnNvciBpbiBhIGZpeGVkIGxvY2F0aW9uLCB3aGljaCBsb29rcyB2aXN1YWxseSBhd2t3YXJkLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0Q3Vyc29yR3JhYih0cnVlKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBncmFiIGB0cnVlYCB0byBncmFiIHRoZSBjdXJzb3IgaWNvbiwgYGZhbHNlYCB0byByZWxlYXNlIGl0LlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRDdXJzb3JHcmFiKGdyYWIpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfY3Vyc29yX2dyYWInLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBncmFiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyB0aGUgY3Vyc29yJ3MgdmlzaWJpbGl0eS5cbiAgICAgKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKlxuICAgICAqIC0gKipXaW5kb3dzOioqIFRoZSBjdXJzb3IgaXMgb25seSBoaWRkZW4gd2l0aGluIHRoZSBjb25maW5lcyBvZiB0aGUgd2luZG93LlxuICAgICAqIC0gKiptYWNPUzoqKiBUaGUgY3Vyc29yIGlzIGhpZGRlbiBhcyBsb25nIGFzIHRoZSB3aW5kb3cgaGFzIGlucHV0IGZvY3VzLCBldmVuIGlmIHRoZSBjdXJzb3IgaXNcbiAgICAgKiAgIG91dHNpZGUgb2YgdGhlIHdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEN1cnNvclZpc2libGUoZmFsc2UpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIHZpc2libGUgSWYgYGZhbHNlYCwgdGhpcyB3aWxsIGhpZGUgdGhlIGN1cnNvci4gSWYgYHRydWVgLCB0aGlzIHdpbGwgc2hvdyB0aGUgY3Vyc29yLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRDdXJzb3JWaXNpYmxlKHZpc2libGUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfY3Vyc29yX3Zpc2libGUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiB2aXNpYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyB0aGUgY3Vyc29yIGljb24gb2YgdGhlIHdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEN1cnNvckljb24oJ2hlbHAnKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpY29uIFRoZSBuZXcgY3Vyc29yIGljb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldEN1cnNvckljb24oaWNvbikge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9jdXJzb3JfaWNvbicsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IGljb25cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHdpbmRvdyBiYWNrZ3JvdW5kIGNvbG9yLlxuICAgICAqXG4gICAgICogIyMjIyBQbGF0Zm9ybS1zcGVjaWZpYzpcbiAgICAgKlxuICAgICAqIC0gKipXaW5kb3dzOioqIGFscGhhIGNoYW5uZWwgaXMgaWdub3JlZC5cbiAgICAgKiAtICoqaU9TIC8gQW5kcm9pZDoqKiBVbnN1cHBvcnRlZC5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKlxuICAgICAqIEBzaW5jZSAyLjEuMFxuICAgICAqL1xuICAgIGFzeW5jIHNldEJhY2tncm91bmRDb2xvcihjb2xvcikge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9iYWNrZ3JvdW5kX2NvbG9yJywgeyBjb2xvciB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlcyB0aGUgcG9zaXRpb24gb2YgdGhlIGN1cnNvciBpbiB3aW5kb3cgY29vcmRpbmF0ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdywgTG9naWNhbFBvc2l0aW9uIH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEN1cnNvclBvc2l0aW9uKG5ldyBMb2dpY2FsUG9zaXRpb24oNjAwLCAzMDApKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiBUaGUgbmV3IGN1cnNvciBwb3NpdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0Q3Vyc29yUG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfY3Vyc29yX3Bvc2l0aW9uJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogcG9zaXRpb24gaW5zdGFuY2VvZiBQb3NpdGlvbiA/IHBvc2l0aW9uIDogbmV3IFBvc2l0aW9uKHBvc2l0aW9uKVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlcyB0aGUgY3Vyc29yIGV2ZW50cyBiZWhhdmlvci5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAgICAgKiBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkuc2V0SWdub3JlQ3Vyc29yRXZlbnRzKHRydWUpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGlnbm9yZSBgdHJ1ZWAgdG8gaWdub3JlIHRoZSBjdXJzb3IgZXZlbnRzOyBgZmFsc2VgIHRvIHByb2Nlc3MgdGhlbSBhcyB1c3VhbC5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0SWdub3JlQ3Vyc29yRXZlbnRzKGlnbm9yZSkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9pZ25vcmVfY3Vyc29yX2V2ZW50cycsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IGlnbm9yZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RhcnRzIGRyYWdnaW5nIHRoZSB3aW5kb3cuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zdGFydERyYWdnaW5nKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzdGFydERyYWdnaW5nKCkge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHN0YXJ0X2RyYWdnaW5nJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyByZXNpemUtZHJhZ2dpbmcgdGhlIHdpbmRvdy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnN0YXJ0UmVzaXplRHJhZ2dpbmcoKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm4gQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHN0YXJ0UmVzaXplRHJhZ2dpbmcoZGlyZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c3RhcnRfcmVzaXplX2RyYWdnaW5nJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogZGlyZWN0aW9uXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBiYWRnZSBjb3VudC4gSXQgaXMgYXBwIHdpZGUgYW5kIG5vdCBzcGVjaWZpYyB0byB0aGlzIHdpbmRvdy5cbiAgICAgKlxuICAgICAqICMjIyMgUGxhdGZvcm0tc3BlY2lmaWNcbiAgICAgKlxuICAgICAqIC0gKipXaW5kb3dzKio6IFVuc3VwcG9ydGVkLiBVc2UgQHtsaW5rY29kZSBXaW5kb3cuc2V0T3ZlcmxheUljb259IGluc3RlYWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEJhZGdlQ291bnQoNSk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY291bnQgVGhlIGJhZGdlIGNvdW50LiBVc2UgYHVuZGVmaW5lZGAgdG8gcmVtb3ZlIHRoZSBiYWRnZS5cbiAgICAgKiBAcmV0dXJuIEEgcHJvbWlzZSBpbmRpY2F0aW5nIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUgb2YgdGhlIG9wZXJhdGlvbi5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRCYWRnZUNvdW50KGNvdW50KSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X2JhZGdlX2NvdW50Jywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogY291bnRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGJhZGdlIGNvbnQgKiptYWNPUyBvbmx5KiouXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldEJhZGdlTGFiZWwoXCJIZWxsb1wiKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBsYWJlbCBUaGUgYmFkZ2UgbGFiZWwuIFVzZSBgdW5kZWZpbmVkYCB0byByZW1vdmUgdGhlIGJhZGdlLlxuICAgICAqIEByZXR1cm4gQSBwcm9taXNlIGluZGljYXRpbmcgdGhlIHN1Y2Nlc3Mgb3IgZmFpbHVyZSBvZiB0aGUgb3BlcmF0aW9uLlxuICAgICAqL1xuICAgIGFzeW5jIHNldEJhZGdlTGFiZWwobGFiZWwpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfYmFkZ2VfbGFiZWwnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBsYWJlbFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgb3ZlcmxheSBpY29uLiAqKldpbmRvd3Mgb25seSoqXG4gICAgICogVGhlIG92ZXJsYXkgaWNvbiBjYW4gYmUgc2V0IGZvciBldmVyeSB3aW5kb3cuXG4gICAgICpcbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB5b3UgbWF5IG5lZWQgdGhlIGBpbWFnZS1pY29gIG9yIGBpbWFnZS1wbmdgIENhcmdvIGZlYXR1cmVzIHRvIHVzZSB0aGlzIEFQSS5cbiAgICAgKiBUbyBlbmFibGUgaXQsIGNoYW5nZSB5b3VyIENhcmdvLnRvbWwgZmlsZTpcbiAgICAgKlxuICAgICAqIGBgYHRvbWxcbiAgICAgKiBbZGVwZW5kZW5jaWVzXVxuICAgICAqIHRhdXJpID0geyB2ZXJzaW9uID0gXCIuLi5cIiwgZmVhdHVyZXMgPSBbXCIuLi5cIiwgXCJpbWFnZS1wbmdcIl0gfVxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICAgICAqIGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5zZXRPdmVybGF5SWNvbihcIi90YXVyaS9hd2Vzb21lLnBuZ1wiKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpY29uIEljb24gYnl0ZXMgb3IgcGF0aCB0byB0aGUgaWNvbiBmaWxlLiBVc2UgYHVuZGVmaW5lZGAgdG8gcmVtb3ZlIHRoZSBvdmVybGF5IGljb24uXG4gICAgICogQHJldHVybiBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0T3ZlcmxheUljb24oaWNvbikge1xuICAgICAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fHNldF9vdmVybGF5X2ljb24nLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiBpY29uID8gdHJhbnNmb3JtSW1hZ2UoaWNvbikgOiB1bmRlZmluZWRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHRhc2tiYXIgcHJvZ3Jlc3Mgc3RhdGUuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqTGludXggLyBtYWNPUyoqOiBQcm9ncmVzcyBiYXIgaXMgYXBwLXdpZGUgYW5kIG5vdCBzcGVjaWZpYyB0byB0aGlzIHdpbmRvdy5cbiAgICAgKiAtICoqTGludXgqKjogT25seSBzdXBwb3J0ZWQgZGVza3RvcCBlbnZpcm9ubWVudHMgd2l0aCBgbGlidW5pdHlgIChlLmcuIEdOT01FKS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3csIFByb2dyZXNzQmFyU3RhdHVzIH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL3dpbmRvdyc7XG4gICAgICogYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLnNldFByb2dyZXNzQmFyKHtcbiAgICAgKiAgIHN0YXR1czogUHJvZ3Jlc3NCYXJTdGF0dXMuTm9ybWFsLFxuICAgICAqICAgcHJvZ3Jlc3M6IDUwLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybiBBIHByb21pc2UgaW5kaWNhdGluZyB0aGUgc3VjY2VzcyBvciBmYWlsdXJlIG9mIHRoZSBvcGVyYXRpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2V0UHJvZ3Jlc3NCYXIoc3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfcHJvZ3Jlc3NfYmFyJywge1xuICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsXG4gICAgICAgICAgICB2YWx1ZTogc3RhdGVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgd2hldGhlciB0aGUgd2luZG93IHNob3VsZCBiZSB2aXNpYmxlIG9uIGFsbCB3b3Jrc3BhY2VzIG9yIHZpcnR1YWwgZGVza3RvcHMuXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqV2luZG93cyAvIGlPUyAvIEFuZHJvaWQ6KiogVW5zdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBAc2luY2UgMi4wLjBcbiAgICAgKi9cbiAgICBhc3luYyBzZXRWaXNpYmxlT25BbGxXb3Jrc3BhY2VzKHZpc2libGUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfdmlzaWJsZV9vbl9hbGxfd29ya3NwYWNlcycsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IHZpc2libGVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHRpdGxlIGJhciBzdHlsZS4gKiptYWNPUyBvbmx5KiouXG4gICAgICpcbiAgICAgKiBAc2luY2UgMi4wLjBcbiAgICAgKi9cbiAgICBhc3luYyBzZXRUaXRsZUJhclN0eWxlKHN0eWxlKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8c2V0X3RpdGxlX2Jhcl9zdHlsZScsIHtcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLFxuICAgICAgICAgICAgdmFsdWU6IHN0eWxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgd2luZG93IHRoZW1lLCBwYXNzIGluIGBudWxsYCBvciBgdW5kZWZpbmVkYCB0byBmb2xsb3cgc3lzdGVtIHRoZW1lXG4gICAgICpcbiAgICAgKiAjIyMjIFBsYXRmb3JtLXNwZWNpZmljXG4gICAgICpcbiAgICAgKiAtICoqTGludXggLyBtYWNPUyoqOiBUaGVtZSBpcyBhcHAtd2lkZSBhbmQgbm90IHNwZWNpZmljIHRvIHRoaXMgd2luZG93LlxuICAgICAqIC0gKippT1MgLyBBbmRyb2lkOioqIFVuc3VwcG9ydGVkLlxuICAgICAqXG4gICAgICogQHNpbmNlIDIuMC4wXG4gICAgICovXG4gICAgYXN5bmMgc2V0VGhlbWUodGhlbWUpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xzZXRfdGhlbWUnLCB7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5sYWJlbCxcbiAgICAgICAgICAgIHZhbHVlOiB0aGVtZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gTGlzdGVuZXJzXG4gICAgLyoqXG4gICAgICogTGlzdGVuIHRvIHdpbmRvdyByZXNpemUuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSBcIkB0YXVyaS1hcHBzL2FwaS93aW5kb3dcIjtcbiAgICAgKiBjb25zdCB1bmxpc3RlbiA9IGF3YWl0IGdldEN1cnJlbnRXaW5kb3coKS5vblJlc2l6ZWQoKHsgcGF5bG9hZDogc2l6ZSB9KSA9PiB7XG4gICAgICogIGNvbnNvbGUubG9nKCdXaW5kb3cgcmVzaXplZCcsIHNpemUpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8geW91IG5lZWQgdG8gY2FsbCB1bmxpc3RlbiBpZiB5b3VyIGhhbmRsZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZFxuICAgICAqIHVubGlzdGVuKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgcmVzb2x2aW5nIHRvIGEgZnVuY3Rpb24gdG8gdW5saXN0ZW4gdG8gdGhlIGV2ZW50LlxuICAgICAqIE5vdGUgdGhhdCByZW1vdmluZyB0aGUgbGlzdGVuZXIgaXMgcmVxdWlyZWQgaWYgeW91ciBsaXN0ZW5lciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICAgICAqL1xuICAgIGFzeW5jIG9uUmVzaXplZChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RlbihUYXVyaUV2ZW50LldJTkRPV19SRVNJWkVELCAoZSkgPT4ge1xuICAgICAgICAgICAgZS5wYXlsb2FkID0gbmV3IFBoeXNpY2FsU2l6ZShlLnBheWxvYWQpO1xuICAgICAgICAgICAgaGFuZGxlcihlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byB3aW5kb3cgbW92ZS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL3dpbmRvd1wiO1xuICAgICAqIGNvbnN0IHVubGlzdGVuID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm9uTW92ZWQoKHsgcGF5bG9hZDogcG9zaXRpb24gfSkgPT4ge1xuICAgICAqICBjb25zb2xlLmxvZygnV2luZG93IG1vdmVkJywgcG9zaXRpb24pO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8geW91IG5lZWQgdG8gY2FsbCB1bmxpc3RlbiBpZiB5b3VyIGhhbmRsZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZFxuICAgICAqIHVubGlzdGVuKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgcmVzb2x2aW5nIHRvIGEgZnVuY3Rpb24gdG8gdW5saXN0ZW4gdG8gdGhlIGV2ZW50LlxuICAgICAqIE5vdGUgdGhhdCByZW1vdmluZyB0aGUgbGlzdGVuZXIgaXMgcmVxdWlyZWQgaWYgeW91ciBsaXN0ZW5lciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICAgICAqL1xuICAgIGFzeW5jIG9uTW92ZWQoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW4oVGF1cmlFdmVudC5XSU5ET1dfTU9WRUQsIChlKSA9PiB7XG4gICAgICAgICAgICBlLnBheWxvYWQgPSBuZXcgUGh5c2ljYWxQb3NpdGlvbihlLnBheWxvYWQpO1xuICAgICAgICAgICAgaGFuZGxlcihlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byB3aW5kb3cgY2xvc2UgcmVxdWVzdGVkLiBFbWl0dGVkIHdoZW4gdGhlIHVzZXIgcmVxdWVzdHMgdG8gY2xvc2VzIHRoZSB3aW5kb3cuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBpbXBvcnQgeyBnZXRDdXJyZW50V2luZG93IH0gZnJvbSBcIkB0YXVyaS1hcHBzL2FwaS93aW5kb3dcIjtcbiAgICAgKiBpbXBvcnQgeyBjb25maXJtIH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL2RpYWxvZyc7XG4gICAgICogY29uc3QgdW5saXN0ZW4gPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkub25DbG9zZVJlcXVlc3RlZChhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgKiAgIGNvbnN0IGNvbmZpcm1lZCA9IGF3YWl0IGNvbmZpcm0oJ0FyZSB5b3Ugc3VyZT8nKTtcbiAgICAgKiAgIGlmICghY29uZmlybWVkKSB7XG4gICAgICogICAgIC8vIHVzZXIgZGlkIG5vdCBjb25maXJtIGNsb3NpbmcgdGhlIHdpbmRvdzsgbGV0J3MgcHJldmVudCBpdFxuICAgICAqICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAqICAgfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8geW91IG5lZWQgdG8gY2FsbCB1bmxpc3RlbiBpZiB5b3VyIGhhbmRsZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZFxuICAgICAqIHVubGlzdGVuKCk7XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgcmVzb2x2aW5nIHRvIGEgZnVuY3Rpb24gdG8gdW5saXN0ZW4gdG8gdGhlIGV2ZW50LlxuICAgICAqIE5vdGUgdGhhdCByZW1vdmluZyB0aGUgbGlzdGVuZXIgaXMgcmVxdWlyZWQgaWYgeW91ciBsaXN0ZW5lciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkLlxuICAgICAqL1xuICAgIGFzeW5jIG9uQ2xvc2VSZXF1ZXN0ZWQoaGFuZGxlcikge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW1pc3VzZWQtcHJvbWlzZXNcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuKFRhdXJpRXZlbnQuV0lORE9XX0NMT1NFX1JFUVVFU1RFRCwgYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBldnQgPSBuZXcgQ2xvc2VSZXF1ZXN0ZWRFdmVudChldmVudCk7XG4gICAgICAgICAgICBhd2FpdCBoYW5kbGVyKGV2dCk7XG4gICAgICAgICAgICBpZiAoIWV2dC5pc1ByZXZlbnREZWZhdWx0KCkpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byBhIGZpbGUgZHJvcCBldmVudC5cbiAgICAgKiBUaGUgbGlzdGVuZXIgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgaG92ZXJzIHRoZSBzZWxlY3RlZCBmaWxlcyBvbiB0aGUgd2VidmlldyxcbiAgICAgKiBkcm9wcyB0aGUgZmlsZXMgb3IgY2FuY2VscyB0aGUgb3BlcmF0aW9uLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvd2Vidmlld1wiO1xuICAgICAqIGNvbnN0IHVubGlzdGVuID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm9uRHJhZ0Ryb3BFdmVudCgoZXZlbnQpID0+IHtcbiAgICAgKiAgaWYgKGV2ZW50LnBheWxvYWQudHlwZSA9PT0gJ292ZXInKSB7XG4gICAgICogICAgY29uc29sZS5sb2coJ1VzZXIgaG92ZXJpbmcnLCBldmVudC5wYXlsb2FkLnBvc2l0aW9uKTtcbiAgICAgKiAgfSBlbHNlIGlmIChldmVudC5wYXlsb2FkLnR5cGUgPT09ICdkcm9wJykge1xuICAgICAqICAgIGNvbnNvbGUubG9nKCdVc2VyIGRyb3BwZWQnLCBldmVudC5wYXlsb2FkLnBhdGhzKTtcbiAgICAgKiAgfSBlbHNlIHtcbiAgICAgKiAgICBjb25zb2xlLmxvZygnRmlsZSBkcm9wIGNhbmNlbGxlZCcpO1xuICAgICAqICB9XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyB5b3UgbmVlZCB0byBjYWxsIHVubGlzdGVuIGlmIHlvdXIgaGFuZGxlciBnb2VzIG91dCBvZiBzY29wZSBlLmcuIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkXG4gICAgICogdW5saXN0ZW4oKTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSByZXNvbHZpbmcgdG8gYSBmdW5jdGlvbiB0byB1bmxpc3RlbiB0byB0aGUgZXZlbnQuXG4gICAgICogTm90ZSB0aGF0IHJlbW92aW5nIHRoZSBsaXN0ZW5lciBpcyByZXF1aXJlZCBpZiB5b3VyIGxpc3RlbmVyIGdvZXMgb3V0IG9mIHNjb3BlIGUuZy4gdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQuXG4gICAgICovXG4gICAgYXN5bmMgb25EcmFnRHJvcEV2ZW50KGhhbmRsZXIpIHtcbiAgICAgICAgY29uc3QgdW5saXN0ZW5EcmFnID0gYXdhaXQgdGhpcy5saXN0ZW4oVGF1cmlFdmVudC5EUkFHX0VOVEVSLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZXIoe1xuICAgICAgICAgICAgICAgIC4uLmV2ZW50LFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgcGF0aHM6IGV2ZW50LnBheWxvYWQucGF0aHMsXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBuZXcgUGh5c2ljYWxQb3NpdGlvbihldmVudC5wYXlsb2FkLnBvc2l0aW9uKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdW5saXN0ZW5EcmFnT3ZlciA9IGF3YWl0IHRoaXMubGlzdGVuKFRhdXJpRXZlbnQuRFJBR19PVkVSLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZXIoe1xuICAgICAgICAgICAgICAgIC4uLmV2ZW50LFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ292ZXInLFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogbmV3IFBoeXNpY2FsUG9zaXRpb24oZXZlbnQucGF5bG9hZC5wb3NpdGlvbilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHVubGlzdGVuRHJvcCA9IGF3YWl0IHRoaXMubGlzdGVuKFRhdXJpRXZlbnQuRFJBR19EUk9QLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZXIoe1xuICAgICAgICAgICAgICAgIC4uLmV2ZW50LFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Ryb3AnLFxuICAgICAgICAgICAgICAgICAgICBwYXRoczogZXZlbnQucGF5bG9hZC5wYXRocyxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IG5ldyBQaHlzaWNhbFBvc2l0aW9uKGV2ZW50LnBheWxvYWQucG9zaXRpb24pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB1bmxpc3RlbkNhbmNlbCA9IGF3YWl0IHRoaXMubGlzdGVuKFRhdXJpRXZlbnQuRFJBR19MRUFWRSwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBoYW5kbGVyKHsgLi4uZXZlbnQsIHBheWxvYWQ6IHsgdHlwZTogJ2xlYXZlJyB9IH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHVubGlzdGVuRHJhZygpO1xuICAgICAgICAgICAgdW5saXN0ZW5Ecm9wKCk7XG4gICAgICAgICAgICB1bmxpc3RlbkRyYWdPdmVyKCk7XG4gICAgICAgICAgICB1bmxpc3RlbkNhbmNlbCgpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0ZW4gdG8gd2luZG93IGZvY3VzIGNoYW5nZS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL3dpbmRvd1wiO1xuICAgICAqIGNvbnN0IHVubGlzdGVuID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm9uRm9jdXNDaGFuZ2VkKCh7IHBheWxvYWQ6IGZvY3VzZWQgfSkgPT4ge1xuICAgICAqICBjb25zb2xlLmxvZygnRm9jdXMgY2hhbmdlZCwgd2luZG93IGlzIGZvY3VzZWQ/ICcgKyBmb2N1c2VkKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIHlvdSBuZWVkIHRvIGNhbGwgdW5saXN0ZW4gaWYgeW91ciBoYW5kbGVyIGdvZXMgb3V0IG9mIHNjb3BlIGUuZy4gdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWRcbiAgICAgKiB1bmxpc3RlbigpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHJlc29sdmluZyB0byBhIGZ1bmN0aW9uIHRvIHVubGlzdGVuIHRvIHRoZSBldmVudC5cbiAgICAgKiBOb3RlIHRoYXQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGlmIHlvdXIgbGlzdGVuZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZC5cbiAgICAgKi9cbiAgICBhc3luYyBvbkZvY3VzQ2hhbmdlZChoYW5kbGVyKSB7XG4gICAgICAgIGNvbnN0IHVubGlzdGVuRm9jdXMgPSBhd2FpdCB0aGlzLmxpc3RlbihUYXVyaUV2ZW50LldJTkRPV19GT0NVUywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBoYW5kbGVyKHsgLi4uZXZlbnQsIHBheWxvYWQ6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB1bmxpc3RlbkJsdXIgPSBhd2FpdCB0aGlzLmxpc3RlbihUYXVyaUV2ZW50LldJTkRPV19CTFVSLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZXIoeyAuLi5ldmVudCwgcGF5bG9hZDogZmFsc2UgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdW5saXN0ZW5Gb2N1cygpO1xuICAgICAgICAgICAgdW5saXN0ZW5CbHVyKCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byB3aW5kb3cgc2NhbGUgY2hhbmdlLiBFbWl0dGVkIHdoZW4gdGhlIHdpbmRvdydzIHNjYWxlIGZhY3RvciBoYXMgY2hhbmdlZC5cbiAgICAgKiBUaGUgZm9sbG93aW5nIHVzZXIgYWN0aW9ucyBjYW4gY2F1c2UgRFBJIGNoYW5nZXM6XG4gICAgICogLSBDaGFuZ2luZyB0aGUgZGlzcGxheSdzIHJlc29sdXRpb24uXG4gICAgICogLSBDaGFuZ2luZyB0aGUgZGlzcGxheSdzIHNjYWxlIGZhY3RvciAoZS5nLiBpbiBDb250cm9sIFBhbmVsIG9uIFdpbmRvd3MpLlxuICAgICAqIC0gTW92aW5nIHRoZSB3aW5kb3cgdG8gYSBkaXNwbGF5IHdpdGggYSBkaWZmZXJlbnQgc2NhbGUgZmFjdG9yLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0eXBlc2NyaXB0XG4gICAgICogaW1wb3J0IHsgZ2V0Q3VycmVudFdpbmRvdyB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvd2luZG93XCI7XG4gICAgICogY29uc3QgdW5saXN0ZW4gPSBhd2FpdCBnZXRDdXJyZW50V2luZG93KCkub25TY2FsZUNoYW5nZWQoKHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICogIGNvbnNvbGUubG9nKCdTY2FsZSBjaGFuZ2VkJywgcGF5bG9hZC5zY2FsZUZhY3RvciwgcGF5bG9hZC5zaXplKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIHlvdSBuZWVkIHRvIGNhbGwgdW5saXN0ZW4gaWYgeW91ciBoYW5kbGVyIGdvZXMgb3V0IG9mIHNjb3BlIGUuZy4gdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWRcbiAgICAgKiB1bmxpc3RlbigpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHJlc29sdmluZyB0byBhIGZ1bmN0aW9uIHRvIHVubGlzdGVuIHRvIHRoZSBldmVudC5cbiAgICAgKiBOb3RlIHRoYXQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGlmIHlvdXIgbGlzdGVuZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZC5cbiAgICAgKi9cbiAgICBhc3luYyBvblNjYWxlQ2hhbmdlZChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RlbihUYXVyaUV2ZW50LldJTkRPV19TQ0FMRV9GQUNUT1JfQ0hBTkdFRCwgaGFuZGxlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiB0byB0aGUgc3lzdGVtIHRoZW1lIGNoYW5nZS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGltcG9ydCB7IGdldEN1cnJlbnRXaW5kb3cgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL3dpbmRvd1wiO1xuICAgICAqIGNvbnN0IHVubGlzdGVuID0gYXdhaXQgZ2V0Q3VycmVudFdpbmRvdygpLm9uVGhlbWVDaGFuZ2VkKCh7IHBheWxvYWQ6IHRoZW1lIH0pID0+IHtcbiAgICAgKiAgY29uc29sZS5sb2coJ05ldyB0aGVtZTogJyArIHRoZW1lKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIHlvdSBuZWVkIHRvIGNhbGwgdW5saXN0ZW4gaWYgeW91ciBoYW5kbGVyIGdvZXMgb3V0IG9mIHNjb3BlIGUuZy4gdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWRcbiAgICAgKiB1bmxpc3RlbigpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHJlc29sdmluZyB0byBhIGZ1bmN0aW9uIHRvIHVubGlzdGVuIHRvIHRoZSBldmVudC5cbiAgICAgKiBOb3RlIHRoYXQgcmVtb3ZpbmcgdGhlIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGlmIHlvdXIgbGlzdGVuZXIgZ29lcyBvdXQgb2Ygc2NvcGUgZS5nLiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZC5cbiAgICAgKi9cbiAgICBhc3luYyBvblRoZW1lQ2hhbmdlZChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RlbihUYXVyaUV2ZW50LldJTkRPV19USEVNRV9DSEFOR0VELCBoYW5kbGVyKTtcbiAgICB9XG59XG4vKipcbiAqIEJhY2tncm91bmQgdGhyb3R0bGluZyBwb2xpY3lcbiAqXG4gKiBAc2luY2UgMi4wLjBcbiAqL1xudmFyIEJhY2tncm91bmRUaHJvdHRsaW5nUG9saWN5O1xuKGZ1bmN0aW9uIChCYWNrZ3JvdW5kVGhyb3R0bGluZ1BvbGljeSkge1xuICAgIEJhY2tncm91bmRUaHJvdHRsaW5nUG9saWN5W1wiRGlzYWJsZWRcIl0gPSBcImRpc2FibGVkXCI7XG4gICAgQmFja2dyb3VuZFRocm90dGxpbmdQb2xpY3lbXCJUaHJvdHRsZVwiXSA9IFwidGhyb3R0bGVcIjtcbiAgICBCYWNrZ3JvdW5kVGhyb3R0bGluZ1BvbGljeVtcIlN1c3BlbmRcIl0gPSBcInN1c3BlbmRcIjtcbn0pKEJhY2tncm91bmRUaHJvdHRsaW5nUG9saWN5IHx8IChCYWNrZ3JvdW5kVGhyb3R0bGluZ1BvbGljeSA9IHt9KSk7XG4vKipcbiAqIFBsYXRmb3JtLXNwZWNpZmljIHdpbmRvdyBlZmZlY3RzXG4gKlxuICogQHNpbmNlIDIuMC4wXG4gKi9cbnZhciBFZmZlY3Q7XG4oZnVuY3Rpb24gKEVmZmVjdCkge1xuICAgIC8qKlxuICAgICAqIEEgZGVmYXVsdCBtYXRlcmlhbCBhcHByb3ByaWF0ZSBmb3IgdGhlIHZpZXcncyBlZmZlY3RpdmVBcHBlYXJhbmNlLiAgKiptYWNPUyAxMC4xNC0qKlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgc2luY2UgbWFjT1MgMTAuMTQuIFlvdSBzaG91bGQgaW5zdGVhZCBjaG9vc2UgYW4gYXBwcm9wcmlhdGUgc2VtYW50aWMgbWF0ZXJpYWwuXG4gICAgICovXG4gICAgRWZmZWN0W1wiQXBwZWFyYW5jZUJhc2VkXCJdID0gXCJhcHBlYXJhbmNlQmFzZWRcIjtcbiAgICAvKipcbiAgICAgKiAgKiptYWNPUyAxMC4xNC0qKlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgc2luY2UgbWFjT1MgMTAuMTQuIFVzZSBhIHNlbWFudGljIG1hdGVyaWFsIGluc3RlYWQuXG4gICAgICovXG4gICAgRWZmZWN0W1wiTGlnaHRcIl0gPSBcImxpZ2h0XCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQtKipcbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIHNpbmNlIG1hY09TIDEwLjE0LiBVc2UgYSBzZW1hbnRpYyBtYXRlcmlhbCBpbnN0ZWFkLlxuICAgICAqL1xuICAgIEVmZmVjdFtcIkRhcmtcIl0gPSBcImRhcmtcIjtcbiAgICAvKipcbiAgICAgKiAgKiptYWNPUyAxMC4xNC0qKlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgc2luY2UgbWFjT1MgMTAuMTQuIFVzZSBhIHNlbWFudGljIG1hdGVyaWFsIGluc3RlYWQuXG4gICAgICovXG4gICAgRWZmZWN0W1wiTWVkaXVtTGlnaHRcIl0gPSBcIm1lZGl1bUxpZ2h0XCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQtKipcbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIHNpbmNlIG1hY09TIDEwLjE0LiBVc2UgYSBzZW1hbnRpYyBtYXRlcmlhbCBpbnN0ZWFkLlxuICAgICAqL1xuICAgIEVmZmVjdFtcIlVsdHJhRGFya1wiXSA9IFwidWx0cmFEYXJrXCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTArKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJUaXRsZWJhclwiXSA9IFwidGl0bGViYXJcIjtcbiAgICAvKipcbiAgICAgKiAgKiptYWNPUyAxMC4xMCsqKlxuICAgICAqL1xuICAgIEVmZmVjdFtcIlNlbGVjdGlvblwiXSA9IFwic2VsZWN0aW9uXCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTErKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJNZW51XCJdID0gXCJtZW51XCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTErKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJQb3BvdmVyXCJdID0gXCJwb3BvdmVyXCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTErKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJTaWRlYmFyXCJdID0gXCJzaWRlYmFyXCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQrKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJIZWFkZXJWaWV3XCJdID0gXCJoZWFkZXJWaWV3XCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQrKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJTaGVldFwiXSA9IFwic2hlZXRcIjtcbiAgICAvKipcbiAgICAgKiAgKiptYWNPUyAxMC4xNCsqKlxuICAgICAqL1xuICAgIEVmZmVjdFtcIldpbmRvd0JhY2tncm91bmRcIl0gPSBcIndpbmRvd0JhY2tncm91bmRcIjtcbiAgICAvKipcbiAgICAgKiAgKiptYWNPUyAxMC4xNCsqKlxuICAgICAqL1xuICAgIEVmZmVjdFtcIkh1ZFdpbmRvd1wiXSA9IFwiaHVkV2luZG93XCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQrKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJGdWxsU2NyZWVuVUlcIl0gPSBcImZ1bGxTY3JlZW5VSVwiO1xuICAgIC8qKlxuICAgICAqICAqKm1hY09TIDEwLjE0KyoqXG4gICAgICovXG4gICAgRWZmZWN0W1wiVG9vbHRpcFwiXSA9IFwidG9vbHRpcFwiO1xuICAgIC8qKlxuICAgICAqICAqKm1hY09TIDEwLjE0KyoqXG4gICAgICovXG4gICAgRWZmZWN0W1wiQ29udGVudEJhY2tncm91bmRcIl0gPSBcImNvbnRlbnRCYWNrZ3JvdW5kXCI7XG4gICAgLyoqXG4gICAgICogICoqbWFjT1MgMTAuMTQrKipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJVbmRlcldpbmRvd0JhY2tncm91bmRcIl0gPSBcInVuZGVyV2luZG93QmFja2dyb3VuZFwiO1xuICAgIC8qKlxuICAgICAqICAqKm1hY09TIDEwLjE0KyoqXG4gICAgICovXG4gICAgRWZmZWN0W1wiVW5kZXJQYWdlQmFja2dyb3VuZFwiXSA9IFwidW5kZXJQYWdlQmFja2dyb3VuZFwiO1xuICAgIC8qKlxuICAgICAqICAqKldpbmRvd3MgMTEgT25seSoqXG4gICAgICovXG4gICAgRWZmZWN0W1wiTWljYVwiXSA9IFwibWljYVwiO1xuICAgIC8qKlxuICAgICAqICoqV2luZG93cyA3LzEwLzExKDIySDEpIE9ubHkqKlxuICAgICAqXG4gICAgICogIyMjIyBOb3Rlc1xuICAgICAqXG4gICAgICogVGhpcyBlZmZlY3QgaGFzIGJhZCBwZXJmb3JtYW5jZSB3aGVuIHJlc2l6aW5nL2RyYWdnaW5nIHRoZSB3aW5kb3cgb24gV2luZG93cyAxMSBidWlsZCAyMjYyMS5cbiAgICAgKi9cbiAgICBFZmZlY3RbXCJCbHVyXCJdID0gXCJibHVyXCI7XG4gICAgLyoqXG4gICAgICogKipXaW5kb3dzIDEwLzExKipcbiAgICAgKlxuICAgICAqICMjIyMgTm90ZXNcbiAgICAgKlxuICAgICAqIFRoaXMgZWZmZWN0IGhhcyBiYWQgcGVyZm9ybWFuY2Ugd2hlbiByZXNpemluZy9kcmFnZ2luZyB0aGUgd2luZG93IG9uIFdpbmRvd3MgMTAgdjE5MDMrIGFuZCBXaW5kb3dzIDExIGJ1aWxkIDIyMDAwLlxuICAgICAqL1xuICAgIEVmZmVjdFtcIkFjcnlsaWNcIl0gPSBcImFjcnlsaWNcIjtcbiAgICAvKipcbiAgICAgKiBUYWJiZWQgZWZmZWN0IHRoYXQgbWF0Y2hlcyB0aGUgc3lzdGVtIGRhcmsgcGVyZWZlbmNlICoqV2luZG93cyAxMSBPbmx5KipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJUYWJiZWRcIl0gPSBcInRhYmJlZFwiO1xuICAgIC8qKlxuICAgICAqIFRhYmJlZCBlZmZlY3Qgd2l0aCBkYXJrIG1vZGUgYnV0IG9ubHkgaWYgZGFyayBtb2RlIGlzIGVuYWJsZWQgb24gdGhlIHN5c3RlbSAqKldpbmRvd3MgMTEgT25seSoqXG4gICAgICovXG4gICAgRWZmZWN0W1wiVGFiYmVkRGFya1wiXSA9IFwidGFiYmVkRGFya1wiO1xuICAgIC8qKlxuICAgICAqIFRhYmJlZCBlZmZlY3Qgd2l0aCBsaWdodCBtb2RlICoqV2luZG93cyAxMSBPbmx5KipcbiAgICAgKi9cbiAgICBFZmZlY3RbXCJUYWJiZWRMaWdodFwiXSA9IFwidGFiYmVkTGlnaHRcIjtcbn0pKEVmZmVjdCB8fCAoRWZmZWN0ID0ge30pKTtcbi8qKlxuICogV2luZG93IGVmZmVjdCBzdGF0ZSAqKm1hY09TIG9ubHkqKlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2RvY3VtZW50YXRpb24vYXBwa2l0L25zdmlzdWFsZWZmZWN0dmlldy9zdGF0ZVxuICpcbiAqIEBzaW5jZSAyLjAuMFxuICovXG52YXIgRWZmZWN0U3RhdGU7XG4oZnVuY3Rpb24gKEVmZmVjdFN0YXRlKSB7XG4gICAgLyoqXG4gICAgICogIE1ha2Ugd2luZG93IGVmZmVjdCBzdGF0ZSBmb2xsb3cgdGhlIHdpbmRvdydzIGFjdGl2ZSBzdGF0ZSAqKm1hY09TIG9ubHkqKlxuICAgICAqL1xuICAgIEVmZmVjdFN0YXRlW1wiRm9sbG93c1dpbmRvd0FjdGl2ZVN0YXRlXCJdID0gXCJmb2xsb3dzV2luZG93QWN0aXZlU3RhdGVcIjtcbiAgICAvKipcbiAgICAgKiAgTWFrZSB3aW5kb3cgZWZmZWN0IHN0YXRlIGFsd2F5cyBhY3RpdmUgKiptYWNPUyBvbmx5KipcbiAgICAgKi9cbiAgICBFZmZlY3RTdGF0ZVtcIkFjdGl2ZVwiXSA9IFwiYWN0aXZlXCI7XG4gICAgLyoqXG4gICAgICogIE1ha2Ugd2luZG93IGVmZmVjdCBzdGF0ZSBhbHdheXMgaW5hY3RpdmUgKiptYWNPUyBvbmx5KipcbiAgICAgKi9cbiAgICBFZmZlY3RTdGF0ZVtcIkluYWN0aXZlXCJdID0gXCJpbmFjdGl2ZVwiO1xufSkoRWZmZWN0U3RhdGUgfHwgKEVmZmVjdFN0YXRlID0ge30pKTtcbmZ1bmN0aW9uIG1hcE1vbml0b3IobSkge1xuICAgIHJldHVybiBtID09PSBudWxsXG4gICAgICAgID8gbnVsbFxuICAgICAgICA6IHtcbiAgICAgICAgICAgIG5hbWU6IG0ubmFtZSxcbiAgICAgICAgICAgIHNjYWxlRmFjdG9yOiBtLnNjYWxlRmFjdG9yLFxuICAgICAgICAgICAgcG9zaXRpb246IG5ldyBQaHlzaWNhbFBvc2l0aW9uKG0ucG9zaXRpb24pLFxuICAgICAgICAgICAgc2l6ZTogbmV3IFBoeXNpY2FsU2l6ZShtLnNpemUpXG4gICAgICAgIH07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIG1vbml0b3Igb24gd2hpY2ggdGhlIHdpbmRvdyBjdXJyZW50bHkgcmVzaWRlcy5cbiAqIFJldHVybnMgYG51bGxgIGlmIGN1cnJlbnQgbW9uaXRvciBjYW4ndCBiZSBkZXRlY3RlZC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBjdXJyZW50TW9uaXRvciB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICogY29uc3QgbW9uaXRvciA9IGN1cnJlbnRNb25pdG9yKCk7XG4gKiBgYGBcbiAqXG4gKiBAc2luY2UgMS4wLjBcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY3VycmVudE1vbml0b3IoKSB7XG4gICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xjdXJyZW50X21vbml0b3InKS50aGVuKG1hcE1vbml0b3IpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBwcmltYXJ5IG1vbml0b3Igb2YgdGhlIHN5c3RlbS5cbiAqIFJldHVybnMgYG51bGxgIGlmIGl0IGNhbid0IGlkZW50aWZ5IGFueSBtb25pdG9yIGFzIGEgcHJpbWFyeSBvbmUuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgcHJpbWFyeU1vbml0b3IgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvd2luZG93JztcbiAqIGNvbnN0IG1vbml0b3IgPSBwcmltYXJ5TW9uaXRvcigpO1xuICogYGBgXG4gKlxuICogQHNpbmNlIDEuMC4wXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHByaW1hcnlNb25pdG9yKCkge1xuICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8cHJpbWFyeV9tb25pdG9yJykudGhlbihtYXBNb25pdG9yKTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgbW9uaXRvciB0aGF0IGNvbnRhaW5zIHRoZSBnaXZlbiBwb2ludC4gUmV0dXJucyBgbnVsbGAgaWYgY2FuJ3QgZmluZCBhbnkuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgbW9uaXRvckZyb21Qb2ludCB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICogY29uc3QgbW9uaXRvciA9IG1vbml0b3JGcm9tUG9pbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBzaW5jZSAxLjAuMFxuICovXG5hc3luYyBmdW5jdGlvbiBtb25pdG9yRnJvbVBvaW50KHgsIHkpIHtcbiAgICByZXR1cm4gaW52b2tlKCdwbHVnaW46d2luZG93fG1vbml0b3JfZnJvbV9wb2ludCcsIHtcbiAgICAgICAgeCxcbiAgICAgICAgeVxuICAgIH0pLnRoZW4obWFwTW9uaXRvcik7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGxpc3Qgb2YgYWxsIHRoZSBtb25pdG9ycyBhdmFpbGFibGUgb24gdGhlIHN5c3RlbS5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBhdmFpbGFibGVNb25pdG9ycyB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS93aW5kb3cnO1xuICogY29uc3QgbW9uaXRvcnMgPSBhdmFpbGFibGVNb25pdG9ycygpO1xuICogYGBgXG4gKlxuICogQHNpbmNlIDEuMC4wXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGF2YWlsYWJsZU1vbml0b3JzKCkge1xuICAgIHJldHVybiBpbnZva2UoJ3BsdWdpbjp3aW5kb3d8YXZhaWxhYmxlX21vbml0b3JzJykudGhlbigobXMpID0+IG1zLm1hcChtYXBNb25pdG9yKSk7XG59XG4vKipcbiAqIEdldCB0aGUgY3Vyc29yIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHRoZSB0b3AtbGVmdCBoYW5kIGNvcm5lciBvZiB0aGUgZGVza3RvcC5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIHRvcC1sZWZ0IGhhbmQgY29ybmVyIG9mIHRoZSBkZXNrdG9wIGlzIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBhcyB0aGUgc2NyZWVuLlxuICogSWYgdGhlIHVzZXIgdXNlcyBhIGRlc2t0b3Agd2l0aCBtdWx0aXBsZSBtb25pdG9ycyxcbiAqIHRoZSB0b3AtbGVmdCBoYW5kIGNvcm5lciBvZiB0aGUgZGVza3RvcCBpcyB0aGUgdG9wLWxlZnQgaGFuZCBjb3JuZXIgb2YgdGhlIG1haW4gbW9uaXRvciBvbiBXaW5kb3dzIGFuZCBtYWNPU1xuICogb3IgdGhlIHRvcC1sZWZ0IG9mIHRoZSBsZWZ0bW9zdCBtb25pdG9yIG9uIFgxMS5cbiAqXG4gKiBUaGUgY29vcmRpbmF0ZXMgY2FuIGJlIG5lZ2F0aXZlIGlmIHRoZSB0b3AtbGVmdCBoYW5kIGNvcm5lciBvZiB0aGUgd2luZG93IGlzIG91dHNpZGUgb2YgdGhlIHZpc2libGUgc2NyZWVuIHJlZ2lvbi5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gY3Vyc29yUG9zaXRpb24oKSB7XG4gICAgcmV0dXJuIGludm9rZSgncGx1Z2luOndpbmRvd3xjdXJzb3JfcG9zaXRpb24nKS50aGVuKCh2KSA9PiBuZXcgUGh5c2ljYWxQb3NpdGlvbih2KSk7XG59XG5cbmV4cG9ydCB7IENsb3NlUmVxdWVzdGVkRXZlbnQsIEVmZmVjdCwgRWZmZWN0U3RhdGUsIFBoeXNpY2FsUG9zaXRpb24sIFBoeXNpY2FsU2l6ZSwgUHJvZ3Jlc3NCYXJTdGF0dXMsIFVzZXJBdHRlbnRpb25UeXBlLCBXaW5kb3csIGF2YWlsYWJsZU1vbml0b3JzLCBjdXJyZW50TW9uaXRvciwgY3Vyc29yUG9zaXRpb24sIGdldEFsbFdpbmRvd3MsIGdldEN1cnJlbnRXaW5kb3csIG1vbml0b3JGcm9tUG9pbnQsIHByaW1hcnlNb25pdG9yIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/window.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWMsYUFBYSwrQ0FBK0MsZ0RBQWdELGVBQWUsUUFBUSxJQUFJLDBDQUEwQyx5Q0FBeUMsU0FBZ0IsZ0JBQWdCLHdDQUF3QyxJQUFJLG1EQUFtRCxTQUFTLCtEQUFlLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz81MWUyIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Icon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, ref)=>{\n    let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest } = param;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...rest\n    }, [\n        ...iconNode.map((param)=>{\n            let [tag, attrs] = param;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n        }),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]);\n});\n_c1 = Icon;\n //# sourceMappingURL=Icon.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUF3QkEsTUFBTUEscUJBQU9DLGlEQUFVQSxNQUNyQixRQVdFQztRQVZBLEVBQ0VDLFFBQVEsZ0JBQ1JDLE9BQU8sSUFDUEMsY0FBYyxHQUNkQyxtQkFBQSxFQUNBQyxZQUFZLElBQ1pDLFFBQUEsRUFDQUMsUUFBQSxFQUNBLEdBQUdDLE1BQUE7SUFJRSxxQkFBQUMsb0RBQWFBLENBQ2xCLE9BQ0E7UUFDRVQ7UUFDQSxHQUFHVSw2REFBQTtRQUNIQyxPQUFPVDtRQUNQVSxRQUFRVjtRQUNSVyxRQUFRWjtRQUNSRSxhQUFhQyxzQkFBdUJVLE9BQU9YLGVBQWUsS0FBTVcsT0FBT1osUUFBUUM7UUFDL0VFLFdBQVdVLGtFQUFZQSxDQUFDLFVBQVVWO1FBQ2xDLEdBQUdHLElBQUE7SUFDTCxHQUNBO1dBQ0tELFNBQVNTLEdBQUEsQ0FBSTtnQkFBQyxDQUFDQyxLQUFLQyxNQUFXO2lDQUFBVCxvREFBYUEsQ0FBQ1EsS0FBS0M7O1dBQ2pEQyxNQUFNQyxPQUFBLENBQVFkLFlBQVlBLFdBQVc7WUFBQ0E7U0FBUTtLQUNwRDtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvSWNvbi50cz9hZGFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGVmYXVsdEF0dHJpYnV0ZXMgZnJvbSAnLi9kZWZhdWx0QXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJY29uTm9kZSwgTHVjaWRlUHJvcHMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcyB9IGZyb20gJ0BsdWNpZGUvc2hhcmVkJztcblxuaW50ZXJmYWNlIEljb25Db21wb25lbnRQcm9wcyBleHRlbmRzIEx1Y2lkZVByb3BzIHtcbiAgaWNvbk5vZGU6IEljb25Ob2RlO1xufVxuXG4vKipcbiAqIEx1Y2lkZSBpY29uIGNvbXBvbmVudFxuICpcbiAqIEBjb21wb25lbnQgSWNvblxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcHMuY29sb3IgLSBUaGUgY29sb3Igb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9wcy5zaXplIC0gVGhlIHNpemUgb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9wcy5zdHJva2VXaWR0aCAtIFRoZSBzdHJva2Ugd2lkdGggb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gcHJvcHMuYWJzb2x1dGVTdHJva2VXaWR0aCAtIFdoZXRoZXIgdG8gdXNlIGFic29sdXRlIHN0cm9rZSB3aWR0aFxuICogQHBhcmFtIHtzdHJpbmd9IHByb3BzLmNsYXNzTmFtZSAtIFRoZSBjbGFzcyBuYW1lIG9mIHRoZSBpY29uXG4gKiBAcGFyYW0ge0ljb25Ob2RlfSBwcm9wcy5jaGlsZHJlbiAtIFRoZSBjaGlsZHJlbiBvZiB0aGUgaWNvblxuICogQHBhcmFtIHtJY29uTm9kZX0gcHJvcHMuaWNvbk5vZGUgLSBUaGUgaWNvbiBub2RlIG9mIHRoZSBpY29uXG4gKlxuICogQHJldHVybnMge0ZvcndhcmRSZWZFeG90aWNDb21wb25lbnR9IEx1Y2lkZUljb25cbiAqL1xuY29uc3QgSWNvbiA9IGZvcndhcmRSZWY8U1ZHU1ZHRWxlbWVudCwgSWNvbkNvbXBvbmVudFByb3BzPihcbiAgKFxuICAgIHtcbiAgICAgIGNvbG9yID0gJ2N1cnJlbnRDb2xvcicsXG4gICAgICBzaXplID0gMjQsXG4gICAgICBzdHJva2VXaWR0aCA9IDIsXG4gICAgICBhYnNvbHV0ZVN0cm9rZVdpZHRoLFxuICAgICAgY2xhc3NOYW1lID0gJycsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGljb25Ob2RlLFxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgcmVmLFxuICApID0+IHtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChcbiAgICAgICdzdmcnLFxuICAgICAge1xuICAgICAgICByZWYsXG4gICAgICAgIC4uLmRlZmF1bHRBdHRyaWJ1dGVzLFxuICAgICAgICB3aWR0aDogc2l6ZSxcbiAgICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgICBzdHJva2U6IGNvbG9yLFxuICAgICAgICBzdHJva2VXaWR0aDogYWJzb2x1dGVTdHJva2VXaWR0aCA/IChOdW1iZXIoc3Ryb2tlV2lkdGgpICogMjQpIC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICAgIGNsYXNzTmFtZTogbWVyZ2VDbGFzc2VzKCdsdWNpZGUnLCBjbGFzc05hbWUpLFxuICAgICAgICAuLi5yZXN0LFxuICAgICAgfSxcbiAgICAgIFtcbiAgICAgICAgLi4uaWNvbk5vZGUubWFwKChbdGFnLCBhdHRyc10pID0+IGNyZWF0ZUVsZW1lbnQodGFnLCBhdHRycykpLFxuICAgICAgICAuLi4oQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pLFxuICAgICAgXSxcbiAgICApO1xuICB9LFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSWNvbjtcbiJdLCJuYW1lcyI6WyJJY29uIiwiZm9yd2FyZFJlZiIsInJlZiIsImNvbG9yIiwic2l6ZSIsInN0cm9rZVdpZHRoIiwiYWJzb2x1dGVTdHJva2VXaWR0aCIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiaWNvbk5vZGUiLCJyZXN0IiwiY3JlYXRlRWxlbWVudCIsImRlZmF1bHRBdHRyaWJ1dGVzIiwid2lkdGgiLCJoZWlnaHQiLCJzdHJva2UiLCJOdW1iZXIiLCJtZXJnZUNsYXNzZXMiLCJtYXAiLCJ0YWciLCJhdHRycyIsIkFycmF5IiwiaXNBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { className, ...props } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            ref,\n            iconNode,\n            className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide-\".concat((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)(iconName)), className),\n            ...props\n        });\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFXTSxNQUFBQSxtQkFBbUIsQ0FBQ0MsVUFBa0JDO0lBQzFDLE1BQU1DLDBCQUFZQyxpREFBVUEsQ0FBNkIsUUFBMEJDO1lBQXpCLEVBQUVDLFNBQVcsS0FBR0MsT0FBUzs2QkFDakZDLG9EQUFhQSxDQUFDQyxnREFBSUEsRUFBRTtZQUNsQko7WUFDQUg7WUFDQUksV0FBV0ksa0VBQVlBLENBQUMsVUFBK0IsT0FBckJDLGlFQUFXQSxDQUFDVixZQUFhSztZQUMzRCxHQUFHQyxLQUFBO1FBQUE7O0lBSUdKLFVBQUFTLFdBQUEsR0FBYyxHQUFXLE9BQVJYO0lBRXBCLE9BQUFFO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9jcmVhdGVMdWNpZGVJY29uLnRzPzA0ODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcywgdG9LZWJhYkNhc2UgfSBmcm9tICdAbHVjaWRlL3NoYXJlZCc7XG5pbXBvcnQgeyBJY29uTm9kZSwgTHVjaWRlUHJvcHMgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBJY29uIGZyb20gJy4vSWNvbic7XG5cbi8qKlxuICogQ3JlYXRlIGEgTHVjaWRlIGljb24gY29tcG9uZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gaWNvbk5hbWVcbiAqIEBwYXJhbSB7YXJyYXl9IGljb25Ob2RlXG4gKiBAcmV0dXJucyB7Rm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudH0gTHVjaWRlSWNvblxuICovXG5jb25zdCBjcmVhdGVMdWNpZGVJY29uID0gKGljb25OYW1lOiBzdHJpbmcsIGljb25Ob2RlOiBJY29uTm9kZSkgPT4ge1xuICBjb25zdCBDb21wb25lbnQgPSBmb3J3YXJkUmVmPFNWR1NWR0VsZW1lbnQsIEx1Y2lkZVByb3BzPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT5cbiAgICBjcmVhdGVFbGVtZW50KEljb24sIHtcbiAgICAgIHJlZixcbiAgICAgIGljb25Ob2RlLFxuICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzZXMoYGx1Y2lkZS0ke3RvS2ViYWJDYXNlKGljb25OYW1lKX1gLCBjbGFzc05hbWUpLFxuICAgICAgLi4ucHJvcHMsXG4gICAgfSksXG4gICk7XG5cbiAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gYCR7aWNvbk5hbWV9YDtcblxuICByZXR1cm4gQ29tcG9uZW50O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTHVjaWRlSWNvbjtcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiaWNvbk5hbWUiLCJpY29uTm9kZSIsIkNvbXBvbmVudCIsImZvcndhcmRSZWYiLCJyZWYiLCJjbGFzc05hbWUiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJJY29uIiwibWVyZ2VDbGFzc2VzIiwidG9LZWJhYkNhc2UiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQUEsSUFBZUEsb0JBQUE7SUFDYkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGdCQUFnQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2RlZmF1bHRBdHRyaWJ1dGVzLnRzPzM3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICB4bWxuczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyxcbiAgd2lkdGg6IDI0LFxuICBoZWlnaHQ6IDI0LFxuICB2aWV3Qm94OiAnMCAwIDI0IDI0JyxcbiAgZmlsbDogJ25vbmUnLFxuICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICBzdHJva2VXaWR0aDogMixcbiAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcbiAgc3Ryb2tlTGluZWpvaW46ICdyb3VuZCcsXG59O1xuIl0sIm5hbWVzIjpbImRlZmF1bHRBdHRyaWJ1dGVzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/minus.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/minus.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Minus; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"path\",\n        {\n            d: \"M5 12h14\",\n            key: \"1ays0h\"\n        }\n    ]\n];\nconst Minus = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Minus\", __iconNode);\n //# sourceMappingURL=minus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbWludXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBR2EsTUFBQUEsYUFBdUI7SUFBQztRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFZQyxLQUFLO1FBQVM7S0FBRTtDQUFBO0FBYXpFLE1BQUFDLFFBQVFDLGdFQUFnQkEsQ0FBQyxTQUFTSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL21pbnVzLnRzPzk4MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5pbXBvcnQgeyBJY29uTm9kZSB9IGZyb20gJy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IF9faWNvbk5vZGU6IEljb25Ob2RlID0gW1sncGF0aCcsIHsgZDogJ001IDEyaDE0Jywga2V5OiAnMWF5czBoJyB9XV07XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBNaW51c1xuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0pOTlNBeE1tZ3hOQ0lnTHo0S1BDOXpkbWMrQ2c9PSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvbWludXNcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBNaW51cyA9IGNyZWF0ZUx1Y2lkZUljb24oJ01pbnVzJywgX19pY29uTm9kZSk7XG5cbmV4cG9ydCBkZWZhdWx0IE1pbnVzO1xuIl0sIm5hbWVzIjpbIl9faWNvbk5vZGUiLCJkIiwia2V5IiwiTWludXMiLCJjcmVhdGVMdWNpZGVJY29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/minus.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/square.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/square.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Square; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ]\n];\nconst Square = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Square\", __iconNode);\n //# sourceMappingURL=square.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvc3F1YXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUdPLE1BQU1BLGFBQXVCO0lBQ2xDO1FBQUM7UUFBUTtZQUFFQyxPQUFPO1lBQU1DLFFBQVE7WUFBTUMsR0FBRztZQUFLQyxHQUFHO1lBQUtDLElBQUk7WUFBS0MsS0FBSztRQUFBO0tBQVU7Q0FDaEY7QUFhTSxNQUFBQyxTQUFTQyxnRUFBZ0JBLENBQUMsVUFBVVIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9pY29ucy9zcXVhcmUudHM/YWNmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcbmltcG9ydCB7IEljb25Ob2RlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgX19pY29uTm9kZTogSWNvbk5vZGUgPSBbXG4gIFsncmVjdCcsIHsgd2lkdGg6ICcxOCcsIGhlaWdodDogJzE4JywgeDogJzMnLCB5OiAnMycsIHJ4OiAnMicsIGtleTogJ2FmaXR2NycgfV0sXG5dO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgU3F1YXJlXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjbVZqZENCM2FXUjBhRDBpTVRnaUlHaGxhV2RvZEQwaU1UZ2lJSGc5SWpNaUlIazlJak1pSUhKNFBTSXlJaUF2UGdvOEwzTjJaejRLKSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9zcXVhcmVcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBTcXVhcmUgPSBjcmVhdGVMdWNpZGVJY29uKCdTcXVhcmUnLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IGRlZmF1bHQgU3F1YXJlO1xuIl0sIm5hbWVzIjpbIl9faWNvbk5vZGUiLCJ3aWR0aCIsImhlaWdodCIsIngiLCJ5IiwicngiLCJrZXkiLCJTcXVhcmUiLCJjcmVhdGVMdWNpZGVJY29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/square.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/x.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ X; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n];\nconst X = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"X\", __iconNode);\n //# sourceMappingURL=x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMveC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFHTyxNQUFNQSxhQUF1QjtJQUNsQztRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFjQyxLQUFLO1FBQUE7S0FBVTtJQUMzQztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQUE7S0FBVTtDQUM3QztBQWFNLE1BQUFDLElBQUlDLGdFQUFnQkEsQ0FBQyxLQUFLSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2ljb25zL3gudHM/YmMzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcbmltcG9ydCB7IEljb25Ob2RlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgX19pY29uTm9kZTogSWNvbk5vZGUgPSBbXG4gIFsncGF0aCcsIHsgZDogJ00xOCA2IDYgMTgnLCBrZXk6ICcxYmw1ZjgnIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdtNiA2IDEyIDEyJywga2V5OiAnZDhiazZ2JyB9XSxcbl07XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBYXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NVGdnTmlBMklERTRJaUF2UGdvZ0lEeHdZWFJvSUdROUltMDJJRFlnTVRJZ01USWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy94XG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgWCA9IGNyZWF0ZUx1Y2lkZUljb24oJ1gnLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IGRlZmF1bHQgWDtcbiJdLCJuYW1lcyI6WyJfX2ljb25Ob2RlIiwiZCIsImtleSIsIlgiLCJjcmVhdGVMdWNpZGVJY29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeClasses: function() { return /* binding */ mergeClasses; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = function() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter((className, index, array)=>{\n        return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n    }).join(\" \").trim();\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBUWEsTUFBQUEsY0FBYyxDQUFDQyxTQUMxQkEsT0FBT0MsT0FBQSxDQUFRLHNCQUFzQixTQUFTQyxXQUFZO0FBK0IvQyxNQUFBQyxlQUFlO3FDQUEyQ0M7UUFBQUE7O1dBQ3JFQSxRQUNHQyxNQUFBLENBQU8sQ0FBQ0MsV0FBV0MsT0FBT0M7UUFFdkIsT0FBQUMsUUFBUUgsY0FDUEEsVUFBcUJJLElBQUEsT0FBVyxNQUNqQ0YsTUFBTUcsT0FBUSxDQUFBTCxlQUFlQztJQUVqQyxHQUNDSyxJQUFBLENBQUssS0FDTEYsSUFBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc2hhcmVkL3NyYy91dGlscy50cz82N2U4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbWVsVG9QYXNjYWwgfSBmcm9tICcuL3V0aWxpdHktdHlwZXMnO1xuXG4vKipcbiAqIENvbnZlcnRzIHN0cmluZyB0byBrZWJhYiBjYXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gQSBrZWJhYml6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmc6IHN0cmluZykgPT5cbiAgc3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG5cbi8qKlxuICogQ29udmVydHMgc3RyaW5nIHRvIGNhbWVsIGNhc2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIGNhbWVsaXplZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGNvbnN0IHRvQ2FtZWxDYXNlID0gPFQgZXh0ZW5kcyBzdHJpbmc+KHN0cmluZzogVCkgPT5cbiAgc3RyaW5nLnJlcGxhY2UoL14oW0EtWl0pfFtcXHMtX10rKFxcdykvZywgKG1hdGNoLCBwMSwgcDIpID0+XG4gICAgcDIgPyBwMi50b1VwcGVyQ2FzZSgpIDogcDEudG9Mb3dlckNhc2UoKSxcbiAgKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBzdHJpbmcgdG8gcGFzY2FsIGNhc2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHBhc2NhbGl6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b1Bhc2NhbENhc2UgPSA8VCBleHRlbmRzIHN0cmluZz4oc3RyaW5nOiBUKTogQ2FtZWxUb1Bhc2NhbDxUPiA9PiB7XG4gIGNvbnN0IGNhbWVsQ2FzZSA9IHRvQ2FtZWxDYXNlKHN0cmluZyk7XG5cbiAgcmV0dXJuIChjYW1lbENhc2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjYW1lbENhc2Uuc2xpY2UoMSkpIGFzIENhbWVsVG9QYXNjYWw8VD47XG59O1xuXG4vKipcbiAqIE1lcmdlcyBjbGFzc2VzIGludG8gYSBzaW5nbGUgc3RyaW5nXG4gKlxuICogQHBhcmFtIHthcnJheX0gY2xhc3Nlc1xuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgY2xhc3Nlc1xuICovXG5leHBvcnQgY29uc3QgbWVyZ2VDbGFzc2VzID0gPENsYXNzVHlwZSA9IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGw+KC4uLmNsYXNzZXM6IENsYXNzVHlwZVtdKSA9PlxuICBjbGFzc2VzXG4gICAgLmZpbHRlcigoY2xhc3NOYW1lLCBpbmRleCwgYXJyYXkpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIEJvb2xlYW4oY2xhc3NOYW1lKSAmJlxuICAgICAgICAoY2xhc3NOYW1lIGFzIHN0cmluZykudHJpbSgpICE9PSAnJyAmJlxuICAgICAgICBhcnJheS5pbmRleE9mKGNsYXNzTmFtZSkgPT09IGluZGV4XG4gICAgICApO1xuICAgIH0pXG4gICAgLmpvaW4oJyAnKVxuICAgIC50cmltKCk7XG4iXSwibmFtZXMiOlsidG9LZWJhYkNhc2UiLCJzdHJpbmciLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJtZXJnZUNsYXNzZXMiLCJjbGFzc2VzIiwiZmlsdGVyIiwiY2xhc3NOYW1lIiwiaW5kZXgiLCJhcnJheSIsIkJvb2xlYW4iLCJ0cmltIiwiaW5kZXhPZiIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-themes/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/next-themes/dist/index.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: function() { return /* binding */ J; },\n/* harmony export */   useTheme: function() { return /* binding */ z; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider,useTheme auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\nvar L = (e, r, s, u, d, m, l, h)=>{\n    let c = document.documentElement, v = [\n        \"light\",\n        \"dark\"\n    ];\n    function p(i) {\n        (Array.isArray(e) ? e : [\n            e\n        ]).forEach((y)=>{\n            let k = y === \"class\", S = k && m ? d.map((f)=>m[f] || f) : d;\n            k ? (c.classList.remove(...S), c.classList.add(i)) : c.setAttribute(y, i);\n        }), R(i);\n    }\n    function R(i) {\n        h && v.includes(i) && (c.style.colorScheme = i);\n    }\n    function a() {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    if (u) p(u);\n    else try {\n        let i = localStorage.getItem(r) || s, y = l && i === \"system\" ? a() : i;\n        p(y);\n    } catch (i) {}\n};\n_c = L;\nvar M = [\n    \"light\",\n    \"dark\"\n], Q = \"(prefers-color-scheme: dark)\", U = typeof window == \"undefined\", E = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0), N = {\n    setTheme: (e)=>{},\n    themes: []\n}, z = ()=>{\n    _s();\n    var e;\n    return (e = react__WEBPACK_IMPORTED_MODULE_0__.useContext(E)) != null ? e : N;\n}, J = (e)=>{\n    _s1();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(E) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, e.children) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_, {\n        ...e\n    });\n}, V = [\n    \"light\",\n    \"dark\"\n], _ = (param)=>{\n    let { forcedTheme: e, disableTransitionOnChange: r = !1, enableSystem: s = !0, enableColorScheme: u = !0, storageKey: d = \"theme\", themes: m = V, defaultTheme: l = s ? \"system\" : \"light\", attribute: h = \"data-theme\", value: c, children: v, nonce: p, scriptProps: R } = param;\n    _s2();\n    let [a, i] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>b(d, l)), [w, y] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>b(d)), k = c ? Object.values(c) : m, S = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((n)=>{\n        let o = n;\n        if (!o) return;\n        n === \"system\" && s && (o = I());\n        let T = c ? c[o] : o, C = r ? W(p) : null, P = document.documentElement, x = (g)=>{\n            g === \"class\" ? (P.classList.remove(...k), T && P.classList.add(T)) : g.startsWith(\"data-\") && (T ? P.setAttribute(g, T) : P.removeAttribute(g));\n        };\n        if (Array.isArray(h) ? h.forEach(x) : x(h), u) {\n            let g = M.includes(l) ? l : null, O = M.includes(o) ? o : g;\n            P.style.colorScheme = O;\n        }\n        C == null || C();\n    }, [\n        p\n    ]), f = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((n)=>{\n        let o = typeof n == \"function\" ? n(a) : n;\n        i(o);\n        try {\n            localStorage.setItem(d, o);\n        } catch (T) {}\n    }, [\n        a\n    ]), A = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((n)=>{\n        let o = I(n);\n        y(o), a === \"system\" && s && !e && S(\"system\");\n    }, [\n        a,\n        e\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let n = window.matchMedia(Q);\n        return n.addListener(A), A(n), ()=>n.removeListener(A);\n    }, [\n        A\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let n = (o)=>{\n            o.key === d && (o.newValue ? i(o.newValue) : f(l));\n        };\n        return window.addEventListener(\"storage\", n), ()=>window.removeEventListener(\"storage\", n);\n    }, [\n        f\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        S(e != null ? e : a);\n    }, [\n        e,\n        a\n    ]);\n    let D = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            theme: a,\n            setTheme: f,\n            forcedTheme: e,\n            resolvedTheme: a === \"system\" ? w : a,\n            themes: s ? [\n                ...m,\n                \"system\"\n            ] : m,\n            systemTheme: s ? w : void 0\n        }), [\n        a,\n        f,\n        e,\n        w,\n        s,\n        m\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(E.Provider, {\n        value: D\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(H, {\n        forcedTheme: e,\n        storageKey: d,\n        attribute: h,\n        enableSystem: s,\n        enableColorScheme: u,\n        defaultTheme: l,\n        value: c,\n        themes: m,\n        nonce: p,\n        scriptProps: R\n    }), v);\n}, H = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.memo((param)=>{\n    let { forcedTheme: e, storageKey: r, attribute: s, enableSystem: u, enableColorScheme: d, defaultTheme: m, value: l, themes: h, nonce: c, scriptProps: v } = param;\n    let p = JSON.stringify([\n        s,\n        r,\n        m,\n        e,\n        h,\n        l,\n        u,\n        d\n    ]).slice(1, -1);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"script\", {\n        ...v,\n        suppressHydrationWarning: !0,\n        nonce: typeof window == \"undefined\" ? c : \"\",\n        dangerouslySetInnerHTML: {\n            __html: \"(\".concat(L.toString(), \")(\").concat(p, \")\")\n        }\n    });\n}), b = (e, r)=>{\n    if (U) return;\n    let s;\n    try {\n        s = localStorage.getItem(e) || void 0;\n    } catch (u) {}\n    return s || r;\n}, W = (e)=>{\n    let r = document.createElement(\"style\");\n    return e && r.setAttribute(\"nonce\", e), r.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")), document.head.appendChild(r), ()=>{\n        window.getComputedStyle(document.body), setTimeout(()=>{\n            document.head.removeChild(r);\n        }, 1);\n    };\n}, I = (e)=>(e || (e = window.matchMedia(Q)), e.matches ? \"dark\" : \"light\");\n_s(z, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s1(J, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s2(_, \"gcpZ6OJmLTQL2EoKTtzQehu7ygM=\");\n\nvar _c;\n$RefreshReg$(_c, \"L\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: function() { return /* binding */ createTailwindMerge; },\n/* harmony export */   extendTailwindMerge: function() { return /* binding */ extendTailwindMerge; },\n/* harmony export */   fromTheme: function() { return /* binding */ fromTheme; },\n/* harmony export */   getDefaultConfig: function() { return /* binding */ getDefaultConfig; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   twJoin: function() { return /* binding */ twJoin; },\n/* harmony export */   twMerge: function() { return /* binding */ twMerge; },\n/* harmony export */   validators: function() { return /* binding */ validators; }\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\n//# sourceMappingURL=bundle-mjs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fpvpswaghd%2FDesktop%2Fprojects%2Ffyp%2Foptimus-tarui%2Fsrc%2Fcomponents%2Fui%2Ftitlebar.tsx%22%2C%22ids%22%3A%5B%22Titlebar%22%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);